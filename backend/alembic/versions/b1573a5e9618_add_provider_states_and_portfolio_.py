"""Add provider_states and portfolio_rationales tables

Revision ID: b1573a5e9618
Revises: 9beb31b07eb3
Create Date: 2025-08-17 19:55:47.316398

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b1573a5e9618'
down_revision: Union[str, Sequence[str], None] = '9beb31b07eb3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('correlation_cache_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cache_key', sa.String(length=128), nullable=False),
    sa.Column('entry_type', sa.Enum('MATRIX', 'FACTOR', 'COPULA_PARAMS', name='cacheentrytype'), nullable=False),
    sa.Column('payload_json', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cache_key')
    )
    op.create_index('idx_cache_created', 'correlation_cache_entries', ['created_at'], unique=False)
    op.create_index('idx_cache_key', 'correlation_cache_entries', ['cache_key'], unique=False)
    op.create_index('idx_cache_type_expires', 'correlation_cache_entries', ['entry_type', 'expires_at'], unique=False)
    op.create_index(op.f('ix_correlation_cache_entries_id'), 'correlation_cache_entries', ['id'], unique=False)
    op.create_table('correlation_clusters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sport', sa.String(length=10), nullable=False),
    sa.Column('cluster_key', sa.String(length=128), nullable=False),
    sa.Column('member_prop_ids', sa.JSON(), nullable=False),
    sa.Column('average_internal_r', sa.Float(), nullable=False),
    sa.Column('computed_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_cluster_computed', 'correlation_clusters', ['computed_at'], unique=False)
    op.create_index('idx_cluster_key', 'correlation_clusters', ['cluster_key'], unique=False)
    op.create_index('idx_cluster_sport', 'correlation_clusters', ['sport'], unique=False)
    op.create_index(op.f('ix_correlation_clusters_id'), 'correlation_clusters', ['id'], unique=False)
    op.create_table('correlation_factor_models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sport', sa.String(length=10), nullable=False),
    sa.Column('context_hash', sa.String(length=64), nullable=False),
    sa.Column('method', sa.Enum('PCA', 'SHRUNK', 'HYBRID', 'PEARSON', 'COPULA', name='correlationmethod'), nullable=False),
    sa.Column('factors_json', sa.JSON(), nullable=False),
    sa.Column('eigenvalues_json', sa.JSON(), nullable=False),
    sa.Column('explained_variance_ratio', sa.Float(), nullable=False),
    sa.Column('sample_size', sa.Integer(), nullable=False),
    sa.Column('version_tag', sa.String(length=50), nullable=False),
    sa.Column('computed_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sport', 'context_hash', 'method', 'version_tag', name='uq_factor_model')
    )
    op.create_index('idx_factor_computed', 'correlation_factor_models', ['computed_at'], unique=False)
    op.create_index('idx_factor_method', 'correlation_factor_models', ['method'], unique=False)
    op.create_index('idx_factor_sport_context', 'correlation_factor_models', ['sport', 'context_hash'], unique=False)
    op.create_index(op.f('ix_correlation_factor_models_id'), 'correlation_factor_models', ['id'], unique=False)
    op.create_table('historical_prop_outcomes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prop_id', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('prop_type', sa.String(length=50), nullable=False),
    sa.Column('event_date', sa.DateTime(), nullable=False),
    sa.Column('actual_value', sa.Float(), nullable=False),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_historical_event_date', 'historical_prop_outcomes', ['event_date'], unique=False)
    op.create_index('idx_historical_player_prop_date', 'historical_prop_outcomes', ['player_id', 'prop_type', 'event_date'], unique=False)
    op.create_index('idx_historical_prop_id', 'historical_prop_outcomes', ['prop_id'], unique=False)
    op.create_index('idx_historical_source', 'historical_prop_outcomes', ['source'], unique=False)
    op.create_index(op.f('ix_historical_prop_outcomes_id'), 'historical_prop_outcomes', ['id'], unique=False)
    op.create_table('model_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('version_tag', sa.String(length=50), nullable=False),
    sa.Column('model_type', sa.Enum('POISSON', 'NORMAL', 'NEG_BINOMIAL', 'RULE_BASED', name='modeltype'), nullable=False),
    sa.Column('hyperparams', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_model_created', 'model_versions', ['created_at'], unique=False)
    op.create_index('idx_model_name_version', 'model_versions', ['name', 'version_tag'], unique=False)
    op.create_index('idx_model_type', 'model_versions', ['model_type'], unique=False)
    op.create_index(op.f('ix_model_versions_id'), 'model_versions', ['id'], unique=False)
    op.create_table('monte_carlo_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('run_key', sa.String(length=128), nullable=False),
    sa.Column('legs_count', sa.Integer(), nullable=False),
    sa.Column('draws_requested', sa.Integer(), nullable=False),
    sa.Column('draws_executed', sa.Integer(), nullable=False),
    sa.Column('variance_estimate', sa.Float(), nullable=False),
    sa.Column('ev_independent', sa.Float(), nullable=False),
    sa.Column('ev_adjusted', sa.Float(), nullable=False),
    sa.Column('prob_joint', sa.Float(), nullable=False),
    sa.Column('distribution_snapshots_json', sa.JSON(), nullable=False),
    sa.Column('parameters_json', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('run_key')
    )
    op.create_index('idx_mc_created', 'monte_carlo_runs', ['created_at'], unique=False)
    op.create_index('idx_mc_legs_count', 'monte_carlo_runs', ['legs_count'], unique=False)
    op.create_index('idx_mc_run_key', 'monte_carlo_runs', ['run_key'], unique=False)
    op.create_index(op.f('ix_monte_carlo_runs_id'), 'monte_carlo_runs', ['id'], unique=False)
    op.create_table('optimization_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('objective', sa.Enum('EV', 'EV_VAR_RATIO', 'TARGET_PROB', name='optimizationobjective'), nullable=False),
    sa.Column('input_edge_ids', sa.JSON(), nullable=False),
    sa.Column('constraints_json', sa.JSON(), nullable=False),
    sa.Column('solution_ticket_sets', sa.JSON(), nullable=True),
    sa.Column('best_score', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('SUCCESS', 'FAILED', 'PARTIAL', 'RUNNING', name='optimizationstatus'), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_opt_best_score', 'optimization_runs', ['best_score'], unique=False)
    op.create_index('idx_opt_objective', 'optimization_runs', ['objective'], unique=False)
    op.create_index('idx_opt_status_created', 'optimization_runs', ['status', 'created_at'], unique=False)
    op.create_index(op.f('ix_optimization_runs_id'), 'optimization_runs', ['id'], unique=False)
    op.create_table('prop_correlation_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prop_id_a', sa.Integer(), nullable=False),
    sa.Column('prop_id_b', sa.Integer(), nullable=False),
    sa.Column('sport', sa.String(length=10), nullable=False),
    sa.Column('sample_size', sa.Integer(), nullable=False),
    sa.Column('pearson_r', sa.Float(), nullable=False),
    sa.Column('last_computed_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('context_hash', sa.String(length=64), nullable=False),
    sa.Column('method', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('prop_id_a', 'prop_id_b', 'context_hash', name='uq_prop_correlation')
    )
    op.create_index('idx_correlation_computed', 'prop_correlation_stats', ['last_computed_at'], unique=False)
    op.create_index('idx_correlation_context', 'prop_correlation_stats', ['context_hash'], unique=False)
    op.create_index('idx_correlation_prop_pair', 'prop_correlation_stats', ['prop_id_a', 'prop_id_b'], unique=False)
    op.create_index('idx_correlation_sport', 'prop_correlation_stats', ['sport'], unique=False)
    op.create_index(op.f('ix_prop_correlation_stats_id'), 'prop_correlation_stats', ['id'], unique=False)
    op.create_table('tickets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'SUBMITTED', 'CANCELLED', name='ticketstatus'), nullable=False),
    sa.Column('stake', sa.Float(), nullable=False),
    sa.Column('potential_payout', sa.Float(), nullable=False),
    sa.Column('estimated_ev', sa.Float(), nullable=False),
    sa.Column('legs_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_ticket_status_created', 'tickets', ['status', 'created_at'], unique=False)
    op.create_index('idx_ticket_submitted', 'tickets', ['submitted_at'], unique=False)
    op.create_index('idx_ticket_user_status', 'tickets', ['user_id', 'status'], unique=False)
    op.create_index(op.f('ix_tickets_id'), 'tickets', ['id'], unique=False)
    op.create_table('alert_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('rule_type', sa.Enum('EDGE_EV_THRESHOLD', 'LINE_MOVE', 'EV_DELTA', 'CORRELATION_RISK', 'BANKROLL_DRAWDOWN', name='alertruletype'), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('params', sa.JSON(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_triggered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('trigger_count', sa.Integer(), nullable=False),
    sa.Column('cooldown_minutes', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_alert_rules_active', 'alert_rules', ['active'], unique=False)
    op.create_index(op.f('ix_alert_rules_id'), 'alert_rules', ['id'], unique=False)
    op.create_index('ix_alert_rules_user', 'alert_rules', ['user_id'], unique=False)
    op.create_index(op.f('ix_alert_rules_user_id'), 'alert_rules', ['user_id'], unique=False)
    op.create_table('bankroll_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('strategy', sa.Enum('KELLY', 'FRACTIONAL_KELLY', 'FLAT', name='bankrollstrategy'), nullable=False),
    sa.Column('base_bankroll', sa.Float(), nullable=False),
    sa.Column('current_bankroll', sa.Float(), nullable=False),
    sa.Column('kelly_fraction', sa.Float(), nullable=True),
    sa.Column('flat_unit', sa.Float(), nullable=True),
    sa.Column('last_updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('max_stake_pct', sa.Float(), nullable=False),
    sa.Column('min_stake', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bankroll_profiles_id'), 'bankroll_profiles', ['id'], unique=False)
    op.create_index(op.f('ix_bankroll_profiles_user_id'), 'bankroll_profiles', ['user_id'], unique=False)
    op.create_index('ix_bankroll_user', 'bankroll_profiles', ['user_id'], unique=False)
    op.create_table('exposure_snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('player_id', sa.String(), nullable=True),
    sa.Column('prop_type', sa.String(length=50), nullable=True),
    sa.Column('correlation_cluster_id', sa.Integer(), nullable=True),
    sa.Column('total_staked', sa.Float(), nullable=False),
    sa.Column('tickets_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_exposure_composite', 'exposure_snapshots', ['user_id', 'date', 'player_id', 'prop_type', 'correlation_cluster_id'], unique=False)
    op.create_index(op.f('ix_exposure_snapshots_correlation_cluster_id'), 'exposure_snapshots', ['correlation_cluster_id'], unique=False)
    op.create_index(op.f('ix_exposure_snapshots_date'), 'exposure_snapshots', ['date'], unique=False)
    op.create_index(op.f('ix_exposure_snapshots_id'), 'exposure_snapshots', ['id'], unique=False)
    op.create_index(op.f('ix_exposure_snapshots_player_id'), 'exposure_snapshots', ['player_id'], unique=False)
    op.create_index(op.f('ix_exposure_snapshots_prop_type'), 'exposure_snapshots', ['prop_type'], unique=False)
    op.create_index(op.f('ix_exposure_snapshots_user_id'), 'exposure_snapshots', ['user_id'], unique=False)
    op.create_index('ix_exposure_user_date', 'exposure_snapshots', ['user_id', 'date'], unique=False)
    op.create_table('model_predictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_version_id', sa.Integer(), nullable=False),
    sa.Column('prop_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('prop_type', sa.String(length=50), nullable=False),
    sa.Column('mean', sa.Float(), nullable=False),
    sa.Column('variance', sa.Float(), nullable=False),
    sa.Column('distribution_family', sa.Enum('POISSON', 'NORMAL', 'NEG_BINOMIAL', name='distributionfamily'), nullable=False),
    sa.Column('sample_size', sa.Integer(), nullable=True),
    sa.Column('features_hash', sa.String(length=64), nullable=False),
    sa.Column('generated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['model_version_id'], ['model_versions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_prediction_generated', 'model_predictions', ['generated_at'], unique=False)
    op.create_index('idx_prediction_player', 'model_predictions', ['player_id'], unique=False)
    op.create_index('idx_prediction_prop_model', 'model_predictions', ['prop_id', 'model_version_id'], unique=False)
    op.create_index('idx_prediction_prop_type', 'model_predictions', ['prop_type'], unique=False)
    op.create_index(op.f('ix_model_predictions_id'), 'model_predictions', ['id'], unique=False)
    op.create_table('model_prop_type_defaults',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_version_id', sa.Integer(), nullable=False),
    sa.Column('prop_type', sa.String(length=50), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['model_version_id'], ['model_versions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('model_version_id', 'prop_type', name='uq_model_prop_type')
    )
    op.create_index('idx_prop_type_active', 'model_prop_type_defaults', ['prop_type', 'active'], unique=False)
    op.create_index(op.f('ix_model_prop_type_defaults_id'), 'model_prop_type_defaults', ['id'], unique=False)
    op.create_table('optimization_artifacts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('optimization_run_id', sa.Integer(), nullable=False),
    sa.Column('artifact_type', sa.Enum('TRACE', 'INTERMEDIATE_POP', 'HEURISTIC_STEP', name='artifacttype'), nullable=False),
    sa.Column('content', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['optimization_run_id'], ['optimization_runs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_artifact_created', 'optimization_artifacts', ['created_at'], unique=False)
    op.create_index('idx_artifact_run_type', 'optimization_artifacts', ['optimization_run_id', 'artifact_type'], unique=False)
    op.create_index(op.f('ix_optimization_artifacts_id'), 'optimization_artifacts', ['id'], unique=False)
    op.create_table('recommended_stakes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('edge_id', sa.Integer(), nullable=False),
    sa.Column('strategy_version', sa.String(length=50), nullable=False),
    sa.Column('recommended_stake', sa.Float(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('rationale', sa.String(length=1000), nullable=True),
    sa.Column('rationale_hash', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('kelly_multiplier', sa.Float(), nullable=True),
    sa.Column('risk_adjustment', sa.Float(), nullable=True),
    sa.Column('exposure_constraint', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'edge_id', 'strategy_version', name='uq_stake_recommendation')
    )
    op.create_index(op.f('ix_recommended_stakes_edge_id'), 'recommended_stakes', ['edge_id'], unique=False)
    op.create_index(op.f('ix_recommended_stakes_expires_at'), 'recommended_stakes', ['expires_at'], unique=False)
    op.create_index(op.f('ix_recommended_stakes_id'), 'recommended_stakes', ['id'], unique=False)
    op.create_index(op.f('ix_recommended_stakes_user_id'), 'recommended_stakes', ['user_id'], unique=False)
    op.create_index('ix_stake_expiry', 'recommended_stakes', ['expires_at'], unique=False)
    op.create_index('ix_stake_user_edge', 'recommended_stakes', ['user_id', 'edge_id'], unique=False)
    op.create_table('user_interest_signals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('player_id', sa.String(), nullable=True),
    sa.Column('prop_type', sa.String(length=50), nullable=True),
    sa.Column('signal_type', sa.Enum('EDGE_VIEW', 'TICKET_ADD', 'EXPLANATION_REQUEST', name='interestsignaltype'), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('context', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_interest_composite', 'user_interest_signals', ['user_id', 'player_id', 'prop_type'], unique=False)
    op.create_index('ix_interest_signals_date', 'user_interest_signals', ['user_id', 'created_at'], unique=False)
    op.create_index('ix_interest_signals_type', 'user_interest_signals', ['signal_type'], unique=False)
    op.create_index(op.f('ix_user_interest_signals_created_at'), 'user_interest_signals', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_interest_signals_id'), 'user_interest_signals', ['id'], unique=False)
    op.create_index(op.f('ix_user_interest_signals_player_id'), 'user_interest_signals', ['player_id'], unique=False)
    op.create_index(op.f('ix_user_interest_signals_prop_type'), 'user_interest_signals', ['prop_type'], unique=False)
    op.create_index(op.f('ix_user_interest_signals_user_id'), 'user_interest_signals', ['user_id'], unique=False)
    op.create_table('watchlists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_watchlist_user', 'watchlists', ['user_id'], unique=False)
    op.create_index(op.f('ix_watchlists_id'), 'watchlists', ['id'], unique=False)
    op.create_index(op.f('ix_watchlists_user_id'), 'watchlists', ['user_id'], unique=False)
    op.create_table('alerts_delivered',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('alert_rule_id', sa.Integer(), nullable=True),
    sa.Column('alert_type', sa.Enum('EDGE_EV_THRESHOLD', 'LINE_MOVE', 'EV_DELTA', 'CORRELATION_RISK', 'BANKROLL_DRAWDOWN', name='alertruletype'), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('content', sa.JSON(), nullable=False),
    sa.Column('delivery_channel', sa.Enum('IN_APP', 'EMAIL', 'WEBHOOK', name='deliverychannel'), nullable=False),
    sa.Column('status', sa.Enum('NEW', 'ACK', 'DISMISSED', name='alertstatus'), nullable=False),
    sa.Column('priority', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('acknowledged_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['alert_rule_id'], ['alert_rules.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_alerts_created', 'alerts_delivered', ['created_at'], unique=False)
    op.create_index(op.f('ix_alerts_delivered_created_at'), 'alerts_delivered', ['created_at'], unique=False)
    op.create_index(op.f('ix_alerts_delivered_id'), 'alerts_delivered', ['id'], unique=False)
    op.create_index(op.f('ix_alerts_delivered_status'), 'alerts_delivered', ['status'], unique=False)
    op.create_index(op.f('ix_alerts_delivered_user_id'), 'alerts_delivered', ['user_id'], unique=False)
    op.create_index('ix_alerts_status', 'alerts_delivered', ['status'], unique=False)
    op.create_index('ix_alerts_user', 'alerts_delivered', ['user_id'], unique=False)
    op.create_index('ix_alerts_user_status', 'alerts_delivered', ['user_id', 'status'], unique=False)
    op.create_table('valuations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model_prediction_id', sa.Integer(), nullable=False),
    sa.Column('prop_id', sa.Integer(), nullable=False),
    sa.Column('offered_line', sa.Float(), nullable=False),
    sa.Column('fair_line', sa.Float(), nullable=False),
    sa.Column('prob_over', sa.Float(), nullable=False),
    sa.Column('prob_under', sa.Float(), nullable=False),
    sa.Column('expected_value', sa.Float(), nullable=False),
    sa.Column('payout_schema', sa.JSON(), nullable=False),
    sa.Column('volatility_score', sa.Float(), nullable=False),
    sa.Column('valuation_hash', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['model_prediction_id'], ['model_predictions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('valuation_hash'),
    sa.UniqueConstraint('valuation_hash', name='uq_valuation_hash')
    )
    op.create_index('idx_valuation_hash', 'valuations', ['valuation_hash'], unique=False)
    op.create_index('idx_valuation_prop_model', 'valuations', ['prop_id', 'model_prediction_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_valuations_id'), 'valuations', ['id'], unique=False)
    op.create_table('watchlist_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('watchlist_id', sa.Integer(), nullable=False),
    sa.Column('prop_id', sa.String(), nullable=True),
    sa.Column('player_id', sa.String(), nullable=True),
    sa.Column('prop_type', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['watchlist_id'], ['watchlists.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('watchlist_id', 'prop_id', 'player_id', name='uq_watchlist_item')
    )
    op.create_index(op.f('ix_watchlist_items_id'), 'watchlist_items', ['id'], unique=False)
    op.create_index(op.f('ix_watchlist_items_player_id'), 'watchlist_items', ['player_id'], unique=False)
    op.create_index(op.f('ix_watchlist_items_prop_id'), 'watchlist_items', ['prop_id'], unique=False)
    op.create_index(op.f('ix_watchlist_items_prop_type'), 'watchlist_items', ['prop_type'], unique=False)
    op.create_index('ix_watchlist_items_watchlist', 'watchlist_items', ['watchlist_id'], unique=False)
    op.create_table('edges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('valuation_id', sa.Integer(), nullable=False),
    sa.Column('prop_id', sa.Integer(), nullable=False),
    sa.Column('model_version_id', sa.Integer(), nullable=False),
    sa.Column('edge_score', sa.Float(), nullable=False),
    sa.Column('ev', sa.Float(), nullable=False),
    sa.Column('prob_over', sa.Float(), nullable=False),
    sa.Column('offered_line', sa.Float(), nullable=False),
    sa.Column('fair_line', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'RETIRED', name='edgestatus'), nullable=True),
    sa.Column('correlation_cluster_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('retired_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['model_version_id'], ['model_versions.id'], ),
    sa.ForeignKeyConstraint(['valuation_id'], ['valuations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_edge_correlation', 'edges', ['correlation_cluster_id'], unique=False)
    op.create_index('idx_edge_prop_model_status', 'edges', ['prop_id', 'model_version_id', 'status'], unique=False)
    op.create_index('idx_edge_score', 'edges', ['edge_score'], unique=False)
    op.create_index('idx_edge_status_created', 'edges', ['status', 'created_at'], unique=False)
    op.create_index(op.f('ix_edges_id'), 'edges', ['id'], unique=False)
    op.create_table('explanations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('edge_id', sa.Integer(), nullable=False),
    sa.Column('model_version_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('prompt_version', sa.String(length=20), nullable=True),
    sa.Column('provider', sa.String(length=50), nullable=True),
    sa.Column('tokens_used', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['edge_id'], ['edges.id'], ),
    sa.ForeignKeyConstraint(['model_version_id'], ['model_versions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_explanation_created', 'explanations', ['created_at'], unique=False)
    op.create_index('idx_explanation_edge', 'explanations', ['edge_id'], unique=False)
    op.create_index('idx_explanation_model', 'explanations', ['model_version_id'], unique=False)
    op.create_index('idx_explanation_model_prompt', 'explanations', ['edge_id', 'model_version_id', 'prompt_version'], unique=False)
    op.create_index(op.f('ix_explanations_id'), 'explanations', ['id'], unique=False)
    op.create_table('ticket_legs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ticket_id', sa.Integer(), nullable=False),
    sa.Column('edge_id', sa.Integer(), nullable=False),
    sa.Column('prop_id', sa.Integer(), nullable=False),
    sa.Column('offered_line_snapshot', sa.Float(), nullable=False),
    sa.Column('prob_over_snapshot', sa.Float(), nullable=False),
    sa.Column('fair_line_snapshot', sa.Float(), nullable=False),
    sa.Column('valuation_hash_snapshot', sa.String(length=64), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['edge_id'], ['edges.id'], ),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_ticket_leg_edge', 'ticket_legs', ['edge_id'], unique=False)
    op.create_index('idx_ticket_leg_prop', 'ticket_legs', ['prop_id'], unique=False)
    op.create_index('idx_ticket_leg_ticket', 'ticket_legs', ['ticket_id'], unique=False)
    op.create_index(op.f('ix_ticket_legs_id'), 'ticket_legs', ['id'], unique=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               type_=sa.Integer(),
               nullable=True)
    op.alter_column('users', 'is_verified',
               existing_type=sa.BOOLEAN(),
               type_=sa.Integer(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'is_verified',
               existing_type=sa.Integer(),
               type_=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.Integer(),
               type_=sa.BOOLEAN(),
               nullable=False)
    op.drop_index(op.f('ix_ticket_legs_id'), table_name='ticket_legs')
    op.drop_index('idx_ticket_leg_ticket', table_name='ticket_legs')
    op.drop_index('idx_ticket_leg_prop', table_name='ticket_legs')
    op.drop_index('idx_ticket_leg_edge', table_name='ticket_legs')
    op.drop_table('ticket_legs')
    op.drop_index(op.f('ix_explanations_id'), table_name='explanations')
    op.drop_index('idx_explanation_model_prompt', table_name='explanations')
    op.drop_index('idx_explanation_model', table_name='explanations')
    op.drop_index('idx_explanation_edge', table_name='explanations')
    op.drop_index('idx_explanation_created', table_name='explanations')
    op.drop_table('explanations')
    op.drop_index(op.f('ix_edges_id'), table_name='edges')
    op.drop_index('idx_edge_status_created', table_name='edges')
    op.drop_index('idx_edge_score', table_name='edges')
    op.drop_index('idx_edge_prop_model_status', table_name='edges')
    op.drop_index('idx_edge_correlation', table_name='edges')
    op.drop_table('edges')
    op.drop_index('ix_watchlist_items_watchlist', table_name='watchlist_items')
    op.drop_index(op.f('ix_watchlist_items_prop_type'), table_name='watchlist_items')
    op.drop_index(op.f('ix_watchlist_items_prop_id'), table_name='watchlist_items')
    op.drop_index(op.f('ix_watchlist_items_player_id'), table_name='watchlist_items')
    op.drop_index(op.f('ix_watchlist_items_id'), table_name='watchlist_items')
    op.drop_table('watchlist_items')
    op.drop_index(op.f('ix_valuations_id'), table_name='valuations')
    op.drop_index('idx_valuation_prop_model', table_name='valuations')
    op.drop_index('idx_valuation_hash', table_name='valuations')
    op.drop_table('valuations')
    op.drop_index('ix_alerts_user_status', table_name='alerts_delivered')
    op.drop_index('ix_alerts_user', table_name='alerts_delivered')
    op.drop_index('ix_alerts_status', table_name='alerts_delivered')
    op.drop_index(op.f('ix_alerts_delivered_user_id'), table_name='alerts_delivered')
    op.drop_index(op.f('ix_alerts_delivered_status'), table_name='alerts_delivered')
    op.drop_index(op.f('ix_alerts_delivered_id'), table_name='alerts_delivered')
    op.drop_index(op.f('ix_alerts_delivered_created_at'), table_name='alerts_delivered')
    op.drop_index('ix_alerts_created', table_name='alerts_delivered')
    op.drop_table('alerts_delivered')
    op.drop_index(op.f('ix_watchlists_user_id'), table_name='watchlists')
    op.drop_index(op.f('ix_watchlists_id'), table_name='watchlists')
    op.drop_index('ix_watchlist_user', table_name='watchlists')
    op.drop_table('watchlists')
    op.drop_index(op.f('ix_user_interest_signals_user_id'), table_name='user_interest_signals')
    op.drop_index(op.f('ix_user_interest_signals_prop_type'), table_name='user_interest_signals')
    op.drop_index(op.f('ix_user_interest_signals_player_id'), table_name='user_interest_signals')
    op.drop_index(op.f('ix_user_interest_signals_id'), table_name='user_interest_signals')
    op.drop_index(op.f('ix_user_interest_signals_created_at'), table_name='user_interest_signals')
    op.drop_index('ix_interest_signals_type', table_name='user_interest_signals')
    op.drop_index('ix_interest_signals_date', table_name='user_interest_signals')
    op.drop_index('ix_interest_composite', table_name='user_interest_signals')
    op.drop_table('user_interest_signals')
    op.drop_index('ix_stake_user_edge', table_name='recommended_stakes')
    op.drop_index('ix_stake_expiry', table_name='recommended_stakes')
    op.drop_index(op.f('ix_recommended_stakes_user_id'), table_name='recommended_stakes')
    op.drop_index(op.f('ix_recommended_stakes_id'), table_name='recommended_stakes')
    op.drop_index(op.f('ix_recommended_stakes_expires_at'), table_name='recommended_stakes')
    op.drop_index(op.f('ix_recommended_stakes_edge_id'), table_name='recommended_stakes')
    op.drop_table('recommended_stakes')
    op.drop_index(op.f('ix_optimization_artifacts_id'), table_name='optimization_artifacts')
    op.drop_index('idx_artifact_run_type', table_name='optimization_artifacts')
    op.drop_index('idx_artifact_created', table_name='optimization_artifacts')
    op.drop_table('optimization_artifacts')
    op.drop_index(op.f('ix_model_prop_type_defaults_id'), table_name='model_prop_type_defaults')
    op.drop_index('idx_prop_type_active', table_name='model_prop_type_defaults')
    op.drop_table('model_prop_type_defaults')
    op.drop_index(op.f('ix_model_predictions_id'), table_name='model_predictions')
    op.drop_index('idx_prediction_prop_type', table_name='model_predictions')
    op.drop_index('idx_prediction_prop_model', table_name='model_predictions')
    op.drop_index('idx_prediction_player', table_name='model_predictions')
    op.drop_index('idx_prediction_generated', table_name='model_predictions')
    op.drop_table('model_predictions')
    op.drop_index('ix_exposure_user_date', table_name='exposure_snapshots')
    op.drop_index(op.f('ix_exposure_snapshots_user_id'), table_name='exposure_snapshots')
    op.drop_index(op.f('ix_exposure_snapshots_prop_type'), table_name='exposure_snapshots')
    op.drop_index(op.f('ix_exposure_snapshots_player_id'), table_name='exposure_snapshots')
    op.drop_index(op.f('ix_exposure_snapshots_id'), table_name='exposure_snapshots')
    op.drop_index(op.f('ix_exposure_snapshots_date'), table_name='exposure_snapshots')
    op.drop_index(op.f('ix_exposure_snapshots_correlation_cluster_id'), table_name='exposure_snapshots')
    op.drop_index('ix_exposure_composite', table_name='exposure_snapshots')
    op.drop_table('exposure_snapshots')
    op.drop_index('ix_bankroll_user', table_name='bankroll_profiles')
    op.drop_index(op.f('ix_bankroll_profiles_user_id'), table_name='bankroll_profiles')
    op.drop_index(op.f('ix_bankroll_profiles_id'), table_name='bankroll_profiles')
    op.drop_table('bankroll_profiles')
    op.drop_index(op.f('ix_alert_rules_user_id'), table_name='alert_rules')
    op.drop_index('ix_alert_rules_user', table_name='alert_rules')
    op.drop_index(op.f('ix_alert_rules_id'), table_name='alert_rules')
    op.drop_index('ix_alert_rules_active', table_name='alert_rules')
    op.drop_table('alert_rules')
    op.drop_index(op.f('ix_tickets_id'), table_name='tickets')
    op.drop_index('idx_ticket_user_status', table_name='tickets')
    op.drop_index('idx_ticket_submitted', table_name='tickets')
    op.drop_index('idx_ticket_status_created', table_name='tickets')
    op.drop_table('tickets')
    op.drop_index(op.f('ix_prop_correlation_stats_id'), table_name='prop_correlation_stats')
    op.drop_index('idx_correlation_sport', table_name='prop_correlation_stats')
    op.drop_index('idx_correlation_prop_pair', table_name='prop_correlation_stats')
    op.drop_index('idx_correlation_context', table_name='prop_correlation_stats')
    op.drop_index('idx_correlation_computed', table_name='prop_correlation_stats')
    op.drop_table('prop_correlation_stats')
    op.drop_index(op.f('ix_optimization_runs_id'), table_name='optimization_runs')
    op.drop_index('idx_opt_status_created', table_name='optimization_runs')
    op.drop_index('idx_opt_objective', table_name='optimization_runs')
    op.drop_index('idx_opt_best_score', table_name='optimization_runs')
    op.drop_table('optimization_runs')
    op.drop_index(op.f('ix_monte_carlo_runs_id'), table_name='monte_carlo_runs')
    op.drop_index('idx_mc_run_key', table_name='monte_carlo_runs')
    op.drop_index('idx_mc_legs_count', table_name='monte_carlo_runs')
    op.drop_index('idx_mc_created', table_name='monte_carlo_runs')
    op.drop_table('monte_carlo_runs')
    op.drop_index(op.f('ix_model_versions_id'), table_name='model_versions')
    op.drop_index('idx_model_type', table_name='model_versions')
    op.drop_index('idx_model_name_version', table_name='model_versions')
    op.drop_index('idx_model_created', table_name='model_versions')
    op.drop_table('model_versions')
    op.drop_index(op.f('ix_historical_prop_outcomes_id'), table_name='historical_prop_outcomes')
    op.drop_index('idx_historical_source', table_name='historical_prop_outcomes')
    op.drop_index('idx_historical_prop_id', table_name='historical_prop_outcomes')
    op.drop_index('idx_historical_player_prop_date', table_name='historical_prop_outcomes')
    op.drop_index('idx_historical_event_date', table_name='historical_prop_outcomes')
    op.drop_table('historical_prop_outcomes')
    op.drop_index(op.f('ix_correlation_factor_models_id'), table_name='correlation_factor_models')
    op.drop_index('idx_factor_sport_context', table_name='correlation_factor_models')
    op.drop_index('idx_factor_method', table_name='correlation_factor_models')
    op.drop_index('idx_factor_computed', table_name='correlation_factor_models')
    op.drop_table('correlation_factor_models')
    op.drop_index(op.f('ix_correlation_clusters_id'), table_name='correlation_clusters')
    op.drop_index('idx_cluster_sport', table_name='correlation_clusters')
    op.drop_index('idx_cluster_key', table_name='correlation_clusters')
    op.drop_index('idx_cluster_computed', table_name='correlation_clusters')
    op.drop_table('correlation_clusters')
    op.drop_index(op.f('ix_correlation_cache_entries_id'), table_name='correlation_cache_entries')
    op.drop_index('idx_cache_type_expires', table_name='correlation_cache_entries')
    op.drop_index('idx_cache_key', table_name='correlation_cache_entries')
    op.drop_index('idx_cache_created', table_name='correlation_cache_entries')
    op.drop_table('correlation_cache_entries')
    # ### end Alembic commands ###
