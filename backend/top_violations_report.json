{
  "timestamp": "2025-08-13T11:24:33.322777",
  "summary": {
    "total_files": 62,
    "files_with_violations": 60,
    "total_violations": 862,
    "critical_violations": 479,
    "compliance_percentage": 3.2,
    "missing_response_models": 3
  },
  "violations_by_type": {
    "Non-Dict Return": 380,
    "Direct HTTPException Usage": 457,
    "JSONResponse Error": 3,
    "Status Error Return": 18,
    "Direct Error Dict Return": 4
  },
  "violations_by_severity": {
    "high": 479,
    "medium": 3,
    "low": 380
  },
  "top_violating_files": [
    {
      "file": "backend\\routes\\phase3_routes.py",
      "violations": 45,
      "critical": 31
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "violations": 34,
      "critical": 17
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "violations": 33,
      "critical": 26
    },
    {
      "file": "backend\\routes\\propollama.py",
      "violations": 30,
      "critical": 15
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "violations": 29,
      "critical": 14
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "violations": 28,
      "critical": 6
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "violations": 28,
      "critical": 22
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "violations": 24,
      "critical": 11
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "violations": 24,
      "critical": 14
    },
    {
      "file": "backend\\routes\\auth.py",
      "violations": 22,
      "critical": 15
    }
  ],
  "missing_response_models": [
    {
      "file": "enhanced_api.py",
      "function": "simple_test",
      "method": "GET",
      "line": 42,
      "severity": "medium"
    },
    {
      "file": "production_health_routes.py",
      "function": "comprehensive_health_check",
      "method": "GET",
      "line": 37,
      "severity": "medium"
    },
    {
      "file": "unified_api.py",
      "function": "unified_analysis_stub",
      "method": "POST",
      "line": 40,
      "severity": "medium"
    }
  ],
  "recommendations": [
    "\ud83d\udd27 Replace 457 direct HTTPException usages with proper exception handling patterns",
    "\ud83d\udccb Convert 4 direct error returns to use HTTPException and contract format",
    "\ud83d\udcdd Add response_model annotations to 3 critical route handlers"
  ],
  "detailed_violations": [
    {
      "file": "backend\\routes\\admin.py",
      "line": 30,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return True\n\n\n@router.get(\"/admin/rules-audit-log\", response_model=Dict[str, Any",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\admin.py",
      "line": 59,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ok([])\n    try:\n        with open(audit_path, \"r\", encoding=\"utf-8\") as f",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\admin.py",
      "line": 90,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return version info.\n    Returns standardized response contract.\n    Example suc",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\admin.py",
      "line": 107,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ok(",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_arbitrage_routes.py",
      "line": 188,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_arbitrage_routes.py",
      "line": 252,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_arbitrage_routes.py",
      "line": 263,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_arbitrage_routes.py",
      "line": 272,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_arbitrage_routes.py",
      "line": 296,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_arbitrage_routes.py",
      "line": 310,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_arbitrage_routes.py",
      "line": 361,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_arbitrage_routes.py",
      "line": 385,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_arbitrage_routes.py",
      "line": 425,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_arbitrage_routes.py",
      "line": 446,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_arbitrage_routes.py",
      "line": 91,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ArbitrageOpportunityResponse(\n        opportunity_id=opp.opportunity_id,\n",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_arbitrage_routes.py",
      "line": 184,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return filtered_opportunities\n        \n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_arbitrage_routes.py",
      "line": 248,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return response_opportunities\n        \n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_arbitrage_routes.py",
      "line": 266,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return _convert_arbitrage_opportunity(opportunity)\n        \n    except HTTPExcep",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_arbitrage_routes.py",
      "line": 283,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ArbitragePortfolioResponse(\n            total_opportunities=portfolio.tot",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_arbitrage_routes.py",
      "line": 324,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return = opportunity.total_return * scale_factor\n        ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_arbitrage_routes.py",
      "line": 355,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return analysis\n        \n    except HTTPException:\n        raise\n    except Exce",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_arbitrage_routes.py",
      "line": 381,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return sportsbook_info\n        \n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_arbitrage_routes.py",
      "line": 421,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return stats\n        \n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 151,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 162,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 165,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 186,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 189,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 205,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 208,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 235,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 291,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 335,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 372,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 444,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 463,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 544,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 577,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 101,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return BettingOpportunity(\n        opportunity_id=req.opportunity_id,\n        de",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 159,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return _convert_kelly_result(result)\n        \n    except ValueError as e:\n      ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 202,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return response_results\n        \n    except ValueError as e:\n        raise HTTPE",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 219,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return PortfolioMetricsResponse(\n            total_bankroll=metrics.total_bankro",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 283,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return RiskManagementResponse(\n            current_settings=settings_dict,\n     ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_kelly_routes.py",
      "line": 414,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return = (ending_bankroll - starting_bankroll) / starting_bankroll\n            \n",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_search_routes.py",
      "line": 207,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_search_routes.py",
      "line": 251,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_search_routes.py",
      "line": 299,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_search_routes.py",
      "line": 316,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_search_routes.py",
      "line": 329,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_search_routes.py",
      "line": 344,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_search_routes.py",
      "line": 351,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\advanced_search_routes.py",
      "line": 197,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SearchResultModel(\n            items=result.items,\n            total_coun",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_search_routes.py",
      "line": 241,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SearchResultModel(\n            items=result.items,\n            total_coun",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_search_routes.py",
      "line": 289,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SearchResultModel(\n            items=result.items,\n            total_coun",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_search_routes.py",
      "line": 325,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return suggestions\n        \n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_search_routes.py",
      "line": 347,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return stats\n        \n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\advanced_search_routes.py",
      "line": 418,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return [",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\ai_recommendations_routes.py",
      "line": 185,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\ai_recommendations_routes.py",
      "line": 272,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\ai_recommendations_routes.py",
      "line": 321,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\ai_recommendations_routes.py",
      "line": 353,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\ai_recommendations_routes.py",
      "line": 391,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\ai_recommendations_routes.py",
      "line": 450,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\ai_recommendations_routes.py",
      "line": 476,
      "type": "JSONResponse Error",
      "severity": "medium",
      "match": "JSONResponse(\n            status_code=503,\n            content={\n               ",
      "pattern": "JSONResponse\\([^)]*status_code\\s*=\\s*[45]\\d\\d[^)]*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\ai_recommendations_routes.py",
      "line": 169,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return RecommendationListResponse(\n            recommendations=recommendation_re",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\ai_recommendations_routes.py",
      "line": 257,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return RecommendationListResponse(\n            recommendations=recommendation_re",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\ai_recommendations_routes.py",
      "line": 287,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return mock detailed analysis\n        ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\ai_recommendations_routes.py",
      "line": 336,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return success\n        ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\ai_recommendations_routes.py",
      "line": 476,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(\n            status_code=503,",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\ai_routes.py",
      "line": 95,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\ai_routes.py",
      "line": 152,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\ai_routes.py",
      "line": 223,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\ai_routes.py",
      "line": 293,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\ai_routes.py",
      "line": 66,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return HealthResponse(\n            status=\"healthy\" if is_available else \"degrad",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\ai_routes.py",
      "line": 74,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return HealthResponse(\n            status=\"unhealthy\",\n            ollama_availa",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\ai_routes.py",
      "line": 138,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return StreamingResponse(\n            generate_explanation(),\n            media_",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\ai_routes.py",
      "line": 168,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return StreamingResponse(\n                _generate_fallback_prop_analysis(reque",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\ai_routes.py",
      "line": 211,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return StreamingResponse(\n            generate_prop_analysis(),\n            medi",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\ai_routes.py",
      "line": 238,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return StreamingResponse(\n                _generate_fallback_player_summary(requ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\ai_routes.py",
      "line": 281,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return StreamingResponse(\n            generate_summary(),\n            media_type",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 54,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 96,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 114,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 151,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 182,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 195,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 206,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 223,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 271,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 285,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 295,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 338,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 418,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 431,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 445,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 457,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 468,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 479,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 493,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\analytics_routes.py",
      "line": 289,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return report\n\n    except HTTPException:\n        raise\n    except Exception as e",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 20,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 98,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 126,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 138,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 148,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 174,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 206,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 224,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 232,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 266,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 294,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 322,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 337,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 410,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 412,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 25,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return user\n\n\nimport logging\n\n# from services.email_service import generate_veri",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 88,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return TokenResponse(\n            access_token=access_token,\n            refresh",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 134,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return user\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 196,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return TokenResponse(\n            access_token=access_token,\n            refresh",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 255,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return TokenResponse(\n            access_token=new_access_token,\n            ref",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 326,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return UserProfileResponse(\n            user_id=updated_profile.user_id,\n       ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\auth.py",
      "line": 357,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return success",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\betting.py",
      "line": 98,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\betting.py",
      "line": 140,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\betting.py",
      "line": 176,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\betting.py",
      "line": 68,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return opportunities\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\betting.py",
      "line": 73,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return []\n\n\n@router.get(\"/betting-opportunities\", response_model=List[BettingOpp",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\betting.py",
      "line": 94,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return opportunities\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\betting.py",
      "line": 136,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return opportunities\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\betting.py",
      "line": 172,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return RiskProfilesResponse(profiles=profiles)\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\cheatsheets_routes.py",
      "line": 162,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\cheatsheets_routes.py",
      "line": 214,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\cheatsheets_routes.py",
      "line": 267,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\cheatsheets_routes.py",
      "line": 339,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\cheatsheets_routes.py",
      "line": 367,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\cheatsheets_routes.py",
      "line": 388,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\cheatsheets_routes.py",
      "line": 129,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return OpportunitiesListResponse(\n            opportunities=opportunity_response",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\cheatsheets_routes.py",
      "line": 202,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return OpportunitiesListResponse(\n            opportunities=opportunity_response",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\cheatsheets_routes.py",
      "line": 259,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return Response(\n            content=csv_content,\n            media_type='text/c",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\cheatsheets_routes.py",
      "line": 399,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return HealthResponse(\n            status=\"healthy\",\n            opportunities_c",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\cheatsheets_routes.py",
      "line": 410,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return HealthResponse(\n            status=\"degraded\",\n            opportunities_",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 62,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 78,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 400,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 422,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 451,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 494,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 51,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return comprehensive_sportradar_service\n\n\n@router.get(\"/health\", response_model=",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 109,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(\n            success=True,\n            data=data,\n    ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 117,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(\n            success=False,\n            error=str(e),\n",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 143,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(\n            success=True,\n            data=data,\n    ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 151,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(success=False, error=str(e), api_type=\"nfl\")\n\n",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 173,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(\n            success=True,\n            data=data,\n    ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 181,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(success=False, error=str(e), api_type=\"nba\")\n\n",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 203,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(\n            success=True,\n            data=data,\n    ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 211,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(success=False, error=str(e), api_type=\"nhl\")\n\n",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 232,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(\n            success=True,\n            data=data,\n    ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 240,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(success=False, error=str(e), api_type=\"soccer\")\n\n\n# Od",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 259,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(\n            success=True,\n            data=data,\n    ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 267,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(success=False, error=str(e), api_type=\"player_props_od",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 285,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(\n            success=True,\n            data=data,\n    ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 293,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(success=False, error=str(e), api_type=\"prematch_odds\")",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 311,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(\n            success=True,\n            data=data,\n    ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 319,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(success=False, error=str(e), api_type=\"futures_odds\")\n",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 339,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(\n            success=True,\n            data=data,\n    ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 347,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(success=False, error=str(e), api_type=\"getty_images\")\n",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 370,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(\n            success=True,\n            data=data,\n    ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 378,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(success=False, error=str(e), api_type=\"sportradar_imag",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\comprehensive_sportradar_routes.py",
      "line": 453,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportRadarResponse(\n            success=True,\n            data=data,",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\dashboard_customization_routes.py",
      "line": 254,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\dashboard_customization_routes.py",
      "line": 303,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\dashboard_customization_routes.py",
      "line": 309,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\dashboard_customization_routes.py",
      "line": 346,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\dashboard_customization_routes.py",
      "line": 370,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\dashboard_customization_routes.py",
      "line": 398,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\dashboard_customization_routes.py",
      "line": 676,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\dashboard_customization_routes.py",
      "line": 698,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\dashboard_customization_routes.py",
      "line": 743,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\dashboard_customization_routes.py",
      "line": 266,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return DashboardLayout(**cached_layout)\n\n        # Mock layout fetch - in produc",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\dashboard_customization_routes.py",
      "line": 301,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return layout\n\n        raise HTTPException(status_code=404, detail=\"Dashboard la",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\dashboard_customization_routes.py",
      "line": 383,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return cached_data\n\n        # Generate mock data based on widget type\n        wi",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\dashboard_customization_routes.py",
      "line": 622,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return data\n\n    # Default fallback",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\dashboard_customization_routes.py",
      "line": 645,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return cache_ttls.get(widget_type, 300)  # Default 5 minutes\n\n\n@router.get(\"/pre",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\dashboard_customization_routes.py",
      "line": 657,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return DashboardPreferences(**prefs)\n\n        # Default preferences\n        defa",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\dashboard_customization_routes.py",
      "line": 672,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return default_prefs\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 65,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 90,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 101,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 117,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 127,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 130,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 134,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 169,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 191,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 207,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 297,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 392,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 103,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return progress\n",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 119,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return StreamingResponse(\n            io.BytesIO(file_data[\"content\"]),\n        ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 151,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return StreamingResponse(\n        io.BytesIO(file_content),\n        media_type=m",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 197,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return StreamingResponse(\n            io.BytesIO(content),\n            media_typ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 414,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return mock_data, available_fields\n\ndef generate_mock_bets_data(count: int) -> L",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 444,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return data\n\ndef generate_mock_players_data(count: int) -> List[Dict[str, Any]]:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 473,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return data\n\ndef generate_mock_props_data(count: int) -> List[Dict[str, Any]]:\n ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 504,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return data\n\ndef generate_mock_odds_data(count: int) -> List[Dict[str, Any]]:\n  ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 530,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return data\n\nasync def generate_immediate_export(data: List[Dict[str, Any]], ava",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\data_export_routes.py",
      "line": 551,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return export_service._generate_csv(data, available_fields, options)\n\nasync def ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\data_validation_routes.py",
      "line": 102,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_validation_routes.py",
      "line": 120,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_validation_routes.py",
      "line": 127,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_validation_routes.py",
      "line": 155,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_validation_routes.py",
      "line": 162,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_validation_routes.py",
      "line": 190,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_validation_routes.py",
      "line": 202,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_validation_routes.py",
      "line": 243,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_validation_routes.py",
      "line": 252,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_validation_routes.py",
      "line": 317,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_validation_routes.py",
      "line": 324,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_validation_routes.py",
      "line": 339,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_validation_routes.py",
      "line": 346,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_validation_routes.py",
      "line": 382,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_validation_routes.py",
      "line": 391,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_validation_routes.py",
      "line": 431,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\data_validation_routes.py",
      "line": 151,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return response\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\data_validation_routes.py",
      "line": 186,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return response\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\data_validation_routes.py",
      "line": 239,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return response\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\debug_api.py",
      "line": 35,
      "type": "Status Error Return",
      "severity": "high",
      "match": "return {\"status\": \"error\"",
      "pattern": "return\\s+\\{\\s*[\"\\']status[\"\\']:\\s*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\debug_api.py",
      "line": 39,
      "type": "Status Error Return",
      "severity": "high",
      "match": "return {\"status\": \"error\"",
      "pattern": "return\\s+\\{\\s*[\"\\']status[\"\\']:\\s*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\diagnostics.py",
      "line": 15,
      "type": "Direct Error Dict Return",
      "severity": "high",
      "match": "return {\"error\": \"No circuit breaker found on LLM client.\"}",
      "pattern": "return\\s+\\{\\s*[\"\\']error[\"\\']:\\s*[^}]+\\}"
    },
    {
      "file": "backend\\routes\\diagnostics.py",
      "line": 14,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return llm_engine.client.circuit_breaker.status()",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\draftkings_integration_routes.py",
      "line": 138,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\draftkings_integration_routes.py",
      "line": 211,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\draftkings_integration_routes.py",
      "line": 233,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\draftkings_integration_routes.py",
      "line": 277,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\draftkings_integration_routes.py",
      "line": 337,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\draftkings_integration_routes.py",
      "line": 375,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\draftkings_integration_routes.py",
      "line": 415,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\draftkings_integration_routes.py",
      "line": 130,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return DraftKingsEventsResponse(\n            events=events_data,\n            tot",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\draftkings_integration_routes.py",
      "line": 203,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return DraftKingsOddsResponse(\n            odds=odds_data,\n            total_cou",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\draftkings_integration_routes.py",
      "line": 267,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return DraftKingsPropsResponse(\n            props=props_data,\n            total_",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 51,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(data)\n\n\n# Request/Response Models\nclass PredictionRequest",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 110,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(data)\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 131,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(data)\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 145,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(data)\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 150,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(data)\n\n\n@router.post(\"/auth/refresh\", response_model=Stan",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 165,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(data)\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 193,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return PredictionResponse(\n            prediction=prediction[\"prediction\"],\n    ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 222,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(data)\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 269,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return BettingOpportunityResponse(\n            opportunities=filtered_opportunit",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 300,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(data)\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 321,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(data)\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 355,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(data)\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 383,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(data)\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 413,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(data)\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 433,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(data)\n        else:\n            raise BusinessLogicExcept",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 458,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return basic enhanced structure\n            enhanced_data = [",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 476,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(data)\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 520,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(health_status)\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 529,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(error_data)  # Return as success since health endpoint sh",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 581,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return True\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_api.py",
      "line": 588,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return False\n\n\nasync def shutdown_enhanced_services():\n    \"\"\"Shutdown all enhan",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 185,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 194,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 203,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 212,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 399,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 443,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 512,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 581,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 601,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 633,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 662,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 83,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return v.lower()\n\n\nclass PlayerValidationRequest(BaseModel):\n    \"\"\"Request mode",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 104,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return v.lower()\n\n\nclass GameValidationRequest(BaseModel):\n    \"\"\"Request model ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 209,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return await get_optimized_orchestrator()\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 236,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return converted\n\n\ndef _create_validation_context(\n    request_data: Union[Playe",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 314,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(\n        status_code=status_code,",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 395,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return response\n\n    except Exception as e:\n        await validation_error_handl",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 439,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return response\n\n    except Exception as e:\n        await validation_error_handl",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 508,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return responses\n\n    except Exception as e:\n        await validation_error_hand",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 535,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return HealthCheckResponse(\n            status=health_status[\"status\"],\n        ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 544,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return HealthCheckResponse(\n            status=\"unhealthy\",\n            timestam",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 568,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return MetricsResponse(\n            total_requests=metrics.get(\"total_requests\",",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 598,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return await orchestrator.get_performance_metrics()\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_data_validation_routes.py",
      "line": 654,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return success",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_search_routes.py",
      "line": 468,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_search_routes.py",
      "line": 718,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_search_routes.py",
      "line": 185,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return suggestions\n\n\nasync def suggest_player_names(partial_name: str) -> List[D",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_search_routes.py",
      "line": 234,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return top matches\n        matches.sort(key=lambda x: x[\"confidence\"], reverse=T",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_search_routes.py",
      "line": 240,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return []\n\n\nasync def generate_contextual_suggestions(\n    text: str, data_type:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_search_routes.py",
      "line": 319,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return suggestions\n\n\nasync def generate_trending_suggestions(\n    text: str, dat",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_search_routes.py",
      "line": 355,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return suggestions\n\n\nasync def generate_popular_suggestions(\n    text: str, data",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_search_routes.py",
      "line": 384,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return suggestions\n\n\nasync def generate_autocomplete_suggestions(\n    text: str,",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_search_routes.py",
      "line": 429,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return suggestions\n\n\n@router.post(\"/execute\")\nasync def execute_search(query: Se",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_search_routes.py",
      "line": 636,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return filtered_items\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_search_routes.py",
      "line": 640,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return items\n\n\nasync def generate_search_facets(\n    results: Dict[str, Any], qu",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_search_routes.py",
      "line": 680,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return facets\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_search_routes.py",
      "line": 684,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return []\n\n\n@router.post(\"/save\")\nasync def save_search(saved_search: SavedSearc",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_sportsbook_routes.py",
      "line": 112,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_sportsbook_routes.py",
      "line": 163,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_sportsbook_routes.py",
      "line": 217,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_sportsbook_routes.py",
      "line": 290,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_sportsbook_routes.py",
      "line": 322,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_sportsbook_routes.py",
      "line": 355,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_sportsbook_routes.py",
      "line": 376,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\enhanced_sportsbook_routes.py",
      "line": 44,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return sportsbook_service\n\n@router.on_event(\"startup\")\nasync def startup_sportsb",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\enhanced_sportsbook_routes.py",
      "line": 207,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return\n                    }\n                }\n                for opp in arbitr",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\fanduel.py",
      "line": 34,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return bets\n",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\feedback.py",
      "line": 124,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\feedback.py",
      "line": 128,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\feedback.py",
      "line": 148,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\feedback.py",
      "line": 223,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\feedback.py",
      "line": 41,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return False\n\n        # Create message\n        msg = MIMEMultipart()\n        msg",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\feedback.py",
      "line": 79,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return True\n        \n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\feedback.py",
      "line": 83,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return False\n\ndef save_feedback_to_file(feedback: FeedbackRequest) -> str:\n    \"",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\feedback.py",
      "line": 109,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return feedback_id\n        \n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\feedback.py",
      "line": 113,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return \"\"\n\n@router.post(\"/feedback\", response_model=FeedbackResponse)\nasync def ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\feedback.py",
      "line": 138,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return FeedbackResponse(\n            success=True,\n            message=\"Feedback",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\health.py",
      "line": 83,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\health.py",
      "line": 93,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\health.py",
      "line": 109,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\lazy_sport_routes.py",
      "line": 69,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\lazy_sport_routes.py",
      "line": 93,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\lazy_sport_routes.py",
      "line": 113,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\lazy_sport_routes.py",
      "line": 130,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\lazy_sport_routes.py",
      "line": 167,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\lazy_sport_routes.py",
      "line": 58,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return SportActivationResponse(\n            status=result[\"status\"],\n           ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\lazy_sport_routes.py",
      "line": 89,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return result\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\lazy_sport_routes.py",
      "line": 110,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return lazy_sport_manager.get_sport_status(sport)\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\lazy_sport_routes.py",
      "line": 127,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return lazy_sport_manager.get_all_statuses()\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\live_betting_routes.py",
      "line": 92,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\live_betting_routes.py",
      "line": 116,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\live_betting_routes.py",
      "line": 140,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\live_betting_routes.py",
      "line": 159,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\live_betting_routes.py",
      "line": 172,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\live_betting_routes.py",
      "line": 199,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\live_betting_routes.py",
      "line": 216,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\live_betting_routes.py",
      "line": 226,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\live_betting_routes.py",
      "line": 254,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\live_betting_routes.py",
      "line": 292,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\live_betting_routes.py",
      "line": 351,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\live_betting_routes.py",
      "line": 168,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return status\n        \n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\live_betting_routes.py",
      "line": 331,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return None\n        \n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\live_betting_routes.py",
      "line": 335,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return None\n\n@router.get(\"/health\", summary=\"Health check\")\nasync def health_che",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\metrics.py",
      "line": 42,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return metrics_collector.get_overall_stats()\n\n",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\metrics.py",
      "line": 48,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return metrics_collector.get_endpoint_stats(endpoint)\n\n\n@router.get(\"/stats/mode",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\metrics.py",
      "line": 63,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return stats\n",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 197,
      "type": "Status Error Return",
      "severity": "high",
      "match": "return {\n            \"status\": \"error\"",
      "pattern": "return\\s+\\{\\s*[\"\\']status[\"\\']:\\s*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 557,
      "type": "Status Error Return",
      "severity": "high",
      "match": "return {\"status\": \"error\"",
      "pattern": "return\\s+\\{\\s*[\"\\']status[\"\\']:\\s*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 572,
      "type": "Status Error Return",
      "severity": "high",
      "match": "return {\"status\": \"error\"",
      "pattern": "return\\s+\\{\\s*[\"\\']status[\"\\']:\\s*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 625,
      "type": "Status Error Return",
      "severity": "high",
      "match": "return {\"status\": \"error\"",
      "pattern": "return\\s+\\{\\s*[\"\\']status[\"\\']:\\s*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 640,
      "type": "Status Error Return",
      "severity": "high",
      "match": "return {\"status\": \"error\"",
      "pattern": "return\\s+\\{\\s*[\"\\']status[\"\\']:\\s*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 689,
      "type": "Status Error Return",
      "severity": "high",
      "match": "return {\"status\": \"error\"",
      "pattern": "return\\s+\\{\\s*[\"\\']status[\"\\']:\\s*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 702,
      "type": "Status Error Return",
      "severity": "high",
      "match": "return {\"status\": \"error\"",
      "pattern": "return\\s+\\{\\s*[\"\\']status[\"\\']:\\s*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 870,
      "type": "Status Error Return",
      "severity": "high",
      "match": "return {\n            \"status\": \"error\"",
      "pattern": "return\\s+\\{\\s*[\"\\']status[\"\\']:\\s*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 951,
      "type": "Status Error Return",
      "severity": "high",
      "match": "return {\n            \"status\": \"error\"",
      "pattern": "return\\s+\\{\\s*[\"\\']status[\"\\']:\\s*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 1319,
      "type": "Status Error Return",
      "severity": "high",
      "match": "return {\n            \"status\": \"error\"",
      "pattern": "return\\s+\\{\\s*[\"\\']status[\"\\']:\\s*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 1049,
      "type": "JSONResponse Error",
      "severity": "medium",
      "match": "JSONResponse(\n            status_code=500,\n            content={\n               ",
      "pattern": "JSONResponse\\([^)]*status_code\\s*=\\s*[45]\\d\\d[^)]*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 1129,
      "type": "JSONResponse Error",
      "severity": "medium",
      "match": "JSONResponse(\n            status_code=500,\n            content={\n               ",
      "pattern": "JSONResponse\\([^)]*status_code\\s*=\\s*[45]\\d\\d[^)]*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 193,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return result\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 240,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return analysis\n        else:\n            logger.warning(\"[ROUTE] No analysis ge",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 329,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return formatted_props\n            else:\n                logger.warning(\"Enhance",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 336,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return empty array instead of mock data\n        logger.warning(\"All real data so",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 347,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return await client.fetch_action_shots_ap(event_id)\n\n",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 354,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return await client.fetch_country_flag(country_code)\n\n\n@router.get(\"/odds-compar",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 402,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return []\n    return result\n\n\n@router.get(\"/todays-games\")\nasync def get_todays_",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 1049,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(\n            status_code=500,",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 1129,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(\n            status_code=500,",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\mlb_extras.py",
      "line": 1315,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return analytics\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 79,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 99,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 103,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 125,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 136,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 153,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 166,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 188,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 208,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 238,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 261,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 268,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 271,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 294,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 321,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 339,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 381,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 398,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 138,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ModelHealthResponse(\n            model_id=health_status.model_id,\n       ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 200,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ComparativeAnalysisResponse(\n            models=comparison['models'],\n   ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 263,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return report\n        \n    except HTTPException:\n        raise\n    except ValueE",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\model_performance_monitoring_routes.py",
      "line": 282,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return a sample response structure\n        \n        alerts = []  # Placeholder -",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 160,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 177,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 202,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 248,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 266,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 307,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 324,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 328,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 347,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 367,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 371,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 381,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 388,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 438,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 456,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 471,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 499,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 151,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ModelListResponse(\n            models=model_responses,\n            total_",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 179,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ModelResponse(\n            id=model.get('id', model_id),\n            name",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 284,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ModelResponse(\n            id=updated_model.get('id', model_id),\n        ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 336,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\model_registry_routes.py",
      "line": 426,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return EvaluationUploadResponse(\n            evaluation_id=evaluation_id,\n      ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 107,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 110,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 138,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 173,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 205,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 226,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 237,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 266,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 271,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 273,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 278,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 304,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 369,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 417,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 103,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return BetPlacementResponse(**result)\n\n    except ValueError as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 164,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return TaskResponse(\n            task_id=task_id,\n            status=\"pending\",\n",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 196,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return TaskResponse(\n            task_id=task_id,\n            status=\"pending\",",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 231,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return status\n\n    except HTTPException:\n        raise\n    except Exception as e",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 300,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return tasks\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_async_routes.py",
      "line": 331,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return await analytics_service.analyze_predictions(game_id, context, db)\n       ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 165,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 202,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 224,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 266,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 303,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 335,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 367,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 382,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 506,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 542,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 660,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 681,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 702,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 764,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 568,
      "type": "Status Error Return",
      "severity": "high",
      "match": "return {\"status\": \"error\"",
      "pattern": "return\\s+\\{\\s*[\"\\']status[\"\\']:\\s*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 570,
      "type": "Status Error Return",
      "severity": "high",
      "match": "return {\"status\": \"error\"",
      "pattern": "return\\s+\\{\\s*[\"\\']status[\"\\']:\\s*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 611,
      "type": "Status Error Return",
      "severity": "high",
      "match": "return {\"status\": \"error\"",
      "pattern": "return\\s+\\{\\s*[\"\\']status[\"\\']:\\s*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 92,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return v\n\n\nclass PredictionResponse(BaseModel):\n    \"\"\"Response model for predic",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 262,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return responses\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 274,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return [strategy.value for strategy in PredictionStrategy]\n\n\n@router.get(\"/curre",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 309,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return integration_service.ab_test_config\n\n\n@router.post(\"/ab-test/config\")\nasyn",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 352,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return PerformanceStats(\n            total_predictions=stats[\"total_predictions\"",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 377,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 433,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(content=health_status, status_code=200)\n\n    except Exceptio",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 437,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 502,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(content=model_info, status_code=200)\n\n    except Exception a",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 531,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 608,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return verification_results\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 644,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 671,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 692,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 736,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 844,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(content=health_status)\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\modern_ml_routes.py",
      "line": 848,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\multiple_sportsbook_routes.py",
      "line": 147,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\multiple_sportsbook_routes.py",
      "line": 219,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\multiple_sportsbook_routes.py",
      "line": 279,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\multiple_sportsbook_routes.py",
      "line": 304,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\multiple_sportsbook_routes.py",
      "line": 324,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\multiple_sportsbook_routes.py",
      "line": 368,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\multiple_sportsbook_routes.py",
      "line": 61,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return\n        \n        message_str = json.dumps(message)\n        disconnected =",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\multiple_sportsbook_routes.py",
      "line": 143,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(content=props_data)\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\multiple_sportsbook_routes.py",
      "line": 215,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(content=best_odds_data)\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\multiple_sportsbook_routes.py",
      "line": 275,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(content=arbitrage_data)\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\multiple_sportsbook_routes.py",
      "line": 300,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(content=performance_report)\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\multiple_sportsbook_routes.py",
      "line": 317,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return common sports\n        sports = [\"nba\", \"nfl\", \"mlb\", \"nhl\", \"ncaab\", \"nca",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\multiple_sportsbook_routes.py",
      "line": 364,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(content=props_data)\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\nba_routes.py",
      "line": 37,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\nba_routes.py",
      "line": 51,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\nba_routes.py",
      "line": 65,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\nba_routes.py",
      "line": 95,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\nba_routes.py",
      "line": 98,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\nba_routes.py",
      "line": 115,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\nba_routes.py",
      "line": 132,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\nba_routes.py",
      "line": 175,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\nba_routes.py",
      "line": 25,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return await nba_service.health_check()\n\n\n@router.get(\"/teams\", response_model=L",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\nba_routes.py",
      "line": 34,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return teams\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\nba_routes.py",
      "line": 48,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return players\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\nba_routes.py",
      "line": 62,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return players\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\nba_routes.py",
      "line": 92,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return games\n\n    except ValueError as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\nba_routes.py",
      "line": 111,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return games\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\nba_routes.py",
      "line": 128,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return odds_data\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\nba_routes.py",
      "line": 171,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return result\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\odds_routes.py",
      "line": 100,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\odds_routes.py",
      "line": 158,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\odds_routes.py",
      "line": 210,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\odds_routes.py",
      "line": 229,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\odds_routes.py",
      "line": 256,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\odds_routes.py",
      "line": 147,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return OddsComparisonResponse(\n            sport=sport,\n            total_lines=",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\odds_routes.py",
      "line": 200,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ArbitrageResponse(\n            sport=sport,\n            opportunities=opp",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\optimized_api_routes.py",
      "line": 32,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return StandardAPIResponse[Dict[str, Any]](\n        success=True,\n        data=d",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\optimized_api_routes.py",
      "line": 56,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return StandardAPIResponse[Dict[str, Any]](\n            success=True,\n          ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\optimized_api_routes.py",
      "line": 86,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return StandardAPIResponse[Dict[str, Any]](\n            success=True,\n          ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\optimized_api_routes.py",
      "line": 118,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return StandardAPIResponse[Dict[str, Any]](\n            success=True,\n          ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\optimized_api_routes.py",
      "line": 149,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return StandardAPIResponse[Dict[str, Any]](\n            success=True,\n          ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\optimized_api_routes.py",
      "line": 196,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return StandardAPIResponse[Dict[str, Any]](\n            success=True,\n          ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\optimized_api_routes.py",
      "line": 234,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return StandardAPIResponse[Dict[str, Any]](\n            success=True,\n          ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\optimized_api_routes.py",
      "line": 270,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return StandardAPIResponse[Dict[str, Any]](\n        success=True,\n        data=l",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\optimized_api_routes.py",
      "line": 295,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return StandardAPIResponse[Dict[str, Any]](\n        success=True,\n        data=c",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\optimized_real_time_routes.py",
      "line": 58,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_real_time_routes.py",
      "line": 140,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_real_time_routes.py",
      "line": 161,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_real_time_routes.py",
      "line": 186,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_real_time_routes.py",
      "line": 217,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_real_time_routes.py",
      "line": 249,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_real_time_routes.py",
      "line": 283,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_real_time_routes.py",
      "line": 289,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_real_time_routes.py",
      "line": 306,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_real_time_routes.py",
      "line": 326,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_real_time_routes.py",
      "line": 343,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_real_time_routes.py",
      "line": 414,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_real_time_routes.py",
      "line": 506,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_real_time_routes.py",
      "line": 60,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return optimized_service\n\n\nclass PlayerDataRequest(BaseModel):\n    \"\"\"Request mo",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\optimized_real_time_routes.py",
      "line": 129,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return HealthMetricsResponse(\n            overall_health=overall_health,\n       ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\optimized_real_time_routes.py",
      "line": 410,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return benchmark_results\n        \n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\optimized_routes.py",
      "line": 107,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_routes.py",
      "line": 132,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_routes.py",
      "line": 149,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_routes.py",
      "line": 184,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_routes.py",
      "line": 227,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_routes.py",
      "line": 256,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_routes.py",
      "line": 273,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_routes.py",
      "line": 334,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_routes.py",
      "line": 408,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_routes.py",
      "line": 491,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_routes.py",
      "line": 530,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\optimized_routes.py",
      "line": 507,
      "type": "Status Error Return",
      "severity": "high",
      "match": "return {\n            \"status\": \"error\"",
      "pattern": "return\\s+\\{\\s*[\"\\']status[\"\\']:\\s*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\optimized_routes.py",
      "line": 216,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return PerformanceMetricsResponse(",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\optimized_routes.py",
      "line": 330,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return stats\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\optimized_routes.py",
      "line": 404,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return results\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\optimized_routes.py",
      "line": 503,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return health_status\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\performance.py",
      "line": 42,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\performance.py",
      "line": 66,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\performance.py",
      "line": 88,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\performance.py",
      "line": 38,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return stats\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\performance.py",
      "line": 60,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return TransactionsResponse(\n            transactions=transactions, total_count=",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\performance.py",
      "line": 84,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ActiveBetsResponse(active_bets=active_bets, total_count=len(active_bets))",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 220,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 229,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 239,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 248,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 258,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 271,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 279,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 288,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 298,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 307,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 315,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 324,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 336,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 345,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 353,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 360,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 382,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 390,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 397,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 406,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 414,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 423,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 212,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return health_status\n\n\n@router.get(\"/connection-pool/status\")\nasync def get_conn",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 245,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return status\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 285,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return report\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 321,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return status\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 420,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return report\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase2_routes.py",
      "line": 521,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return summary\n",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 45,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 51,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 71,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 96,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 123,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 134,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 137,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 170,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 182,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 212,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 242,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 293,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 322,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 351,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 365,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 394,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 416,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 432,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 453,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 477,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 491,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 503,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 547,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 572,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 608,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 622,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 635,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 645,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 655,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 665,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 704,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 43,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return user info\"\"\"\n    if not credentials:\n        raise HTTPException(status_c",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 119,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return result\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 131,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return status\n\n    except ValueError as e:\n        raise HTTPException(status_co",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 178,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return versions\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 361,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return deployments\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 428,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return metrics\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 487,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return alerts\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 499,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return overview\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 604,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return report\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 618,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return alerts\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 632,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return await mlops_pipeline_service.get_service_health()\n    except Exception as",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 642,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return await production_deployment_service.get_service_health()\n    except Excep",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 652,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return await autonomous_monitoring_service.get_service_health()\n    except Excep",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\phase3_routes.py",
      "line": 662,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return await advanced_security_service.get_service_health()\n    except Exception",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\player_dashboard_routes.py",
      "line": 60,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\player_dashboard_routes.py",
      "line": 96,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\player_dashboard_routes.py",
      "line": 122,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\player_dashboard_routes.py",
      "line": 154,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\player_dashboard_routes.py",
      "line": 196,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\player_dashboard_routes.py",
      "line": 225,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\player_dashboard_routes.py",
      "line": 247,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\player_dashboard_routes.py",
      "line": 30,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return await player_dashboard_service.get_player_dashboard(player_id, request)\n\n",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\player_dashboard_routes.py",
      "line": 56,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return response_data\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\player_dashboard_routes.py",
      "line": 92,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return response_data\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\player_dashboard_routes.py",
      "line": 118,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return response_data\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\player_dashboard_routes.py",
      "line": 150,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return response_data\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\player_dashboard_routes.py",
      "line": 192,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return response_data\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\player_dashboard_routes.py",
      "line": 221,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return response_data\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\player_dashboard_routes.py",
      "line": 243,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return metrics\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 182,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 204,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 211,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 239,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 262,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 314,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 333,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 370,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 393,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 410,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 416,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 490,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 549,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 610,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 64,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return MockIntegrationService()\n\n\ntry:\n    from ..services.enhanced_resilience_s",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 82,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return MockResilienceService()\n\n\ntry:\n    from ..utils.enhanced_logging import g",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 174,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return DataResponse(\n            success=True,\n            message=\"Real-time sy",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 194,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return APIResponse(\n                success=True,",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 199,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return APIResponse(\n                success=True,",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 231,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return DataResponse(\n            success=True,\n            message=\"Game data su",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 254,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return DataResponse(\n            success=True,\n            message=\"Prop data su",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 302,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return DataResponse(\n            success=True,\n            message=\"Successfully",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 326,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return APIResponse(\n            success=True,",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 362,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return DataResponse(\n            success=True,\n            message=\"Connection p",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 387,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return DataResponse(\n            success=True, message=\"Resilience metrics retri",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 406,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return APIResponse(",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 484,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return APIResponse(",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 533,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return DataResponse(\n            success=True,",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\priority2_realtime_routes.py",
      "line": 592,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return DataResponse(\n            success=True,\n            message=\"Comprehensiv",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 80,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 156,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 192,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 206,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 273,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 323,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 350,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 370,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 411,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 437,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 520,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 594,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 600,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 654,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 73,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return props\n    except Exception as e:\n        logger.error(\"[ERROR] Exception ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 152,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return recommendations\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 189,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return props\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 266,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return optimization_result\n\n    except HTTPException as http_exc:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 312,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return the filtered props.\n        # The actual lineup generation and prediction",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 357,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return the filtered props.\n        # The actual lineup generation and prediction",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 389,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return a basic response",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 407,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return trends\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 591,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return enhanced_props\n    except ImportError as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\prizepicks.py",
      "line": 612,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return await get_prizepicks_props(\n        sport=sport, min_confidence=min_confi",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\prizepicks_router.py",
      "line": 77,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return []\n\n\n@router.get(\"/api/prizepicks/comprehensive-projections\")\nasync def g",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\prizepicks_router.py",
      "line": 103,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\prizepicks_router.py",
      "line": 107,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\prizepicks_simple.py",
      "line": 103,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return props\n\n\n# @router.get(\"/recommendations\")\nasync def get_simple_recommenda",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\production_health_routes.py",
      "line": 115,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(health_data)\n\n    except Exception as e:\n        if produ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\production_health_routes.py",
      "line": 145,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(health_data)\n\n        # Create a test task manager instan",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\production_health_routes.py",
      "line": 204,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(health_data)\n\n        finally:\n            # Clean up tes",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\production_health_routes.py",
      "line": 263,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(error_data)\n\n    try:\n        error_summary = production_",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\production_health_routes.py",
      "line": 280,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(summary_data)\n\n    except Exception as e:\n        raise B",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\production_health_routes.py",
      "line": 424,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(test_results)\n\n    except Exception as e:\n        if prod",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\production_health_routes_standardized.py",
      "line": 100,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(health_data)\n\n    except Exception as e:\n        if produ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\production_health_routes_standardized.py",
      "line": 186,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(health_data)\n\n        finally:\n            # Clean up tes",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\production_health_routes_standardized.py",
      "line": 255,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(summary_data)\n\n    except Exception as e:\n        raise B",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 783,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 808,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 832,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 841,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 862,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 919,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 927,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 972,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 1008,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 1025,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 1039,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 1082,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 1211,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 1133,
      "type": "Direct Error Dict Return",
      "severity": "high",
      "match": "return {\"error\": str(e), \"trace\": traceback.format_exc()}",
      "pattern": "return\\s+\\{\\s*[\"\\']error[\"\\']:\\s*[^}]+\\}"
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 1187,
      "type": "Direct Error Dict Return",
      "severity": "high",
      "match": "return {\"error\": str(e), \"trace\": traceback.format_exc()}",
      "pattern": "return\\s+\\{\\s*[\"\\']error[\"\\']:\\s*[^}]+\\}"
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 26,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return response\n\n    app.add_middleware(RequestLoggingMiddleware)\n\n\nimport async",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 148,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return enriched_props, entry_amt, user, session\n\n\nfrom typing import Optional\n\n\n",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 180,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return data.get(\"InjuryStatus\", \"unknown\")\n    raise NotImplementedError(\n      ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 283,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return prompt\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 364,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return int(obj)\n                if isinstance(obj, (np.floating,)):\n            ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 638,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return JSONResponse(status_code=status_code, content=resp)\n\n\ndef add_global_erro",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 647,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return create_error_response(\n            error=detail.get(\"error\", \"HTTPExcepti",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 674,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return the default error response\n        return create_error_response(\n        ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 940,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return mock response for tests\n        is_test_env = (\n            os.getenv(\"PY",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 948,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return PropOllamaChatResponse(\n                response=test_response,\n         ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 1059,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return PropOllamaChatResponse(\n            response=response_text,\n            m",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 1119,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return valid generation models for chat that are healthy/ready\n        client = ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 1240,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return (\n        cache_key in cache_timestamps\n        and time.time() - cache_t",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 1335,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return response\n        except asyncio.TimeoutError:\n            logger.error(\"[",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\propollama.py",
      "line": 1408,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return await _analyze_bet_unified_impl(request, req, rate_limit)\n",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\propollama_router.py",
      "line": 48,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return PropOllamaResponse(\n            content=response[\"content\"],\n            ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\propollama_router.py",
      "line": 128,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return response\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\propollama_router.py",
      "line": 131,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return a response with 'response' key, even on error",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\realtime_websocket_routes.py",
      "line": 444,
      "type": "Status Error Return",
      "severity": "high",
      "match": "return {\"status\": \"error\"",
      "pattern": "return\\s+\\{\\s*[\"\\']status[\"\\']:\\s*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\realtime_websocket_routes.py",
      "line": 460,
      "type": "Status Error Return",
      "severity": "high",
      "match": "return {\"status\": \"error\"",
      "pattern": "return\\s+\\{\\s*[\"\\']status[\"\\']:\\s*[\"\\']error[\"\\']"
    },
    {
      "file": "backend\\routes\\realtime_websocket_routes.py",
      "line": 33,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return None\n        \n        try:\n            # Remove 'Bearer ' prefix if prese",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\realtime_websocket_routes.py",
      "line": 42,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return payload.get('user_id') or payload.get('sub')\n        except:\n            ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\realtime_websocket_routes.py",
      "line": 192,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return\n    \n    try:\n        # Parse new filter\n        types_set = set()\n      ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\realtime_websocket_routes.py",
      "line": 243,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return\n    \n    try:\n        # Convert filter types to enum\n        types_to_rem",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\realtime_websocket_routes.py",
      "line": 383,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return\n    \n    # Create portfolio-specific filter\n    filters = [SubscriptionFi",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\realtime_websocket_routes.py",
      "line": 419,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return notification_service.get_stats()\n\n@router.post(\"/notifications/test\")\nasy",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\real_time_analysis.py",
      "line": 93,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\real_time_analysis.py",
      "line": 109,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\real_time_analysis.py",
      "line": 138,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\real_time_analysis.py",
      "line": 159,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\real_time_analysis.py",
      "line": 169,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\real_time_analysis.py",
      "line": 188,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\real_time_analysis.py",
      "line": 198,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\real_time_analysis.py",
      "line": 84,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return AnalysisResponse(\n            analysis_id=analysis_id,\n            status",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\real_time_analysis.py",
      "line": 120,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ProgressResponse(\n            analysis_id=analysis_id,\n            progre",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\real_time_analysis.py",
      "line": 163,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return results[\"opportunities\"][:limit]\n    except HTTPException:\n        raise\n",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\real_time_analysis.py",
      "line": 192,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return results[\"lineups\"]\n    except HTTPException:\n        raise\n    except Exc",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\real_time_analysis.py",
      "line": 207,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return [sport.value for sport in SportCategory]\n\n\n@router.get(\"/status\")\nasync d",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\risk_tools_routes.py",
      "line": 127,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\risk_tools_routes.py",
      "line": 130,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\risk_tools_routes.py",
      "line": 179,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\risk_tools_routes.py",
      "line": 182,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\risk_tools_routes.py",
      "line": 216,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\risk_tools_routes.py",
      "line": 219,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\risk_tools_routes.py",
      "line": 257,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\risk_tools_routes.py",
      "line": 317,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\risk_tools_routes.py",
      "line": 357,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\risk_tools_routes.py",
      "line": 399,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\risk_tools_routes.py",
      "line": 479,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\risk_tools_routes.py",
      "line": 482,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\risk_tools_routes.py",
      "line": 373,
      "type": "Direct Error Dict Return",
      "severity": "high",
      "match": "return {\"error\": \"User ID required for statistics\"}",
      "pattern": "return\\s+\\{\\s*[\"\\']error[\"\\']:\\s*[^}]+\\}"
    },
    {
      "file": "backend\\routes\\risk_tools_routes.py",
      "line": 124,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return KellyResultModel(**result.to_dict())\n\n    except ValueError as e:\n       ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\risk_tools_routes.py",
      "line": 213,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return simulation_results\n\n    except ValueError as e:\n        raise HTTPExcepti",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\risk_tools_routes.py",
      "line": 476,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return result\n\n    except ValueError as e:\n        raise HTTPException(status_co",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\risk_tools_routes.py",
      "line": 580,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return \"A\"\n    elif score >= 75:\n        return \"B\"\n    elif score >= 65:\n      ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 95,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 101,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 125,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 135,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 164,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 176,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 182,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 208,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 214,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 226,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 238,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 246,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 264,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 280,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 302,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 308,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 326,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 339,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 345,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 364,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 391,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 405,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 428,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 447,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 466,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 503,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 97,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return payload\n        \n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 106,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return None\n    \n    try:\n        token = authorization.split(\" \")[1]\n        se",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 186,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return access token\"\"\"\n    try:\n        security_service = await get_security_se",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 221,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return success",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 240,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return UserInfoResponse(**user_info)\n        \n    except HTTPException:\n        ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 292,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return APIKeyResponse(\n                key_id=api_key.key_id,\n                ap",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\security_routes.py",
      "line": 401,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return dashboard\n        \n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\shap.py",
      "line": 126,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\shap.py",
      "line": 175,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\shap.py",
      "line": 188,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\shap.py",
      "line": 219,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\shap.py",
      "line": 54,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ShapExplanationResponse(**explanation)\n\n        except ImportError:\n     ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\shap.py",
      "line": 115,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ShapExplanationResponse(\n                base_value=base_value,\n         ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\shap.py",
      "line": 215,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return explanations\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\sports_routes.py",
      "line": 26,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\sports_routes.py",
      "line": 22,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return a success response",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\trending_suggestions.py",
      "line": 29,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ok(suggestions)\n    except Exception as e:\n        raise BusinessLogicExc",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\unified_api.py",
      "line": 93,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return builder.success(analysis_data)\n    except Exception as e:\n        raise B",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\unified_api.py",
      "line": 118,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return\n        \n    Returns:\n        StandardAPIResponse with list of featured p",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\unified_api.py",
      "line": 236,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return mock data for dev/test\n        player_info = PlayerInfo(\n            name",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\unified_api.py",
      "line": 313,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return response\n\n\n# --- Featured Props Endpoint ---\n\n\n@router.post(\n    \"/unifie",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\unified_api.py",
      "line": 434,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return response\n    except Exception as e:\n        logger.error(\"Error generatin",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\unified_api.py",
      "line": 538,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ok(response)\n    except Exception as e:\n        raise BusinessLogicExcept",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\unified_api.py",
      "line": 646,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ok(response)\n    except Exception as e:\n        raise BusinessLogicExcept",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\unified_api.py",
      "line": 723,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ok(response)\n    except Exception as e:\n        raise BusinessLogicExcept",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\unified_api.py",
      "line": 767,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ok(health_status)\n    except Exception as e:\n        raise BusinessLogicE",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\unified_api.py",
      "line": 789,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return await get_featured_props(\n        sport=sport, min_confidence=min_confide",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\unified_api.py",
      "line": 843,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ok(result)\n    except Exception as e:\n        raise BusinessLogicExceptio",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 29,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 40,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 56,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 67,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 75,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 86,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 100,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 114,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 142,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 147,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 156,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 171,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 182,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 191,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 200,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 209,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 249,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 37,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return health_status\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 53,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return unified_odds\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 185,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return odds\n\n    except HTTPException:\n        raise\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 203,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return health\n\n    except HTTPException:\n        raise\n    except Exception as e",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\unified_sports_routes.py",
      "line": 245,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return summary\n\n    except Exception as e:",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\versioned_api_routes.py",
      "line": 186,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\versioned_api_routes.py",
      "line": 482,
      "type": "Direct HTTPException Usage",
      "severity": "high",
      "match": "raise HTTPException(",
      "pattern": "raise HTTPException\\("
    },
    {
      "file": "backend\\routes\\versioned_api_routes.py",
      "line": 67,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return APIResponse(\n        success=True,\n        message=\"API v1 is operational",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\versioned_api_routes.py",
      "line": 133,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return ListResponse(\n        success=True,\n        message=\"Props retrieved (v1 ",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\versioned_api_routes.py",
      "line": 182,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return a success response",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\versioned_api_routes.py",
      "line": 192,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return APIResponse(\n        success=True,\n        message=\"API v2 operational wi",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\versioned_api_routes.py",
      "line": 316,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return DataResponse(\n        success=True,\n        message=\"Enhanced props retri",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\versioned_api_routes.py",
      "line": 372,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return DataResponse(\n        success=True,",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\versioned_api_routes.py",
      "line": 417,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return cls.VERSIONS.get(version)\n\n    @classmethod\n    def get_current_version(c",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\versioned_api_routes.py",
      "line": 483,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return DataResponse(\n        success=True,",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\versioned_api_routes.py",
      "line": 520,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return\n\n            # Extract version from path\n            path_parts = path.sp",
      "pattern": "return\\s+[^{]*$"
    },
    {
      "file": "backend\\routes\\versioned_api_routes.py",
      "line": 545,
      "type": "Non-Dict Return",
      "severity": "low",
      "match": "return\n\n                # Add deprecation warning for deprecated versions\n      ",
      "pattern": "return\\s+[^{]*$"
    }
  ]
}