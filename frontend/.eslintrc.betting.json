{
  "extends": ["./eslint.config.mjs"],
  "rules": {
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/explicit-function-return-type": "warn",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    
    "react/jsx-key": "error",
    "react/prop-types": "off",
    "react/display-name": "error",
    "react/jsx-no-useless-fragment": "error",
    "react/jsx-pascal-case": "error",
    "react/no-array-index-key": "warn",
    "react/self-closing-comp": "error",
    
    "react-hooks/exhaustive-deps": "error",
    "react-hooks/rules-of-hooks": "error",
    
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external", 
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc"
        }
      }
    ],
    "import/no-relative-parent-imports": "error",
    "import/prefer-default-export": "warn",
    
    "prefer-const": "error",
    "no-var": "error",
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "no-debugger": "error",
    "no-alert": "error",
    
    "naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "Props$",
          "match": true
        }
      },
      {
        "selector": "typeAlias",
        "format": ["PascalCase"]
      },
      {
        "selector": "function",
        "format": ["camelCase", "PascalCase"]
      },
      {
        "selector": "variable",
        "modifiers": ["const"],
        "format": ["camelCase", "UPPER_CASE", "PascalCase"]
      }
    ]
  },
  "overrides": [
    {
      "files": ["src/components/betting/**/*.tsx"],
      "rules": {
        "max-lines": ["error", 500],
        "max-lines-per-function": ["error", 100],
        "complexity": ["error", 10],
        "@typescript-eslint/explicit-function-return-type": "error"
      }
    },
    {
      "files": ["src/components/betting/**/*.test.tsx"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "max-lines": "off"
      }
    }
  ],
  "settings": {
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": "./tsconfig.json"
      }
    }
  }
}