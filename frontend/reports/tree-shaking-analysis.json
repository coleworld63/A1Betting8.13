{
  "timestamp": "2025-08-08T15:59:03.478Z",
  "fileCount": 2566,
  "barrelAnalysis": {
    "barrelFiles": [
      {
        "path": "/app/code/frontend/src/adapters/index.ts",
        "reExportCount": 2,
        "size": 110
      },
      {
        "path": "/app/code/frontend/src/api/index.ts",
        "reExportCount": 0,
        "size": 1143
      },
      {
        "path": "/app/code/frontend/src/components/MoneyMaker/index.tsx",
        "reExportCount": 0,
        "size": 189
      },
      {
        "path": "/app/code/frontend/src/components/ThemeToggle/index.ts",
        "reExportCount": 0,
        "size": 208
      },
      {
        "path": "/app/code/frontend/src/components/base/index.ts",
        "reExportCount": 0,
        "size": 181
      },
      {
        "path": "/app/code/frontend/src/components/builder/index.ts",
        "reExportCount": 0,
        "size": 545
      },
      {
        "path": "/app/code/frontend/src/components/common/buttons/index.ts",
        "reExportCount": 4,
        "size": 667
      },
      {
        "path": "/app/code/frontend/src/components/common/index.ts",
        "reExportCount": 0,
        "size": 57
      },
      {
        "path": "/app/code/frontend/src/components/common/notifications/index.ts",
        "reExportCount": 1,
        "size": 27
      },
      {
        "path": "/app/code/frontend/src/components/core/Layout/index.ts",
        "reExportCount": 0,
        "size": 349
      },
      {
        "path": "/app/code/frontend/src/components/core/Navbar/index.ts",
        "reExportCount": 0,
        "size": 170
      },
      {
        "path": "/app/code/frontend/src/components/core/Sidebar/index.ts",
        "reExportCount": 0,
        "size": 171
      },
      {
        "path": "/app/code/frontend/src/components/core/index.ts",
        "reExportCount": 0,
        "size": 483
      },
      {
        "path": "/app/code/frontend/src/components/elite/index.tsx",
        "reExportCount": 0,
        "size": 11
      },
      {
        "path": "/app/code/frontend/src/components/features/index.ts",
        "reExportCount": 1,
        "size": 555
      },
      {
        "path": "/app/code/frontend/src/components/filters/index.ts",
        "reExportCount": 3,
        "size": 1930
      },
      {
        "path": "/app/code/frontend/src/components/index.ts",
        "reExportCount": 2,
        "size": 1160
      },
      {
        "path": "/app/code/frontend/src/components/index.tsx",
        "reExportCount": 0,
        "size": 832
      },
      {
        "path": "/app/code/frontend/src/components/mega/index.ts",
        "reExportCount": 0,
        "size": 11
      },
      {
        "path": "/app/code/frontend/src/components/overview/index.ts",
        "reExportCount": 0,
        "size": 469
      },
      {
        "path": "/app/code/frontend/src/components/prediction/index.ts",
        "reExportCount": 0,
        "size": 603
      },
      {
        "path": "/app/code/frontend/src/components/settings/index.ts",
        "reExportCount": 0,
        "size": 736
      },
      {
        "path": "/app/code/frontend/src/components/shared/ui/index.ts",
        "reExportCount": 0,
        "size": 198
      },
      {
        "path": "/app/code/frontend/src/components/ui/betting/index.ts",
        "reExportCount": 0,
        "size": 411
      },
      {
        "path": "/app/code/frontend/src/components/ui/index.ts",
        "reExportCount": 8,
        "size": 821
      },
      {
        "path": "/app/code/frontend/src/components/user-friendly/index.tsx",
        "reExportCount": 0,
        "size": 555
      },
      {
        "path": "/app/code/frontend/src/domains/analytics/components/index.ts",
        "reExportCount": 1,
        "size": 54
      },
      {
        "path": "/app/code/frontend/src/domains/analytics/hooks/index.ts",
        "reExportCount": 1,
        "size": 49
      },
      {
        "path": "/app/code/frontend/src/domains/analytics/index.ts",
        "reExportCount": 5,
        "size": 397
      },
      {
        "path": "/app/code/frontend/src/domains/analytics/services/index.ts",
        "reExportCount": 1,
        "size": 52
      },
      {
        "path": "/app/code/frontend/src/domains/analytics/types/index.ts",
        "reExportCount": 1,
        "size": 49
      },
      {
        "path": "/app/code/frontend/src/domains/betting/components/index.ts",
        "reExportCount": 1,
        "size": 130
      },
      {
        "path": "/app/code/frontend/src/domains/betting/hooks/index.ts",
        "reExportCount": 1,
        "size": 71
      },
      {
        "path": "/app/code/frontend/src/domains/betting/index.ts",
        "reExportCount": 5,
        "size": 463
      },
      {
        "path": "/app/code/frontend/src/domains/betting/services/index.ts",
        "reExportCount": 1,
        "size": 77
      },
      {
        "path": "/app/code/frontend/src/domains/betting/types/index.ts",
        "reExportCount": 1,
        "size": 71
      },
      {
        "path": "/app/code/frontend/src/hooks/index.ts",
        "reExportCount": 2,
        "size": 5681
      },
      {
        "path": "/app/code/frontend/src/index.tsx",
        "reExportCount": 0,
        "size": 1287
      },
      {
        "path": "/app/code/frontend/src/interfaces/SimpleUserInterface/index.tsx",
        "reExportCount": 0,
        "size": 11
      },
      {
        "path": "/app/code/frontend/src/pages/index.tsx",
        "reExportCount": 0,
        "size": 11
      },
      {
        "path": "/app/code/frontend/src/providers/index.ts",
        "reExportCount": 1,
        "size": 2107
      },
      {
        "path": "/app/code/frontend/src/quantum/index.ts",
        "reExportCount": 0,
        "size": 11
      },
      {
        "path": "/app/code/frontend/src/services/adapters/index.ts",
        "reExportCount": 0,
        "size": 11
      },
      {
        "path": "/app/code/frontend/src/services/analytics/index.ts",
        "reExportCount": 0,
        "size": 175
      },
      {
        "path": "/app/code/frontend/src/services/api/index.ts",
        "reExportCount": 4,
        "size": 1190
      },
      {
        "path": "/app/code/frontend/src/services/espn/index.ts",
        "reExportCount": 0,
        "size": 11
      },
      {
        "path": "/app/code/frontend/src/services/index.ts",
        "reExportCount": 0,
        "size": 2057
      },
      {
        "path": "/app/code/frontend/src/services/integrations/index.ts",
        "reExportCount": 0,
        "size": 1066
      },
      {
        "path": "/app/code/frontend/src/services/ml/index.ts",
        "reExportCount": 0,
        "size": 11
      },
      {
        "path": "/app/code/frontend/src/services/predictions/index.ts",
        "reExportCount": 0,
        "size": 11
      },
      {
        "path": "/app/code/frontend/src/services/prizepicks/index.ts",
        "reExportCount": 0,
        "size": 11
      },
      {
        "path": "/app/code/frontend/src/services/sportsradar/index.ts",
        "reExportCount": 0,
        "size": 11
      },
      {
        "path": "/app/code/frontend/src/services/utils/index.ts",
        "reExportCount": 0,
        "size": 11
      },
      {
        "path": "/app/code/frontend/src/store/index.ts",
        "reExportCount": 8,
        "size": 7184
      },
      {
        "path": "/app/code/frontend/src/store/ml-predictions/index.ts",
        "reExportCount": 0,
        "size": 11
      },
      {
        "path": "/app/code/frontend/src/stores/index.ts",
        "reExportCount": 2,
        "size": 234
      },
      {
        "path": "/app/code/frontend/src/test-utils/index.ts",
        "reExportCount": 1,
        "size": 151
      },
      {
        "path": "/app/code/frontend/src/theme/index.ts",
        "reExportCount": 16,
        "size": 11079
      },
      {
        "path": "/app/code/frontend/src/types/index.ts",
        "reExportCount": 5,
        "size": 217
      },
      {
        "path": "/app/code/frontend/src/utils/index.ts",
        "reExportCount": 14,
        "size": 10603
      }
    ],
    "barrelImportUsage": [
      {
        "source": "@tanstack/react-query",
        "importCount": 3,
        "imports": [
          "QueryClient",
          "QueryClientProvider",
          "useQuery"
        ]
      },
      {
        "source": "react",
        "importCount": 22,
        "imports": [
          "useEffect",
          "useState",
          "Suspense",
          "useDeferredValue",
          "useMemo",
          "useTransition",
          "createContext",
          "useContext",
          "useRef",
          "Component",
          "ErrorInfo",
          "ReactNode",
          "useCallback",
          "useActionState",
          "useOptimistic",
          "useReducer",
          "memo",
          "ErrorBoundary",
          "forwardRef",
          "RefObject",
          "ComponentType",
          "lazy"
        ]
      },
      {
        "source": "react-router-dom",
        "importCount": 9,
        "imports": [
          "BrowserRouter",
          "Route",
          "Routes",
          "MemoryRouter",
          "Link",
          "useLocation",
          "useNavigate",
          "useParams",
          "useSearchParams"
        ]
      },
      {
        "source": "./components/core/ErrorBoundary",
        "importCount": 1,
        "imports": [
          "ErrorBoundary"
        ]
      },
      {
        "source": "./components/ErrorBoundaryVersion",
        "importCount": 1,
        "imports": [
          "ErrorBoundaryVersion"
        ]
      },
      {
        "source": "./contexts/AppContext",
        "importCount": 1,
        "imports": [
          "_AppProvider"
        ]
      },
      {
        "source": "./contexts/AuthContext",
        "importCount": 2,
        "imports": [
          "_AuthProvider",
          "useAuth"
        ]
      },
      {
        "source": "./contexts/ThemeContext",
        "importCount": 1,
        "imports": [
          "_ThemeProvider"
        ]
      },
      {
        "source": "./contexts/WebSocketContext",
        "importCount": 1,
        "imports": [
          "_WebSocketProvider"
        ]
      },
      {
        "source": "./onboarding/OnboardingContext",
        "importCount": 1,
        "imports": [
          "OnboardingProvider"
        ]
      },
      {
        "source": "./services/backendDiscovery",
        "importCount": 1,
        "imports": [
          "discoverBackend"
        ]
      },
      {
        "source": "./services/serviceWorkerManager",
        "importCount": 1,
        "imports": [
          "serviceWorkerManager"
        ]
      },
      {
        "source": "./services/SportsService",
        "importCount": 1,
        "imports": [
          "checkApiVersionCompatibility"
        ]
      },
      {
        "source": "./services/webVitalsService",
        "importCount": 1,
        "imports": [
          "webVitalsService"
        ]
      },
      {
        "source": "./update/UpdateModal",
        "importCount": 1,
        "imports": [
          "UpdateModal"
        ]
      },
      {
        "source": "./utils/getBackendUrl",
        "importCount": 1,
        "imports": [
          "getBackendUrl"
        ]
      },
      {
        "source": "./utils/lazyLoading",
        "importCount": 1,
        "imports": [
          "createLazyComponent"
        ]
      },
      {
        "source": "./utils/location",
        "importCount": 1,
        "imports": [
          "getLocation"
        ]
      },
      {
        "source": "./utils/performance",
        "importCount": 1,
        "imports": [
          "usePerformanceTracking"
        ]
      },
      {
        "source": "@testing-library/react",
        "importCount": 7,
        "imports": [
          "render",
          "screen",
          "waitFor",
          "act",
          "fireEvent",
          "within",
          "render as testingLibraryRender"
        ]
      },
      {
        "source": "./mocks/backend",
        "importCount": 1,
        "imports": [
          "setupBackendMocks"
        ]
      },
      {
        "source": "../contexts/AppContext",
        "importCount": 2,
        "imports": [
          "_AppProvider",
          "AppProvider"
        ]
      },
      {
        "source": "../contexts/AuthContext",
        "importCount": 4,
        "imports": [
          "_AuthProvider",
          "_AuthContext",
          "AuthContextType",
          "useAuth"
        ]
      },
      {
        "source": "../contexts/ThemeContext",
        "importCount": 2,
        "imports": [
          "_ThemeProvider",
          "ThemeProvider"
        ]
      },
      {
        "source": "../contexts/WebSocketContext",
        "importCount": 1,
        "imports": [
          "_WebSocketProvider"
        ]
      },
      {
        "source": "../App",
        "importCount": 1,
        "imports": [
          "AppContent"
        ]
      },
      {
        "source": "../services/MasterServiceRegistry",
        "importCount": 1,
        "imports": [
          "MasterServiceRegistry"
        ]
      },
      {
        "source": "../services/SportsService",
        "importCount": 3,
        "imports": [
          "activateSport",
          "checkApiVersionCompatibility",
          "detectSportsApiVersion"
        ]
      },
      {
        "source": "../../services/AnalysisCacheService",
        "importCount": 1,
        "imports": [
          "AnalysisCacheService"
        ]
      },
      {
        "source": "../../services/PropAnalysisAggregator",
        "importCount": 1,
        "imports": [
          "PropAnalysisAggregator"
        ]
      },
      {
        "source": "../../types/errors",
        "importCount": 2,
        "imports": [
          "PropOllamaError",
          "PropOllamaErrorType"
        ]
      },
      {
        "source": "msw",
        "importCount": 2,
        "imports": [
          "http",
          "HttpResponse"
        ]
      },
      {
        "source": "../../../test/msw-server",
        "importCount": 1,
        "imports": [
          "server"
        ]
      },
      {
        "source": "@/core/UnifiedMonitor",
        "importCount": 1,
        "imports": [
          "UnifiedMonitor"
        ]
      },
      {
        "source": "@/unified/DataSource",
        "importCount": 1,
        "imports": [
          "DataSource"
        ]
      },
      {
        "source": "@/unified/EventBus",
        "importCount": 1,
        "imports": [
          "EventBus"
        ]
      },
      {
        "source": "../types/prizePicksUnified",
        "importCount": 10,
        "imports": [
          "PrizePicksData",
          "PrizePicksLeague",
          "PrizePicksPlayer",
          "PrizePicksProjection",
          "PrizePicksAPIResponse",
          "PrizePicksIncludedResource",
          "RawPrizePicksIncludedLeague",
          "RawPrizePicksIncludedPlayer",
          "RawPrizePicksIncludedStatType",
          "RawPrizePicksProjection"
        ]
      },
      {
        "source": "./../api/PrizePicksAPI",
        "importCount": 5,
        "imports": [
          "PrizePicksAPI",
          "PrizePicksAPIResponse",
          "RawPrizePicksIncludedLeague",
          "RawPrizePicksIncludedPlayer",
          "RawPrizePicksProjection"
        ]
      },
      {
        "source": "./../core/UnifiedMonitor",
        "importCount": 1,
        "imports": [
          "UnifiedMonitor"
        ]
      },
      {
        "source": "../types/global",
        "importCount": 6,
        "imports": [
          "SocialSentimentData",
          "InjuryData",
          "ServiceConfig",
          "SportsGame",
          "PerformanceSpan",
          "PerformanceTrace"
        ]
      },
      {
        "source": "@jest/globals",
        "importCount": 6,
        "imports": [
          "beforeEach",
          "describe",
          "expect",
          "it",
          "test",
          "jest"
        ]
      },
      {
        "source": "../SocialSentimentAdapter",
        "importCount": 1,
        "imports": [
          "SocialSentimentAdapter"
        ]
      },
      {
        "source": "@/types.ts",
        "importCount": 38,
        "imports": [
          "PoeDataBlock",
          "PrizePicksProps",
          "SocialSentimentData",
          "FinalPredictionEngine",
          "FinalPredictionEngineDependencies",
          "FinalPredictionEngineConfig",
          "ModelOutput",
          "ModelWeight",
          "RiskProfile",
          "FinalPrediction",
          "RiskLevel",
          "//   PredictionWithExplanation",
          "UnifiedLogger",
          "UnifiedMetrics",
          "ModelVersion",
          "ModelEvaluation",
          "ModelEvaluatorConfig",
          "ModelMetadata",
          "ModelRegistryConfig",
          "EngineeredFeatures",
          "RawPlayerData",
          "FeatureLoggerConfig",
          "FeatureRegistryConfig",
          "FeatureConfig",
          "FeatureSelectionResult",
          "FeatureStoreConfig",
          "FeatureValidationResult",
          "CacheService",
          "Logger",
          "ModelConfig",
          "AdvancedEnsembleConfig",
          "ModelMetrics",
          "ModelPrediction",
          "ModelType",
          "ToastNotification",
          "BettingContext",
          "BettingDecision",
          "PerformanceMetrics"
        ]
      },
      {
        "source": "@/shared/prizePicks.ts",
        "importCount": 1,
        "imports": [
          "PrizePicksProps"
        ]
      },
      {
        "source": "@/types/prizePicksUnified",
        "importCount": 4,
        "imports": [
          "PoeApiResponse",
          "PoeDataBlock",
          "PoePropCardContent",
          "PrizePicksProps"
        ]
      },
      {
        "source": "../adapters/DailyFantasyAdapter",
        "importCount": 1,
        "imports": [
          "DailyFantasyData"
        ]
      },
      {
        "source": "../core/Analyzer",
        "importCount": 1,
        "imports": [
          "Analyzer"
        ]
      },
      {
        "source": "../unified/EventBus",
        "importCount": 1,
        "imports": [
          "EventBus"
        ]
      },
      {
        "source": "../utils/PerformanceMonitor",
        "importCount": 1,
        "imports": [
          "PerformanceMonitor"
        ]
      },
      {
        "source": "../adapters/SocialSentimentAdapter",
        "importCount": 1,
        "imports": [
          "SocialSentimentData"
        ]
      },
      {
        "source": "../adapters/SportsRadarAdapter",
        "importCount": 1,
        "imports": [
          "SportsRadarData"
        ]
      },
      {
        "source": "../adapters/TheOddsAdapter",
        "importCount": 1,
        "imports": [
          "TheOddsData"
        ]
      },
      {
        "source": "../core/EventBus",
        "importCount": 1,
        "imports": [
          "EventBus"
        ]
      },
      {
        "source": "../unified/PerformanceMonitor",
        "importCount": 1,
        "imports": [
          "PerformanceMonitor"
        ]
      },
      {
        "source": "../utils/Analyzer",
        "importCount": 1,
        "imports": [
          "Analyzer"
        ]
      },
      {
        "source": "../utils/ProjectionAnalyzer",
        "importCount": 1,
        "imports": [
          "ProjectionAnalysis"
        ]
      },
      {
        "source": "next.ts",
        "importCount": 2,
        "imports": [
          "NextApiRequest",
          "NextApiResponse"
        ]
      },
      {
        "source": "../config/api",
        "importCount": 1,
        "imports": [
          "API_CONFIG"
        ]
      },
      {
        "source": "../utils/location",
        "importCount": 1,
        "imports": [
          "getLocation"
        ]
      },
      {
        "source": "@/core/UnifiedLogger",
        "importCount": 1,
        "imports": [
          "UnifiedLogger"
        ]
      },
      {
        "source": "@/core/UnifiedMetrics",
        "importCount": 1,
        "imports": [
          "UnifiedMetrics"
        ]
      },
      {
        "source": "@/core/analytics/ModelPerformanceTracker",
        "importCount": 1,
        "imports": [
          "ModelPerformanceMetrics"
        ]
      },
      {
        "source": "express",
        "importCount": 2,
        "imports": [
          "Request",
          "Response"
        ]
      },
      {
        "source": "react-error-boundary",
        "importCount": 2,
        "imports": [
          "ErrorBoundary",
          "FallbackProps"
        ]
      },
      {
        "source": "zustand",
        "importCount": 2,
        "imports": [
          "create",
          "StateCreator"
        ]
      },
      {
        "source": "zustand/middleware",
        "importCount": 3,
        "imports": [
          "persist",
          "subscribeWithSelector",
          "devtools"
        ]
      },
      {
        "source": "zustand/middleware/immer",
        "importCount": 1,
        "imports": [
          "immer"
        ]
      },
      {
        "source": "./authUtils",
        "importCount": 3,
        "imports": [
          "_AuthContext",
          "login as backendLogin",
          "register as backendRegister"
        ]
      },
      {
        "source": "@/types/betting.ts",
        "importCount": 13,
        "imports": [
          "RealtimeData",
          "LiveOddsTickerProps",
          "Bet",
          "Event",
          "Sport",
          "AnalyticsMetrics",
          "BookOdds",
          "BettingOpportunity",
          "TeaserLeg",
          "TeaserStrategy",
          "BettingOdds",
          "LineShoppingResult",
          "Sportsbook"
        ]
      },
      {
        "source": "./Card",
        "importCount": 7,
        "imports": [
          "Card",
          "CardContent",
          "CardHeader",
          "_Card as Card",
          "_CardContent as CardContent",
          "_CardFooter as CardFooter",
          "_CardHeader as CardHeader"
        ]
      },
      {
        "source": "framer-motion",
        "importCount": 3,
        "imports": [
          "motion",
          "AnimatePresence",
          "MotionProps"
        ]
      },
      {
        "source": "lucide-react",
        "importCount": 126,
        "imports": [
          "AlertTriangle",
          "BarChart3",
          "CheckCircle",
          "Clock",
          "Pause",
          "Play",
          "Settings",
          "Shield",
          "Zap",
          "DollarSign",
          "PieChart",
          "Target",
          "ChevronRight",
          "Activity",
          "Heart",
          "Search",
          "TrendingDown",
          "User",
          "X",
          "TrendingUp",
          "Brain",
          "Calculator",
          "RefreshCw",
          "Cpu",
          "PlayCircle",
          "ExternalLink",
          "Filter",
          "Newspaper",
          "Star",
          "Calendar",
          "Trophy",
          "AlertCircle",
          "GitBranch",
          "RotateCcw",
          "Eye",
          "Lightbulb",
          "MessageSquare",
          "Share2",
          "Users",
          "Cloud",
          "CloudRain",
          "Droplets",
          "Snowflake",
          "Sun",
          "Thermometer",
          "Wind",
          "Mail",
          "XCircle",
          "CreditCard",
          "Edit",
          "HardDrive",
          "Lock",
          "MemoryStick",
          "Network",
          "Plus",
          "Server",
          "Trash2",
          "Unlock",
          "UserCheck",
          "MoreVertical",
          "Ban",
          "UserX",
          "Square",
          "Bookmark",
          "Timer",
          "Loader2",
          "Database",
          "Percent",
          "LineChart",
          "Info",
          "Send",
          "EyeOff",
          "LogIn",
          "Key",
          "ChevronDown",
          "Menu",
          "Bell",
          "LogOut",
          "Crown",
          "Award",
          "Briefcase",
          "GraduationCap",
          "Home",
          "Radio",
          "Wallet",
          "Palette",
          "Moon",
          "Monitor",
          "Sparkles",
          "Download",
          "Upload",
          "Check",
          "Loader",
          "Wifi",
          "WifiOff",
          "ChevronUp",
          "ArrowRight",
          "BookOpen",
          "Minus",
          "Settings2",
          "Globe",
          "MapPin",
          "Volume2",
          "Atom",
          "Waves",
          "Save",
          "History",
          "Smartphone",
          "VolumeX",
          "Twitter",
          "ThumbsUp",
          "ThumbsDown",
          "Phone",
          "Compass",
          "Gamepad2",
          "Laptop",
          "HelpCircle",
          "Tv",
          "Bot",
          "Maximize2",
          "MessageCircle",
          "Minimize2",
          "ArrowUpRight",
          "ArrowDownRight",
          "Code",
          "Settings as SettingsIcon"
        ]
      },
      {
        "source": "../components/ui/badge",
        "importCount": 1,
        "imports": [
          "Badge"
        ]
      },
      {
        "source": "../components/ui/button",
        "importCount": 1,
        "imports": [
          "Button"
        ]
      },
      {
        "source": "../components/ui/card",
        "importCount": 1,
        "imports": [
          "Card"
        ]
      },
      {
        "source": "../services/backendDiscovery",
        "importCount": 1,
        "imports": [
          "discoverBackend"
        ]
      },
      {
        "source": "./Button",
        "importCount": 1,
        "imports": [
          "_Button as Button"
        ]
      },
      {
        "source": "../contexts/CommandSummaryContext",
        "importCount": 2,
        "imports": [
          "CommandSummaryProvider",
          "useCommandSummary"
        ]
      },
      {
        "source": "framer-motion.ts",
        "importCount": 1,
        "imports": [
          "MotionProps"
        ]
      },
      {
        "source": "../services/unified/FeaturedPropsService",
        "importCount": 1,
        "imports": [
          "FeaturedProp"
        ]
      },
      {
        "source": "../utils/enhancedApiClient",
        "importCount": 2,
        "imports": [
          "EnhancedApiClient",
          "apiClient"
        ]
      },
      {
        "source": "../services/EnhancedServiceClient",
        "importCount": 5,
        "imports": [
          "BankrollStatus",
          "BettingOpportunity",
          "enhancedServiceClient",
          "EnhancedUser",
          "RiskMetrics"
        ]
      },
      {
        "source": "../services/EnhancedPropAnalysisService",
        "importCount": 1,
        "imports": [
          "EnhancedPropAnalysis"
        ]
      },
      {
        "source": "react-error-boundary.ts",
        "importCount": 1,
        "imports": [
          "FallbackProps"
        ]
      },
      {
        "source": "react-hot-toast",
        "importCount": 2,
        "imports": [
          "toast",
          "Toaster as HotToaster"
        ]
      },
      {
        "source": "./ui/badge",
        "importCount": 1,
        "imports": [
          "_Badge as Badge"
        ]
      },
      {
        "source": "./Toast",
        "importCount": 1,
        "imports": [
          "_showToast"
        ]
      },
      {
        "source": "./types/LockedBet",
        "importCount": 1,
        "imports": [
          "LockedBet"
        ]
      },
      {
        "source": "@/types/prediction.ts",
        "importCount": 1,
        "imports": [
          "ModelMetrics"
        ]
      },
      {
        "source": "@/components/shared/Spinner",
        "importCount": 1,
        "imports": [
          "Spinner"
        ]
      },
      {
        "source": "@/hooks/useMediaQuery",
        "importCount": 1,
        "imports": [
          "useMediaQuery"
        ]
      },
      {
        "source": "recharts",
        "importCount": 20,
        "imports": [
          "CartesianGrid",
          "Line",
          "LineChart",
          "ResponsiveContainer",
          "Tooltip",
          "XAxis",
          "YAxis",
          "Bar",
          "BarChart",
          "Scatter",
          "ScatterChart",
          "Legend",
          "Cell",
          "PolarAngleAxis",
          "PolarGrid",
          "PolarRadiusAxis",
          "Radar",
          "RadarChart",
          "Pie",
          "PieChart"
        ]
      },
      {
        "source": "@/types/prizePicks.ts",
        "importCount": 5,
        "imports": [
          "ProcessedPrizePicksProp",
          "PropOption",
          "PrizePicksProps",
          "PrizePicksPlayer",
          "PrizePicksLines"
        ]
      },
      {
        "source": "../utils/connectionResilience",
        "importCount": 1,
        "imports": [
          "connectionResilience"
        ]
      },
      {
        "source": "../services/realTimePredictionService",
        "importCount": 4,
        "imports": [
          "PredictionStats",
          "RealTimePrediction",
          "SystemHealth",
          "realTimePredictionService"
        ]
      },
      {
        "source": "../utils/UniversalUtils",
        "importCount": 1,
        "imports": [
          "safeNumber"
        ]
      },
      {
        "source": "@/services/analytics/userPersonalizationService",
        "importCount": 1,
        "imports": [
          "userPersonalizationService"
        ]
      },
      {
        "source": "../hooks/useTrendingSuggestions",
        "importCount": 1,
        "imports": [
          "useTrendingSuggestions"
        ]
      },
      {
        "source": "@tanstack/react-virtual",
        "importCount": 1,
        "imports": [
          "useVirtualizer"
        ]
      },
      {
        "source": "../../contexts/AuthContext",
        "importCount": 2,
        "imports": [
          "_AuthProvider",
          "useAuth"
        ]
      },
      {
        "source": "../../contexts/AppContext",
        "importCount": 1,
        "imports": [
          "_AppProvider"
        ]
      },
      {
        "source": "../../contexts/ThemeContext",
        "importCount": 1,
        "imports": [
          "_ThemeProvider"
        ]
      },
      {
        "source": "../../services/AccessRequestService",
        "importCount": 3,
        "imports": [
          "_accessRequestService",
          "AccessRequest",
          "AccessRequestResponse"
        ]
      },
      {
        "source": "../../services/ai/OllamaService",
        "importCount": 2,
        "imports": [
          "type ExplainRequest",
          "type AIResponse"
        ]
      },
      {
        "source": "../../services/realTimeAnalysisService",
        "importCount": 6,
        "imports": [
          "realTimeAnalysisService",
          "AnalysisResponse",
          "AnalysisProgress",
          "BetOpportunity",
          "OptimalLineup",
          "SystemStatus"
        ]
      },
      {
        "source": "../../types/analytics",
        "importCount": 14,
        "imports": [
          "CrossSportInsight",
          "SportSummary",
          "ModelPerformanceSnapshot",
          "PerformanceAlert",
          "AnalyticsHealthResponse",
          "ApiError",
          "CrossSportInsightsResponse",
          "DashboardSummaryResponse",
          "EnsemblePerformanceReport",
          "EnsemblePredictionRequest",
          "EnsemblePredictionResponse",
          "ModelDetailedPerformance",
          "ModelPerformanceResponse",
          "PerformanceAlertsResponse"
        ]
      },
      {
        "source": "../../hooks/useAnalytics",
        "importCount": 3,
        "imports": [
          "useAnalyticsDashboard",
          "useAnalyticsHealth",
          "usePerformanceAlerts"
        ]
      },
      {
        "source": "./DashboardFiltersPanel",
        "importCount": 1,
        "imports": [
          "DashboardFilters"
        ]
      },
      {
        "source": "../ui/Card",
        "importCount": 4,
        "imports": [
          "Card",
          "CardContent",
          "CardHeader",
          "CardTitle"
        ]
      },
      {
        "source": "../ui/Button",
        "importCount": 1,
        "imports": [
          "Button"
        ]
      },
      {
        "source": "../ui/Badge",
        "importCount": 1,
        "imports": [
          "Badge"
        ]
      },
      {
        "source": "../ui/Progress",
        "importCount": 1,
        "imports": [
          "Progress"
        ]
      },
      {
        "source": "../ui/Tabs",
        "importCount": 4,
        "imports": [
          "Tabs",
          "TabsContent",
          "TabsList",
          "TabsTrigger"
        ]
      },
      {
        "source": "../ui/Alert",
        "importCount": 2,
        "imports": [
          "Alert",
          "AlertDescription"
        ]
      },
      {
        "source": "../../../services/integrations/liveDataLogger",
        "importCount": 1,
        "imports": [
          "logInfo"
        ]
      },
      {
        "source": "../../../services/analytics/PatternRecognitionService",
        "importCount": 1,
        "imports": [
          "PatternRecognitionService"
        ]
      },
      {
        "source": "../../../services/analytics/RiskAssessmentService",
        "importCount": 1,
        "imports": [
          "RiskAssessmentService"
        ]
      },
      {
        "source": "../../utils/location",
        "importCount": 1,
        "imports": [
          "getLocation"
        ]
      },
      {
        "source": "../../utils/getBackendUrl",
        "importCount": 1,
        "imports": [
          "getBackendUrl"
        ]
      },
      {
        "source": "../../hooks/usePermissions",
        "importCount": 2,
        "imports": [
          "_usePermissions",
          "usePermissions"
        ]
      },
      {
        "source": "../../services/PermissionService",
        "importCount": 2,
        "imports": [
          "Permission",
          "Role"
        ]
      },
      {
        "source": "../shared/PropOllamaTypes",
        "importCount": 11,
        "imports": [
          "SelectedProp",
          "PropFilters as PropFiltersType",
          "ConnectionHealth",
          "LoadingStage",
          "PropDisplayOptions",
          "PropFilters",
          "PropSorting",
          "SportActivationStatus",
          "UpcomingGame",
          "PropSorting as PropSortingType",
          "SortByType"
        ]
      },
      {
        "source": "@/components/betting/BetSlipComponent",
        "importCount": 1,
        "imports": [
          "BetSlipComponent"
        ]
      },
      {
        "source": "@/components/filters/BettingFilters",
        "importCount": 1,
        "imports": [
          "BettingFilters"
        ]
      },
      {
        "source": "@/hooks/useUnifiedBettingState",
        "importCount": 1,
        "imports": [
          "useUnifiedBettingState"
        ]
      },
      {
        "source": "react.ts",
        "importCount": 3,
        "imports": [
          "Component",
          "ErrorInfo",
          "ReactNode"
        ]
      },
      {
        "source": "../../utils/security",
        "importCount": 7,
        "imports": [
          "getSecurityConfig",
          "ClientRateLimiter",
          "SecureStorage",
          "generateCSRFToken",
          "isValidEmail",
          "sanitizeInput",
          "validatePassword"
        ]
      },
      {
        "source": "../../services/backendDiscovery",
        "importCount": 1,
        "imports": [
          "discoverBackend"
        ]
      },
      {
        "source": "./Button.ts",
        "importCount": 1,
        "imports": [
          "ButtonProps"
        ]
      },
      {
        "source": "../core/ErrorBoundary",
        "importCount": 1,
        "imports": [
          "ErrorBoundary"
        ]
      },
      {
        "source": "../../hooks/useAIInsights",
        "importCount": 1,
        "imports": [
          "useAIInsights"
        ]
      },
      {
        "source": "../../hooks/useEnhancedBets",
        "importCount": 1,
        "imports": [
          "useEnhancedBets"
        ]
      },
      {
        "source": "../../hooks/usePortfolioOptimization",
        "importCount": 1,
        "imports": [
          "usePortfolioOptimization"
        ]
      },
      {
        "source": "../../../hooks/useAIInsights",
        "importCount": 1,
        "imports": [
          "useAIInsights"
        ]
      },
      {
        "source": "../../../hooks/useEnhancedBets",
        "importCount": 1,
        "imports": [
          "useEnhancedBets"
        ]
      },
      {
        "source": "../../../hooks/usePortfolioOptimization",
        "importCount": 1,
        "imports": [
          "usePortfolioOptimization"
        ]
      },
      {
        "source": "../../services/HttpClient",
        "importCount": 1,
        "imports": [
          "httpFetch"
        ]
      },
      {
        "source": "../betting/BetSlipComponent",
        "importCount": 1,
        "imports": [
          "BetSlipComponent"
        ]
      },
      {
        "source": "../filters/PropFilters",
        "importCount": 1,
        "imports": [
          "PropFilters"
        ]
      },
      {
        "source": "../hooks/usePropOllamaState",
        "importCount": 1,
        "imports": [
          "usePropOllamaState"
        ]
      },
      {
        "source": "../lists/PropList",
        "importCount": 1,
        "imports": [
          "PropList"
        ]
      },
      {
        "source": "../performance/PerformancePanel",
        "importCount": 1,
        "imports": [
          "PerformancePanel"
        ]
      },
      {
        "source": "../sorting/PropSorting",
        "importCount": 1,
        "imports": [
          "PropSorting"
        ]
      },
      {
        "source": "../stats/GameStatsPanel",
        "importCount": 1,
        "imports": [
          "GameStatsPanel"
        ]
      },
      {
        "source": "../../constants/sports",
        "importCount": 4,
        "imports": [
          "SPORTS_CONFIG",
          "SPORT_CATEGORIES",
          "getSportById",
          "getSportDisplayName"
        ]
      },
      {
        "source": "./Navigation",
        "importCount": 1,
        "imports": [
          "Navigation"
        ]
      },
      {
        "source": "../../lib/utils",
        "importCount": 1,
        "imports": [
          "cn"
        ]
      },
      {
        "source": "../ui",
        "importCount": 4,
        "imports": [
          "HolographicText",
          "CyberButton",
          "GlowCard",
          "ParticleField"
        ]
      },
      {
        "source": "../auth/PermissionGuard",
        "importCount": 1,
        "imports": [
          "AdminOnly"
        ]
      },
      {
        "source": "../../utils/tracing",
        "importCount": 1,
        "imports": [
          "provider"
        ]
      },
      {
        "source": "../../services/serviceWorkerManager",
        "importCount": 1,
        "imports": [
          "useServiceWorkerUpdate"
        ]
      },
      {
        "source": "../../theme",
        "importCount": 10,
        "imports": [
          "// @ts-expect-error TS(2305): Module '\"../../theme\"' has no exported member 'THE... Remove this comment to see the full error message\n  THEMES",
          "// @ts-expect-error TS(2305): Module '\"../../theme\"' has no exported member 'The... Remove this comment to see the full error message\n  Theme",
          "// @ts-expect-error TS(2305): Module '\"../../theme\"' has no exported member 'THE... Remove this comment to see the full error message\n  THEME_CATEGORIES",
          "// @ts-expect-error TS(2305): Module '\"../../theme\"' has no exported member 'get... Remove this comment to see the full error message\n  getThemeById",
          "// @ts-expect-error TS(2305): Module '\"../../theme\"' has no exported member 'get... Remove this comment to see the full error message\n  getThemesByCategory",
          "// @ts-expect-error TS(2305): Module '\"../../theme\"' has no exported member 'app... Remove this comment to see the full error message\n  applyCSSVariables",
          "// @ts-expect-error TS(2305): Module '\"../../theme\"' has no exported member 'sav... Remove this comment to see the full error message\n  saveTheme",
          "// @ts-expect-error TS(2305): Module '\"../../theme\"' has no exported member 'loa... Remove this comment to see the full error message\n  loadTheme",
          "// @ts-expect-error TS(2305): Module '\"../../theme\"' has no exported member 'get... Remove this comment to see the full error message\n  getSystemTheme",
          "// @ts-expect-error TS(2305): Module '\"../../theme\"' has no exported member 'get... Remove this comment to see the full error message\n  getRecommendedTheme"
        ]
      },
      {
        "source": "../../services/SportsService",
        "importCount": 1,
        "imports": [
          "activateSport"
        ]
      },
      {
        "source": "../../services/unified/FeaturedPropsService",
        "importCount": 3,
        "imports": [
          "FeaturedProp",
          "fetchFeaturedProps",
          "fetchBatchPredictions"
        ]
      },
      {
        "source": "../hooks/useSimplePropOllamaData",
        "importCount": 1,
        "imports": [
          "useSimplePropOllamaData"
        ]
      },
      {
        "source": "../../hooks/useElectron",
        "importCount": 2,
        "imports": [
          "useElectron",
          "useMenuActions"
        ]
      },
      {
        "source": "../../types/enhancedBetting",
        "importCount": 7,
        "imports": [
          "AIInsights",
          "EnhancedPrediction",
          "PortfolioMetrics",
          "PortfolioAnalysis",
          "StackSuggestion",
          "CorrelationMatrix",
          "EnhancedBetsResponse"
        ]
      },
      {
        "source": "chart.js",
        "importCount": 13,
        "imports": [
          "BarElement",
          "CategoryScale",
          "Chart as ChartJS",
          "Legend",
          "LineElement",
          "LinearScale",
          "PointElement",
          "Title",
          "Tooltip",
          "Filler",
          "RadarController",
          "RadialLinearScale",
          "Chart"
        ]
      },
      {
        "source": "react-chartjs-2",
        "importCount": 3,
        "imports": [
          "Bar",
          "Line",
          "Radar"
        ]
      },
      {
        "source": "../../utils/UniversalUtils",
        "importCount": 1,
        "imports": [
          "safeNumber"
        ]
      },
      {
        "source": "../ui/Slider",
        "importCount": 1,
        "imports": [
          "Slider"
        ]
      },
      {
        "source": "../ui/Switch",
        "importCount": 1,
        "imports": [
          "Switch"
        ]
      },
      {
        "source": "../../core/Layout",
        "importCount": 1,
        "imports": [
          "Layout"
        ]
      },
      {
        "source": "../../ui/badge",
        "importCount": 1,
        "imports": [
          "Badge"
        ]
      },
      {
        "source": "../../ui/button",
        "importCount": 1,
        "imports": [
          "Button"
        ]
      },
      {
        "source": "../../../services/cheatsheetsService",
        "importCount": 3,
        "imports": [
          "cheatsheetsService",
          "type PropOpportunity",
          "type CheatsheetFilters as ServiceFilters"
        ]
      },
      {
        "source": "./hooks",
        "importCount": 3,
        "imports": [
          "useKeyMetrics",
          "useLiveOpportunities",
          "useMlModelStats"
        ]
      },
      {
        "source": "../../../constants/sports",
        "importCount": 10,
        "imports": [
          "SPORTS_CONFIG",
          "getActiveSports",
          "getSportColor",
          "SEASON_FILTERS",
          "SPORT_CATEGORIES",
          "getFantasySports",
          "getLiveBettingSports",
          "getSportDisplayName",
          "getSportEmoji",
          "getSportsByCategory"
        ]
      },
      {
        "source": "../../core/AdvancedFilters",
        "importCount": 1,
        "imports": [
          "FilterState"
        ]
      },
      {
        "source": "../../../services/injuryService",
        "importCount": 5,
        "imports": [
          "injuryService",
          "PlayerInjury",
          "InjuryReport",
          "InjuryTrend",
          "HealthAlert"
        ]
      },
      {
        "source": "../../../services/lineupService",
        "importCount": 5,
        "imports": [
          "lineupService",
          "Player",
          "Contest",
          "LineupOptimization",
          "LineupStrategy"
        ]
      },
      {
        "source": "./MockOddsData",
        "importCount": 1,
        "imports": [
          "mockOddsData"
        ]
      },
      {
        "source": "../../../types/prizePicksUnified",
        "importCount": 4,
        "imports": [
          "PlayerProp",
          "Lineup",
          "PrizePicksStats",
          "transformToProjection"
        ]
      },
      {
        "source": "../../../utils/location",
        "importCount": 1,
        "imports": [
          "getLocation"
        ]
      },
      {
        "source": "../../hooks/useUnifiedBettingState",
        "importCount": 1,
        "imports": [
          "BettingFiltersState"
        ]
      },
      {
        "source": "../../utils/enhancedApiClient",
        "importCount": 1,
        "imports": [
          "EnhancedApiClient"
        ]
      },
      {
        "source": "./usePropOllamaState",
        "importCount": 2,
        "imports": [
          "PropOllamaActions",
          "PropOllamaState"
        ]
      },
      {
        "source": "../../services/EnhancedPropAnalysisService",
        "importCount": 1,
        "imports": [
          "EnhancedPropAnalysis"
        ]
      },
      {
        "source": "../../services/SimplePropsService",
        "importCount": 1,
        "imports": [
          "fetchPropsSimple"
        ]
      },
      {
        "source": "../shared/DemoModeIndicator",
        "importCount": 1,
        "imports": [
          "DemoModeIndicator"
        ]
      },
      {
        "source": "./PerformanceAlert.ts",
        "importCount": 1,
        "imports": [
          "PerformanceAlert as AlertType"
        ]
      },
      {
        "source": "react-window",
        "importCount": 2,
        "imports": [
          "FixedSizeList as List",
          "ListChildComponentProps"
        ]
      },
      {
        "source": "../PropCard",
        "importCount": 1,
        "imports": [
          "PropCardProps"
        ]
      },
      {
        "source": "../../services/optimized/OptimizedSportsDataService",
        "importCount": 1,
        "imports": [
          "OptimizedSportsDataService"
        ]
      },
      {
        "source": "../hooks/usePropOllamaReducer",
        "importCount": 1,
        "imports": [
          "usePropOllamaReducer"
        ]
      },
      {
        "source": "./OptimizedPropList",
        "importCount": 1,
        "imports": [
          "OptimizedPropList"
        ]
      },
      {
        "source": "../ui/card",
        "importCount": 4,
        "imports": [
          "Card",
          "CardContent",
          "CardHeader",
          "CardTitle"
        ]
      },
      {
        "source": "../ui/button",
        "importCount": 1,
        "imports": [
          "Button"
        ]
      },
      {
        "source": "../ui/input",
        "importCount": 1,
        "imports": [
          "Input"
        ]
      },
      {
        "source": "../ui/tabs",
        "importCount": 4,
        "imports": [
          "Tabs",
          "TabsContent",
          "TabsList",
          "TabsTrigger"
        ]
      },
      {
        "source": "../ui/alert",
        "importCount": 2,
        "imports": [
          "Alert",
          "AlertDescription"
        ]
      },
      {
        "source": "../ui/badge",
        "importCount": 1,
        "imports": [
          "Badge"
        ]
      },
      {
        "source": "../ui/progress",
        "importCount": 1,
        "imports": [
          "Progress"
        ]
      },
      {
        "source": "../ui/switch",
        "importCount": 1,
        "imports": [
          "Switch"
        ]
      },
      {
        "source": "./PlayerAdvancedStats",
        "importCount": 1,
        "imports": [
          "PlayerAdvancedStats"
        ]
      },
      {
        "source": "./PlayerMatchupAnalysis",
        "importCount": 1,
        "imports": [
          "PlayerMatchupAnalysis"
        ]
      },
      {
        "source": "./PlayerPerformanceTrends",
        "importCount": 1,
        "imports": [
          "PlayerPerformanceTrends"
        ]
      },
      {
        "source": "./PlayerQuickStats",
        "importCount": 1,
        "imports": [
          "PlayerQuickStats"
        ]
      },
      {
        "source": "../../hooks/usePlayerDashboardState",
        "importCount": 1,
        "imports": [
          "usePlayerDashboardState"
        ]
      },
      {
        "source": "./PlayerDashboardContainer",
        "importCount": 1,
        "imports": [
          "PlayerDashboardContainer"
        ]
      },
      {
        "source": "msw/node",
        "importCount": 1,
        "imports": [
          "setupServer"
        ]
      },
      {
        "source": "../PlayerDashboardContainer",
        "importCount": 1,
        "imports": [
          "PlayerDashboardContainer"
        ]
      },
      {
        "source": "@/types/explainability.ts",
        "importCount": 1,
        "imports": [
          "ShapValue"
        ]
      },
      {
        "source": "@/lib/utils",
        "importCount": 1,
        "imports": [
          "cn"
        ]
      },
      {
        "source": "@/services/configService.js",
        "importCount": 1,
        "imports": [
          "isFeatureEnabled"
        ]
      },
      {
        "source": "@/store/slices/betHistorySlice",
        "importCount": 1,
        "imports": [
          "useBetHistoryStore"
        ]
      },
      {
        "source": "./button",
        "importCount": 1,
        "imports": [
          "Button"
        ]
      },
      {
        "source": "./badge",
        "importCount": 1,
        "imports": [
          "Badge"
        ]
      },
      {
        "source": "./card",
        "importCount": 6,
        "imports": [
          "Card",
          "CardHeader",
          "CardTitle",
          "CardDescription",
          "CardContent",
          "CardFooter"
        ]
      },
      {
        "source": "./input",
        "importCount": 1,
        "imports": [
          "Input"
        ]
      },
      {
        "source": "./label",
        "importCount": 1,
        "imports": [
          "Label"
        ]
      },
      {
        "source": "./tabs",
        "importCount": 4,
        "imports": [
          "Tabs",
          "TabsList",
          "TabsTrigger",
          "TabsContent"
        ]
      },
      {
        "source": "./select",
        "importCount": 5,
        "imports": [
          "Select",
          "SelectContent",
          "SelectItem",
          "SelectTrigger",
          "SelectValue"
        ]
      },
      {
        "source": "./progress",
        "importCount": 1,
        "imports": [
          "Progress"
        ]
      },
      {
        "source": "./slider",
        "importCount": 1,
        "imports": [
          "Slider"
        ]
      },
      {
        "source": "./alert",
        "importCount": 1,
        "imports": [
          "Alert"
        ]
      },
      {
        "source": "./HolographicText",
        "importCount": 1,
        "imports": [
          "HolographicText"
        ]
      },
      {
        "source": "./CyberButton",
        "importCount": 1,
        "imports": [
          "CyberButton"
        ]
      },
      {
        "source": "./GlowCard",
        "importCount": 1,
        "imports": [
          "GlowCard"
        ]
      },
      {
        "source": "./GlassCard",
        "importCount": 1,
        "imports": [
          "GlassCard"
        ]
      },
      {
        "source": "./LoadingWave",
        "importCount": 3,
        "imports": [
          "LoadingWave",
          "LoadingSpinner",
          "LoadingPulse"
        ]
      },
      {
        "source": "./ParticleField",
        "importCount": 1,
        "imports": [
          "ParticleField"
        ]
      },
      {
        "source": "./Skeleton",
        "importCount": 1,
        "imports": [
          "Skeleton"
        ]
      },
      {
        "source": "./LoadingOverlay",
        "importCount": 1,
        "imports": [
          "LoadingOverlay"
        ]
      },
      {
        "source": "./MetricCard",
        "importCount": 1,
        "imports": [
          "MetricCard"
        ]
      },
      {
        "source": "./StatusIndicator",
        "importCount": 1,
        "imports": [
          "StatusIndicator"
        ]
      },
      {
        "source": "./GlowButton",
        "importCount": 1,
        "imports": [
          "GlowButton"
        ]
      },
      {
        "source": "./PropOllama",
        "importCount": 1,
        "imports": [
          "PropOllamaMessage"
        ]
      },
      {
        "source": "../../hooks/usePrizePicksProps",
        "importCount": 1,
        "imports": [
          "usePrizePicksProps"
        ]
      },
      {
        "source": "../../hooks/useQuantumPredictions",
        "importCount": 1,
        "imports": [
          "useQuantumPredictions"
        ]
      },
      {
        "source": "../../services/propOllamaService",
        "importCount": 3,
        "imports": [
          "ModelHealthStatus",
          "PropOllamaRequest",
          "propOllamaService"
        ]
      },
      {
        "source": "../../../services/propOllamaService",
        "importCount": 1,
        "imports": [
          "propOllamaService"
        ]
      },
      {
        "source": "../../../contexts/AppContext",
        "importCount": 1,
        "imports": [
          "_AppProvider"
        ]
      },
      {
        "source": "../../../contexts/AuthContext",
        "importCount": 1,
        "imports": [
          "_AuthProvider"
        ]
      },
      {
        "source": "../../../contexts/ThemeContext",
        "importCount": 1,
        "imports": [
          "_ThemeProvider"
        ]
      },
      {
        "source": "zod",
        "importCount": 3,
        "imports": [
          "z",
          "ZodTypeAny",
          "ZodSchema"
        ]
      },
      {
        "source": "../services/authService",
        "importCount": 4,
        "imports": [
          "AuthResponse",
          "_authService as authService",
          "PasswordChangeRequest",
          "User"
        ]
      },
      {
        "source": "../AppContext",
        "importCount": 2,
        "imports": [
          "_AppProvider",
          "_useAppContext"
        ]
      },
      {
        "source": "../../services/authService",
        "importCount": 2,
        "imports": [
          "_authService as authService",
          "User"
        ]
      },
      {
        "source": "../AuthContext",
        "importCount": 2,
        "imports": [
          "_AuthProvider as AuthProvider",
          "useAuth"
        ]
      },
      {
        "source": "../MetricsContext",
        "importCount": 2,
        "imports": [
          "_MetricsProvider",
          "_useMetrics"
        ]
      },
      {
        "source": "../ThemeContext",
        "importCount": 2,
        "imports": [
          "_ThemeProvider",
          "_useTheme"
        ]
      },
      {
        "source": "../WebSocketContext",
        "importCount": 2,
        "imports": [
          "_WebSocketProvider",
          "_useWebSocket"
        ]
      },
      {
        "source": "../hooks/useAnalytics",
        "importCount": 1,
        "imports": [
          "useAnalytics"
        ]
      },
      {
        "source": "../hooks/useBettingAnalytics",
        "importCount": 1,
        "imports": [
          "useBettingAnalytics"
        ]
      },
      {
        "source": "../hooks/useEnhancedBettingEngine",
        "importCount": 1,
        "imports": [
          "useEnhancedBettingEngine"
        ]
      },
      {
        "source": "../hooks/useEnhancedRealDataSources",
        "importCount": 1,
        "imports": [
          "useEnhancedRealDataSources"
        ]
      },
      {
        "source": "../hooks/useMLAnalytics",
        "importCount": 1,
        "imports": [
          "useMLAnalytics"
        ]
      },
      {
        "source": "../hooks/useRealtimePredictions",
        "importCount": 1,
        "imports": [
          "useRealtimePredictions"
        ]
      },
      {
        "source": "../hooks/useSmartAlerts",
        "importCount": 1,
        "imports": [
          "useSmartAlerts"
        ]
      },
      {
        "source": "../hooks/useUnifiedAnalytics",
        "importCount": 1,
        "imports": [
          "useUnifiedAnalytics"
        ]
      },
      {
        "source": "../hooks/useUnifiedBetting",
        "importCount": 1,
        "imports": [
          "useUnifiedBetting"
        ]
      },
      {
        "source": "../hooks/usePerformance",
        "importCount": 1,
        "imports": [
          "usePerformance"
        ]
      },
      {
        "source": "../hooks/useSpecialistData",
        "importCount": 1,
        "imports": [
          "useSpecialistData"
        ]
      },
      {
        "source": "../hooks/useQuantumPredictions",
        "importCount": 1,
        "imports": [
          "useQuantumPredictions"
        ]
      },
      {
        "source": "../hooks/useUltraMLAnalytics",
        "importCount": 1,
        "imports": [
          "useUltraMLAnalytics"
        ]
      },
      {
        "source": "../services/unified/ApiService",
        "importCount": 1,
        "imports": [
          "ApiService"
        ]
      },
      {
        "source": "../services/unified/UnifiedAnalyticsService",
        "importCount": 1,
        "imports": [
          "UnifiedAnalyticsService"
        ]
      },
      {
        "source": "../services/unified/UnifiedBettingService",
        "importCount": 1,
        "imports": [
          "UnifiedBettingService"
        ]
      },
      {
        "source": "../services/unified/UnifiedDataService",
        "importCount": 1,
        "imports": [
          "UnifiedDataService"
        ]
      },
      {
        "source": "../services/unified/UnifiedPredictionService",
        "importCount": 1,
        "imports": [
          "UnifiedPredictionService"
        ]
      },
      {
        "source": "../constants/sports",
        "importCount": 2,
        "imports": [
          "SPORTS_CONFIG",
          "getActiveSports"
        ]
      },
      {
        "source": "../theme",
        "importCount": 2,
        "imports": [
          "applyCSSVariables",
          "getThemeById"
        ]
      },
      {
        "source": "./UnifiedConfig",
        "importCount": 1,
        "imports": [
          "UnifiedConfig"
        ]
      },
      {
        "source": "@/unified/PerformanceMonitor",
        "importCount": 1,
        "imports": [
          "PerformanceMonitor"
        ]
      },
      {
        "source": "./UnifiedError.ts",
        "importCount": 1,
        "imports": [
          "ErrorContext"
        ]
      },
      {
        "source": "./UnifiedError",
        "importCount": 3,
        "imports": [
          "ErrorCategory",
          "ErrorSeverity",
          "ErrorContext"
        ]
      },
      {
        "source": "@/WebSocketManager.ts",
        "importCount": 1,
        "imports": [
          "WebSocketManager"
        ]
      },
      {
        "source": "@/FinalPredictionEngine/types.ts",
        "importCount": 1,
        "imports": [
          "FinalPredictionEngine"
        ]
      },
      {
        "source": "@/logging/types.ts",
        "importCount": 1,
        "imports": [
          "UnifiedLogger"
        ]
      },
      {
        "source": "../../../app/providers/ConcurrentFeaturesProvider",
        "importCount": 4,
        "imports": [
          "useConcurrentFilter",
          "useNonBlockingUpdate",
          "withSuspense",
          "ConcurrentList"
        ]
      },
      {
        "source": "../../../app/providers/ModernStateProvider",
        "importCount": 1,
        "imports": [
          "useBetSlip"
        ]
      },
      {
        "source": "../usePlayerDashboardState",
        "importCount": 1,
        "imports": [
          "usePlayerDashboardState"
        ]
      },
      {
        "source": "../services/unifiedApiService",
        "importCount": 1,
        "imports": [
          "createUnifiedApiService"
        ]
      },
      {
        "source": "../services/AdminService",
        "importCount": 5,
        "imports": [
          "// @ts-expect-error TS(2305): Module '\"../services/adminService\"' has no exporte... Remove this comment to see the full error message\n  adminService",
          "// @ts-expect-error TS(2305): Module '\"../services/adminService\"' has no exporte... Remove this comment to see the full error message\n  AdminStats",
          "// @ts-expect-error TS(2305): Module '\"../services/adminService\"' has no exporte... Remove this comment to see the full error message\n  AdminActivity",
          "// @ts-expect-error TS(2305): Module '\"../services/adminService\"' has no exporte... Remove this comment to see the full error message\n  SystemStatus",
          "// @ts-expect-error TS(2305): Module '\"../services/adminService\"' has no exporte... Remove this comment to see the full error message\n  UserManagementData"
        ]
      },
      {
        "source": "../services/analytics/AnalyticsService",
        "importCount": 1,
        "imports": [
          "analyticsApiService"
        ]
      },
      {
        "source": "../types/analytics",
        "importCount": 9,
        "imports": [
          "ApiError",
          "CrossSportInsight",
          "DashboardFilters",
          "DashboardState",
          "ModelDetailedPerformance",
          "PerformanceAlert",
          "UseAnalyticsDashboardReturn",
          "UseModelPerformanceReturn",
          "UsePerformanceAlertsReturn"
        ]
      },
      {
        "source": "../services/ApiService",
        "importCount": 2,
        "imports": [
          "ApiError",
          "apiService"
        ]
      },
      {
        "source": "../services/unified/WebSocketManager",
        "importCount": 1,
        "imports": [
          "webSocketManager"
        ]
      },
      {
        "source": "../stores/useStore",
        "importCount": 1,
        "imports": [
          "useStore"
        ]
      },
      {
        "source": "@/stores/bettingStore",
        "importCount": 1,
        "imports": [
          "useBettingStore"
        ]
      },
      {
        "source": "react-toastify",
        "importCount": 1,
        "imports": [
          "toast"
        ]
      },
      {
        "source": "@/services/MLSimulationService",
        "importCount": 1,
        "imports": [
          "MLSimulationService"
        ]
      },
      {
        "source": "@/types/betting",
        "importCount": 11,
        "imports": [
          "Team",
          "Player",
          "Game",
          "Prediction",
          "PlayerStats",
          "PlayerForm",
          "//   InjuryStatus\n// @ts-expect-error TS(2307): Cannot find module '@/types/betting' or its corres... Remove this comment to see the full error message",
          "RiskProfileType",
          "BettingMetrics",
          "BettingHistoryEntry",
          "BettingOpportunity"
        ]
      },
      {
        "source": "../utils/logger",
        "importCount": 1,
        "imports": [
          "logger"
        ]
      },
      {
        "source": "../services/PermissionService",
        "importCount": 4,
        "imports": [
          "_permissionService",
          "Permission",
          "Role",
          "UserPermissions"
        ]
      },
      {
        "source": "../services/unified/UnifiedLogger",
        "importCount": 1,
        "imports": [
          "UnifiedLogger"
        ]
      },
      {
        "source": "../services/predictionCache",
        "importCount": 5,
        "imports": [
          "CachedPrediction",
          "CacheMetrics",
          "predictionCache",
          "PredictionComparison",
          "StorageUtils"
        ]
      },
      {
        "source": "../services/unified/PrizePicksApiService",
        "importCount": 1,
        "imports": [
          "PrizePicksApiService"
        ]
      },
      {
        "source": "../services/data/UnifiedDataPipeline",
        "importCount": 1,
        "imports": [
          "unifiedDataPipeline"
        ]
      },
      {
        "source": "../types/unified",
        "importCount": 2,
        "imports": [
          "GameData",
          "OddsData"
        ]
      },
      {
        "source": "@/core/UnifiedStrategyEngine",
        "importCount": 2,
        "imports": [
          "StrategyRecommendation",
          "UnifiedStrategyEngine"
        ]
      },
      {
        "source": "../components/ui/NotificationToast",
        "importCount": 2,
        "imports": [
          "Toast",
          "ToastContainer"
        ]
      },
      {
        "source": "../services/trendingSuggestionsService",
        "importCount": 2,
        "imports": [
          "trendingSuggestionsService",
          "TrendingSuggestion"
        ]
      },
      {
        "source": "react-dom/client",
        "importCount": 1,
        "imports": [
          "createRoot"
        ]
      },
      {
        "source": "./services/MasterServiceRegistry",
        "importCount": 1,
        "imports": [
          "_masterServiceRegistry"
        ]
      },
      {
        "source": "clsx",
        "importCount": 2,
        "imports": [
          "type ClassValue",
          "clsx"
        ]
      },
      {
        "source": "tailwind-merge",
        "importCount": 1,
        "imports": [
          "twMerge"
        ]
      },
      {
        "source": "./utils/logger",
        "importCount": 1,
        "imports": [
          "logger"
        ]
      },
      {
        "source": "./OnboardingContext",
        "importCount": 1,
        "imports": [
          "useOnboarding"
        ]
      },
      {
        "source": "../components/common/theme/ThemeProvider",
        "importCount": 1,
        "imports": [
          "_useTheme as useTheme"
        ]
      },
      {
        "source": "./AuthProvider",
        "importCount": 1,
        "imports": [
          "AuthContext"
        ]
      },
      {
        "source": "@/services/automation/BettingAutomationService",
        "importCount": 1,
        "imports": [
          "BettingAutomationService"
        ]
      },
      {
        "source": "@/config/automation.config",
        "importCount": 1,
        "imports": [
          "defaultConfig"
        ]
      },
      {
        "source": "@/services/notification",
        "importCount": 1,
        "imports": [
          "notificationService"
        ]
      },
      {
        "source": "../constants",
        "importCount": 1,
        "imports": [
          "VITE_API_URL"
        ]
      },
      {
        "source": "./PropAnalysisAggregator",
        "importCount": 2,
        "imports": [
          "PropAnalysisRequest",
          "PropAnalysisResponse"
        ]
      },
      {
        "source": "axios",
        "importCount": 3,
        "imports": [
          "AxiosError",
          "AxiosInstance",
          "AxiosResponse"
        ]
      },
      {
        "source": "./withRequestCorrelation",
        "importCount": 1,
        "imports": [
          "withRequestCorrelation"
        ]
      },
      {
        "source": "events",
        "importCount": 1,
        "imports": [
          "EventEmitter"
        ]
      },
      {
        "source": "../types/DataValidation",
        "importCount": 14,
        "imports": [
          "CacheInvalidationEvent",
          "EnhancedRequestMetrics",
          "RawSportsData",
          "ValidatedSportsProp",
          "DataNormalizationConfig",
          "DataQualityMetrics",
          "MAX_CONFIDENCE_SCORE",
          "MIN_CONFIDENCE_SCORE",
          "PICK_TYPE_VALUES",
          "REQUIRED_PROP_FIELDS",
          "SPORT_VALUES",
          "StructuredLogEntry",
          "ValidationError",
          "ValidationResult"
        ]
      },
      {
        "source": "./EnhancedDataValidator",
        "importCount": 1,
        "imports": [
          "dataValidator"
        ]
      },
      {
        "source": "./EnhancedLogger",
        "importCount": 1,
        "imports": [
          "enhancedLogger"
        ]
      },
      {
        "source": "../stores/errorStore",
        "importCount": 1,
        "imports": [
          "useErrorStore"
        ]
      },
      {
        "source": "./RequestContextService",
        "importCount": 1,
        "imports": [
          "getRequestContext"
        ]
      },
      {
        "source": "events.ts",
        "importCount": 1,
        "imports": [
          "EventEmitter"
        ]
      },
      {
        "source": "./unified/UnifiedAnalyticsService",
        "importCount": 1,
        "imports": [
          "UnifiedAnalyticsService"
        ]
      },
      {
        "source": "./unified/UnifiedBettingService",
        "importCount": 1,
        "imports": [
          "UnifiedBettingService"
        ]
      },
      {
        "source": "./unified/UnifiedCache",
        "importCount": 1,
        "imports": [
          "UnifiedCache"
        ]
      },
      {
        "source": "./unified/UnifiedDataService",
        "importCount": 1,
        "imports": [
          "UnifiedDataService"
        ]
      },
      {
        "source": "./unified/UnifiedErrorService",
        "importCount": 1,
        "imports": [
          "UnifiedErrorService"
        ]
      },
      {
        "source": "./unified/UnifiedLogger",
        "importCount": 1,
        "imports": [
          "UnifiedLogger"
        ]
      },
      {
        "source": "./unified/UnifiedNotificationService",
        "importCount": 1,
        "imports": [
          "UnifiedNotificationService"
        ]
      },
      {
        "source": "./unified/UnifiedPredictionService",
        "importCount": 1,
        "imports": [
          "UnifiedPredictionService"
        ]
      },
      {
        "source": "./unified/UnifiedStateService",
        "importCount": 1,
        "imports": [
          "UnifiedStateService"
        ]
      },
      {
        "source": "./unified/UnifiedWebSocketService",
        "importCount": 1,
        "imports": [
          "UnifiedWebSocketService"
        ]
      },
      {
        "source": "./data/PlayerDataService",
        "importCount": 1,
        "imports": [
          "PlayerDataService"
        ]
      },
      {
        "source": "./injuryService",
        "importCount": 1,
        "imports": [
          "_injuryService"
        ]
      },
      {
        "source": "./lineupService",
        "importCount": 1,
        "imports": [
          "_lineupService"
        ]
      },
      {
        "source": "../../../prototype/src/services/enhancedDataSources",
        "importCount": 1,
        "imports": [
          "enhancedDataSources"
        ]
      },
      {
        "source": "../../../prototype/src/services/realDataService",
        "importCount": 1,
        "imports": [
          "realDataService"
        ]
      },
      {
        "source": "../../../prototype/src/services/predictionEngine",
        "importCount": 1,
        "imports": [
          "predictionEngine"
        ]
      },
      {
        "source": "../../../prototype/src/services/realTimeDataAggregator",
        "importCount": 1,
        "imports": [
          "realTimeDataAggregator"
        ]
      },
      {
        "source": "./AnalyticsService",
        "importCount": 1,
        "imports": [
          "AnalyticsService"
        ]
      },
      {
        "source": "./BettingService",
        "importCount": 1,
        "imports": [
          "BettingService"
        ]
      },
      {
        "source": "./CacheService",
        "importCount": 1,
        "imports": [
          "CacheService"
        ]
      },
      {
        "source": "./predictionService",
        "importCount": 1,
        "imports": [
          "PredictionService"
        ]
      },
      {
        "source": "./notificationService",
        "importCount": 1,
        "imports": [
          "NotificationService"
        ]
      },
      {
        "source": "./PerformanceTrackingService",
        "importCount": 1,
        "imports": [
          "PerformanceTrackingService"
        ]
      },
      {
        "source": "./unified/SecurityService",
        "importCount": 1,
        "imports": [
          "SecurityService"
        ]
      },
      {
        "source": "./SecurityService",
        "importCount": 1,
        "imports": [
          "SecurityService"
        ]
      },
      {
        "source": "./EnhancedPropAnalysisService",
        "importCount": 1,
        "imports": [
          "EnhancedPropAnalysis"
        ]
      },
      {
        "source": "./ApiService",
        "importCount": 2,
        "imports": [
          "BaseApiService",
          "ApiConfig"
        ]
      },
      {
        "source": "../types/errors",
        "importCount": 2,
        "imports": [
          "PropOllamaError",
          "PropOllamaErrorType"
        ]
      },
      {
        "source": "./AnalysisCacheService",
        "importCount": 1,
        "imports": [
          "AnalysisCacheService"
        ]
      },
      {
        "source": "./HttpClient",
        "importCount": 1,
        "imports": [
          "httpFetch"
        ]
      },
      {
        "source": "./PermissionService",
        "importCount": 1,
        "imports": [
          "Role"
        ]
      },
      {
        "source": "./EmailNotificationService",
        "importCount": 1,
        "imports": [
          "emailNotificationService"
        ]
      },
      {
        "source": "../AnalysisCacheService",
        "importCount": 1,
        "imports": [
          "AnalysisCacheService"
        ]
      },
      {
        "source": "../PropAnalysisAggregator",
        "importCount": 3,
        "imports": [
          "PropAnalysisRequest",
          "PropAnalysisResponse",
          "PropAnalysisAggregator"
        ]
      },
      {
        "source": "../MasterServiceRegistry",
        "importCount": 2,
        "imports": [
          "MasterServiceRegistry",
          "_masterServiceRegistry"
        ]
      },
      {
        "source": "../../core/UnifiedConfig",
        "importCount": 1,
        "imports": [
          "UnifiedConfig"
        ]
      },
      {
        "source": "../SocialSentimentService",
        "importCount": 1,
        "imports": [
          "SocialSentimentService"
        ]
      },
      {
        "source": "../api/client",
        "importCount": 1,
        "imports": [
          "_apiClient"
        ]
      },
      {
        "source": "../../services/integrations/liveDataLogger",
        "importCount": 2,
        "imports": [
          "logError",
          "logInfo"
        ]
      },
      {
        "source": "../integrations/liveDataLogger",
        "importCount": 2,
        "imports": [
          "logError",
          "logInfo"
        ]
      },
      {
        "source": "@/ml/models/BaseModel.ts",
        "importCount": 1,
        "imports": [
          "BaseModel"
        ]
      },
      {
        "source": "../../../models/ml/BaseModel",
        "importCount": 1,
        "imports": [
          "BaseModel"
        ]
      },
      {
        "source": "../userPersonalizationService",
        "importCount": 1,
        "imports": [
          "UserPersonalizationService"
        ]
      },
      {
        "source": "./mlService",
        "importCount": 1,
        "imports": [
          "mlService"
        ]
      },
      {
        "source": "@/models/User.ts",
        "importCount": 1,
        "imports": [
          "User"
        ]
      },
      {
        "source": "@/models/Bet.ts",
        "importCount": 1,
        "imports": [
          "Bet"
        ]
      },
      {
        "source": "@/models/Prediction.ts",
        "importCount": 1,
        "imports": [
          "Prediction"
        ]
      },
      {
        "source": "../../models/Bet",
        "importCount": 1,
        "imports": [
          "Bet"
        ]
      },
      {
        "source": "../../models/Prediction",
        "importCount": 1,
        "imports": [
          "Prediction"
        ]
      },
      {
        "source": "../../models/User",
        "importCount": 1,
        "imports": [
          "User"
        ]
      },
      {
        "source": "@/core/UnifiedError.js",
        "importCount": 2,
        "imports": [
          "APIError",
          "AppError"
        ]
      },
      {
        "source": "@/core/UnifiedMonitor.js",
        "importCount": 1,
        "imports": [
          "unifiedMonitor"
        ]
      },
      {
        "source": "./client.js",
        "importCount": 2,
        "imports": [
          "get",
          "post"
        ]
      },
      {
        "source": "../ml/MLService",
        "importCount": 1,
        "imports": [
          "EnsemblePrediction"
        ]
      },
      {
        "source": "../utils/backendHealth",
        "importCount": 1,
        "imports": [
          "backendHealthChecker"
        ]
      },
      {
        "source": "../utils/FeatureFlags",
        "importCount": 1,
        "imports": [
          "FeatureFlags"
        ]
      },
      {
        "source": "@/unified/UnifiedServiceRegistry.ts",
        "importCount": 1,
        "imports": [
          "UnifiedServiceRegistry"
        ]
      },
      {
        "source": "fs",
        "importCount": 1,
        "imports": [
          "promises as fs"
        ]
      },
      {
        "source": "@/unified/UnifiedServiceRegistry",
        "importCount": 1,
        "imports": [
          "UnifiedServiceRegistry"
        ]
      },
      {
        "source": "../unified/ApiService",
        "importCount": 1,
        "imports": [
          "ApiService as ApiServiceClass"
        ]
      },
      {
        "source": "../unified/UnifiedCache",
        "importCount": 1,
        "imports": [
          "UnifiedCache"
        ]
      },
      {
        "source": "../unified/UnifiedErrorService",
        "importCount": 1,
        "imports": [
          "UnifiedErrorService"
        ]
      },
      {
        "source": "../unified/UnifiedLogger",
        "importCount": 1,
        "imports": [
          "UnifiedLogger"
        ]
      },
      {
        "source": "./realTimeUpdateService.js",
        "importCount": 1,
        "imports": [
          "RealTimeUpdateService"
        ]
      },
      {
        "source": "axios.ts",
        "importCount": 2,
        "imports": [
          "AxiosInstance",
          "AxiosRequestConfig"
        ]
      },
      {
        "source": "./apiBase.ts",
        "importCount": 1,
        "imports": [
          "ApiBase"
        ]
      },
      {
        "source": "../schemas/contest",
        "importCount": 2,
        "imports": [
          "Contest",
          "ContestsResponseSchema"
        ]
      },
      {
        "source": "@/types/ModelMetrics.ts",
        "importCount": 1,
        "imports": [
          "ModelMetrics"
        ]
      },
      {
        "source": "@/models/ModelMetadata.ts",
        "importCount": 1,
        "imports": [
          "ModelMetadata"
        ]
      },
      {
        "source": "@/models/BaseModel.ts",
        "importCount": 2,
        "imports": [
          "ModelConfig",
          "BaseModel"
        ]
      },
      {
        "source": "@/models/AdvancedEnsembleModel.ts",
        "importCount": 1,
        "imports": [
          "AdvancedEnsembleConfig"
        ]
      },
      {
        "source": "@/registry/ModelRegistry.ts",
        "importCount": 1,
        "imports": [
          "ModelType"
        ]
      },
      {
        "source": "./BaseModel.ts",
        "importCount": 4,
        "imports": [
          "BaseModel",
          "ModelConfig",
          "ModelPrediction",
          "ModelMetrics"
        ]
      },
      {
        "source": "@/core/UnifiedLogger.ts",
        "importCount": 1,
        "imports": [
          "UnifiedLogger"
        ]
      },
      {
        "source": "@/core/UnifiedErrorHandler.ts",
        "importCount": 1,
        "imports": [
          "UnifiedErrorHandler"
        ]
      },
      {
        "source": "./BaseModel.js",
        "importCount": 3,
        "imports": [
          "BaseModel",
          "ModelConfig",
          "ModelPrediction"
        ]
      },
      {
        "source": "./ModelMetadata.ts",
        "importCount": 1,
        "imports": [
          "ModelMetadata"
        ]
      },
      {
        "source": "./OptimizationStrategy.ts",
        "importCount": 3,
        "imports": [
          "OptimizationStrategy",
          "OptimizationConfig",
          "//   OptimizationResult"
        ]
      },
      {
        "source": "./OptimizationStrategy",
        "importCount": 3,
        "imports": [
          "// @ts-expect-error TS(2305): Module '\"./OptimizationStrategy\"' has no exported ... Remove this comment to see the full error message\n  OptimizationStrategy",
          "// @ts-expect-error TS(2305): Module '\"./OptimizationStrategy\"' has no exported ... Remove this comment to see the full error message\n  OptimizationConfig",
          "//   OptimizationResult"
        ]
      },
      {
        "source": "@/api/client",
        "importCount": 1,
        "imports": [
          "apiClient"
        ]
      },
      {
        "source": "@/manager/ModelManager",
        "importCount": 1,
        "imports": [
          "ModelManager"
        ]
      },
      {
        "source": "@/models/BaseModel",
        "importCount": 1,
        "imports": [
          "ModelConfig"
        ]
      },
      {
        "source": "@/models/AdvancedEnsembleModel",
        "importCount": 1,
        "imports": [
          "AdvancedEnsembleConfig"
        ]
      },
      {
        "source": "@/registry/ModelRegistry",
        "importCount": 1,
        "imports": [
          "ModelType"
        ]
      },
      {
        "source": "./analytics/mlService",
        "importCount": 1,
        "imports": [
          "mlService"
        ]
      },
      {
        "source": "../../schemas/affiliate",
        "importCount": 2,
        "imports": [
          "AffiliateLinkSchema",
          "AffiliateOfferSchema"
        ]
      },
      {
        "source": "../AffiliateService",
        "importCount": 1,
        "imports": [
          "_affiliateService as affiliateService"
        ]
      },
      {
        "source": "@/core/logging/types.js",
        "importCount": 1,
        "imports": [
          "UnifiedLogger"
        ]
      },
      {
        "source": "@/core/metrics/types.js",
        "importCount": 1,
        "imports": [
          "UnifiedMetrics"
        ]
      },
      {
        "source": "@/core/config/types.js",
        "importCount": 1,
        "imports": [
          "UnifiedConfigManager"
        ]
      },
      {
        "source": "./backendDiscovery",
        "importCount": 1,
        "imports": [
          "discoverBackend"
        ]
      },
      {
        "source": "../../RefereeService",
        "importCount": 2,
        "imports": [
          "_refereeService as refereeService",
          "RefereeStats"
        ]
      },
      {
        "source": "@/types/core.ts",
        "importCount": 8,
        "imports": [
          "RiskProfile",
          "BetRecord",
          "ClvAnalysis",
          "ErrorMetrics",
          "RiskTolerance",
          "StrategyRecommendation",
          "PlayerProp",
          "Entry"
        ]
      },
      {
        "source": "../utils/getBackendUrl",
        "importCount": 1,
        "imports": [
          "getBackendUrl"
        ]
      },
      {
        "source": "../backendDiscovery",
        "importCount": 1,
        "imports": [
          "discoverBackend"
        ]
      },
      {
        "source": "./UnifiedServiceRegistry",
        "importCount": 1,
        "imports": [
          "UnifiedServiceRegistry"
        ]
      },
      {
        "source": "@/unified/UnifiedConfig",
        "importCount": 1,
        "imports": [
          "UnifiedConfig"
        ]
      },
      {
        "source": "@/unified/UnifiedLogger",
        "importCount": 1,
        "imports": [
          "UnifiedLogger"
        ]
      },
      {
        "source": "@/unified/UnifiedCache",
        "importCount": 1,
        "imports": [
          "UnifiedCache"
        ]
      },
      {
        "source": "./UnifiedCache",
        "importCount": 1,
        "imports": [
          "UnifiedCache"
        ]
      },
      {
        "source": "./UnifiedLogger",
        "importCount": 1,
        "imports": [
          "UnifiedLogger"
        ]
      },
      {
        "source": "./UnifiedErrorService",
        "importCount": 1,
        "imports": [
          "UnifiedErrorService"
        ]
      },
      {
        "source": "./FeaturedPropsService",
        "importCount": 1,
        "imports": [
          "FeaturedProp"
        ]
      },
      {
        "source": "../DebugEnhancedDataManager",
        "importCount": 1,
        "imports": [
          "debugEnhancedDataManager"
        ]
      },
      {
        "source": "../EnhancedDataManager",
        "importCount": 1,
        "imports": [
          "enhancedDataManager"
        ]
      },
      {
        "source": "./UnifiedPredictionService",
        "importCount": 2,
        "imports": [
          "PredictionResult",
          "UnifiedPredictionService"
        ]
      },
      {
        "source": "./ApiService.js",
        "importCount": 2,
        "imports": [
          "BaseApiService",
          "ApiResponse"
        ]
      },
      {
        "source": "@/types/analytics.ts",
        "importCount": 4,
        "imports": [
          "ExplainabilityMap",
          "PerformanceMetrics",
          "RiskProfile",
          "TrendDelta"
        ]
      },
      {
        "source": "./BaseService.ts",
        "importCount": 1,
        "imports": [
          "BaseService"
        ]
      },
      {
        "source": "./UnifiedServiceRegistry.ts",
        "importCount": 1,
        "imports": [
          "UnifiedServiceRegistry"
        ]
      },
      {
        "source": "../../types/core",
        "importCount": 3,
        "imports": [
          "PerformanceMetrics",
          "RiskProfile",
          "ComponentMetrics"
        ]
      },
      {
        "source": "./BaseService",
        "importCount": 1,
        "imports": [
          "BaseService"
        ]
      },
      {
        "source": "./UnifiedStateService",
        "importCount": 1,
        "imports": [
          "UnifiedStateService"
        ]
      },
      {
        "source": "./UnifiedBettingService",
        "importCount": 1,
        "imports": [
          "UnifiedBettingService"
        ]
      },
      {
        "source": "./UnifiedSettingsService",
        "importCount": 1,
        "imports": [
          "UnifiedSettingsService"
        ]
      },
      {
        "source": "child_process",
        "importCount": 1,
        "imports": [
          "exec"
        ]
      },
      {
        "source": "util",
        "importCount": 1,
        "imports": [
          "promisify"
        ]
      },
      {
        "source": "@/types",
        "importCount": 4,
        "imports": [
          "BettingContext",
          "BettingDecision",
          "PerformanceMetrics",
          "PredictionResult"
        ]
      },
      {
        "source": "@/types/core",
        "importCount": 7,
        "imports": [
          "BetRecord",
          "ClvAnalysis",
          "Opportunity",
          "BettingContext",
          "PredictionResult",
          "BettingOpportunity",
          "MarketUpdate"
        ]
      },
      {
        "source": "./UnifiedWebSocketService",
        "importCount": 1,
        "imports": [
          "UnifiedWebSocketService"
        ]
      },
      {
        "source": "./UnifiedDataService",
        "importCount": 1,
        "imports": [
          "UnifiedDataService"
        ]
      },
      {
        "source": "./UnifiedBackupService",
        "importCount": 1,
        "imports": [
          "UnifiedBackupService"
        ]
      },
      {
        "source": "../../unified/ErrorHandler",
        "importCount": 1,
        "imports": [
          "ErrorHandler"
        ]
      },
      {
        "source": "../../MasterServiceRegistry",
        "importCount": 1,
        "imports": [
          "_masterServiceRegistry"
        ]
      },
      {
        "source": "../UnifiedAnalyticsService",
        "importCount": 1,
        "imports": [
          "UnifiedAnalyticsService"
        ]
      },
      {
        "source": "../UnifiedErrorService",
        "importCount": 1,
        "imports": [
          "UnifiedErrorService"
        ]
      },
      {
        "source": "@/types/api.js",
        "importCount": 2,
        "imports": [
          "User",
          "UserPreferences"
        ]
      },
      {
        "source": "@/unified/EventBus.js",
        "importCount": 1,
        "imports": [
          "EventBus"
        ]
      },
      {
        "source": "web-vitals",
        "importCount": 6,
        "imports": [
          "onCLS",
          "onFCP",
          "onINP",
          "onLCP",
          "onTTFB",
          "type Metric"
        ]
      },
      {
        "source": "../../models/domainModels",
        "importCount": 4,
        "imports": [
          "BestBet",
          "GamePrediction",
          "PropProjection",
          "SelectedProp"
        ]
      },
      {
        "source": "@storybook/react.ts",
        "importCount": 2,
        "imports": [
          "Meta",
          "StoryObj"
        ]
      },
      {
        "source": "@/components/ui/PredictionSummaryCard.ts",
        "importCount": 1,
        "imports": [
          "PredictionSummaryCard"
        ]
      },
      {
        "source": "../services/data/PlayerDataService",
        "importCount": 1,
        "imports": [
          "PlayerDataService"
        ]
      },
      {
        "source": "@mantine/core",
        "importCount": 3,
        "imports": [
          "MantineProvider",
          "createTheme",
          "mergeThemeOverrides"
        ]
      },
      {
        "source": "vitest",
        "importCount": 5,
        "imports": [
          "describe",
          "expect",
          "it",
          "test",
          "vi"
        ]
      },
      {
        "source": "../services/ErrorInterceptor",
        "importCount": 1,
        "imports": [
          "handleHttpError"
        ]
      },
      {
        "source": "../services/HttpClient",
        "importCount": 1,
        "imports": [
          "httpFetch"
        ]
      },
      {
        "source": "./index",
        "importCount": 7,
        "imports": [
          "Theme",
          "_DEFAULT_THEME",
          "_applyCSSVariables",
          "_getRecommendedTheme",
          "_getThemeById",
          "_loadTheme",
          "_saveTheme"
        ]
      },
      {
        "source": "@mui/material/styles.ts",
        "importCount": 1,
        "imports": [
          "Theme"
        ]
      },
      {
        "source": "../errors",
        "importCount": 2,
        "imports": [
          "PropOllamaError",
          "PropOllamaErrorType"
        ]
      },
      {
        "source": "./common",
        "importCount": 6,
        "imports": [
          "AlertSeverity",
          "AlertType",
          "EntryStatus",
          "LineupType",
          "PropType",
          "Sport"
        ]
      },
      {
        "source": "../types/core",
        "importCount": 3,
        "imports": [
          "ErrorMetrics",
          "RiskTolerance",
          "StrategyRecommendation"
        ]
      },
      {
        "source": "./ErrorHandler.js",
        "importCount": 1,
        "imports": [
          "ErrorHandler"
        ]
      },
      {
        "source": "../services/EnhancedDataSourcesService",
        "importCount": 1,
        "imports": [
          "EnhancedDataSourcesService"
        ]
      },
      {
        "source": "../../core/UnifiedMonitor",
        "importCount": 1,
        "imports": [
          "UnifiedMonitor"
        ]
      },
      {
        "source": "../../unified/EventBus",
        "importCount": 1,
        "imports": [
          "EventBus"
        ]
      },
      {
        "source": "@/core/DataSource.ts",
        "importCount": 1,
        "imports": [
          "DataSource"
        ]
      },
      {
        "source": "@/adapters/SocialSentimentAdapter.ts",
        "importCount": 1,
        "imports": [
          "SocialSentimentData"
        ]
      },
      {
        "source": "./DataSource.ts",
        "importCount": 1,
        "imports": [
          "DataSource"
        ]
      },
      {
        "source": "./PredictionEngine.ts",
        "importCount": 1,
        "imports": [
          "DataSource"
        ]
      },
      {
        "source": "../../core/EventBus",
        "importCount": 1,
        "imports": [
          "EventBus"
        ]
      },
      {
        "source": "./PerformanceMonitor",
        "importCount": 1,
        "imports": [
          "PerformanceMonitor"
        ]
      },
      {
        "source": "./PredictionEngine",
        "importCount": 3,
        "imports": [
          "DataSource",
          "Recommendation",
          "PredictionEngine"
        ]
      },
      {
        "source": "@/core/DataSource",
        "importCount": 1,
        "imports": [
          "DataSource"
        ]
      },
      {
        "source": "@/core/EventBus",
        "importCount": 1,
        "imports": [
          "EventBus"
        ]
      },
      {
        "source": "@/core/PerformanceMonitor",
        "importCount": 1,
        "imports": [
          "PerformanceMonitor"
        ]
      },
      {
        "source": "../../core/UnifiedConfigManager",
        "importCount": 1,
        "imports": [
          "UnifiedConfigManager"
        ]
      },
      {
        "source": "./AnalysisFramework.ts",
        "importCount": 1,
        "imports": [
          "AnalysisPlugin"
        ]
      },
      {
        "source": "./DataPipeline.ts",
        "importCount": 1,
        "imports": [
          "PipelineStage"
        ]
      },
      {
        "source": "./FeatureComposition.ts",
        "importCount": 1,
        "imports": [
          "FeatureComponent"
        ]
      },
      {
        "source": "./StrategyComposition.ts",
        "importCount": 2,
        "imports": [
          "StrategyComponent",
          "StrategyResult"
        ]
      },
      {
        "source": "./AnalysisFramework",
        "importCount": 1,
        "imports": [
          "AnalysisPlugin"
        ]
      },
      {
        "source": "./DataPipeline",
        "importCount": 1,
        "imports": [
          "PipelineStage"
        ]
      },
      {
        "source": "./FeatureComposition",
        "importCount": 1,
        "imports": [
          "FeatureComponent"
        ]
      },
      {
        "source": "./StrategyComposition",
        "importCount": 2,
        "imports": [
          "StrategyComponent",
          "StrategyResult"
        ]
      },
      {
        "source": "electron",
        "importCount": 1,
        "imports": [
          "ipcRenderer"
        ]
      },
      {
        "source": "@/core/Analyzer.ts",
        "importCount": 1,
        "imports": [
          "Analyzer"
        ]
      },
      {
        "source": "@/adapters/DailyFantasyAdapter.ts",
        "importCount": 1,
        "imports": [
          "DailyFantasyData"
        ]
      },
      {
        "source": "@/analyzers/ProjectionAnalyzer.ts",
        "importCount": 1,
        "imports": [
          "ProjectionAnalysis"
        ]
      },
      {
        "source": "@/core/PredictionEngine.ts",
        "importCount": 4,
        "imports": [
          "Decision",
          "IntegratedData",
          "Recommendation",
          "Strategy"
        ]
      },
      {
        "source": "./ProjectionBettingStrategy",
        "importCount": 1,
        "imports": [
          "ProjectionBettingStrategy"
        ]
      },
      {
        "source": "@/adapters/SocialSentimentAdapter.js",
        "importCount": 1,
        "imports": [
          "SocialSentimentData"
        ]
      },
      {
        "source": "@/adapters/SportsRadarAdapter.js",
        "importCount": 1,
        "imports": [
          "SportsRadarData"
        ]
      },
      {
        "source": "@/adapters/TheOddsAdapter.js",
        "importCount": 1,
        "imports": [
          "TheOddsData"
        ]
      },
      {
        "source": "@/core/Analyzer.js",
        "importCount": 1,
        "imports": [
          "Analyzer"
        ]
      },
      {
        "source": "./ProjectionAnalyzer.js",
        "importCount": 1,
        "imports": [
          "ProjectionAnalysis"
        ]
      },
      {
        "source": "./DataSource",
        "importCount": 1,
        "imports": [
          "DataSource"
        ]
      },
      {
        "source": "@/core/DataSource.js",
        "importCount": 1,
        "imports": [
          "DataSource"
        ]
      },
      {
        "source": "@/types/core.js",
        "importCount": 2,
        "imports": [
          "BetRecord",
          "ClvAnalysis"
        ]
      },
      {
        "source": "@/types/index.js",
        "importCount": 3,
        "imports": [
          "BettingContext",
          "BettingDecision",
          "PerformanceMetrics"
        ]
      },
      {
        "source": "./UnifiedBettingCore",
        "importCount": 1,
        "imports": [
          "UnifiedBettingCore"
        ]
      },
      {
        "source": "@/core/UnifiedPredictionEngine",
        "importCount": 2,
        "imports": [
          "PredictionContext",
          "UnifiedPredictionEngine"
        ]
      },
      {
        "source": "../encryption",
        "importCount": 2,
        "imports": [
          "decryptData",
          "encryptData"
        ]
      },
      {
        "source": "../location",
        "importCount": 4,
        "imports": [
          "getLocation",
          "getQueryParams",
          "navigateTo",
          "reloadPage"
        ]
      },
      {
        "source": "../safeNumber",
        "importCount": 7,
        "imports": [
          "safeNumber",
          "safePercentage",
          "safeCurrency",
          "safeCompactNumber",
          "safeDivision",
          "safePercentageChange",
          "SafeNumberInput"
        ]
      },
      {
        "source": "../userSettings",
        "importCount": 9,
        "imports": [
          "applySettings",
          "DEFAULT_SETTINGS",
          "getUserDisplayName",
          "getUserEmail",
          "getUserSettings",
          "initializeSettings",
          "isDarkMode",
          "saveUserSettings",
          "UserSettings"
        ]
      },
      {
        "source": "./logger",
        "importCount": 1,
        "imports": [
          "logger"
        ]
      },
      {
        "source": "@/components/ui/ChartOverride",
        "importCount": 6,
        "imports": [
          "Line",
          "Bar",
          "Doughnut",
          "Radar",
          "Scatter",
          "Chart"
        ]
      },
      {
        "source": "crypto-js",
        "importCount": 2,
        "imports": [
          "AES",
          "enc"
        ]
      },
      {
        "source": "./connectionResilience",
        "importCount": 2,
        "imports": [
          "connectionResilience",
          "type RetryConfig"
        ]
      },
      {
        "source": "@/unified/UnifiedError.ts",
        "importCount": 1,
        "imports": [
          "BettingSystemError"
        ]
      },
      {
        "source": "@/zod",
        "importCount": 1,
        "imports": [
          "z"
        ]
      }
    ]
  },
  "dependencyAnalysis": [
    {
      "package": "react",
      "namedImportsCount": 22,
      "namedImports": [
        "useEffect",
        "useState",
        "Suspense",
        "useDeferredValue",
        "useMemo",
        "useTransition",
        "createContext",
        "useContext",
        "useRef",
        "Component",
        "ErrorInfo",
        "ReactNode",
        "useCallback",
        "useActionState",
        "useOptimistic",
        "useReducer",
        "memo",
        "ErrorBoundary",
        "forwardRef",
        "RefObject",
        "ComponentType",
        "lazy"
      ],
      "namespaceImports": 2,
      "defaultImports": 129,
      "filesUsed": 344,
      "files": [
        "/app/code/frontend/src/App.tsx",
        "/app/code/frontend/src/__mocks__/framer-motion.ts",
        "/app/code/frontend/src/__tests__/App.e2e.test.tsx",
        "/app/code/frontend/src/__tests__/BettingInterface.e2e.test.tsx",
        "/app/code/frontend/src/__tests__/MinimalUseState.e2e.test.tsx",
        "/app/code/frontend/src/__tests__/components/PropOllamaUnified.e2e.test.tsx",
        "/app/code/frontend/src/app/providers/ConcurrentFeaturesProvider.tsx",
        "/app/code/frontend/src/auth/AuthContext.tsx",
        "/app/code/frontend/src/auth/authUtils.ts",
        "/app/code/frontend/src/components/Accordion.tsx",
        "/app/code/frontend/src/components/Alert.tsx",
        "/app/code/frontend/src/components/AnalyticsPage.tsx",
        "/app/code/frontend/src/components/ApiHealthIndicator.tsx",
        "/app/code/frontend/src/components/ArbitrageOpportunities.tsx",
        "/app/code/frontend/src/components/AutoPilot.tsx",
        "/app/code/frontend/src/components/BacktestingTab.tsx",
        "/app/code/frontend/src/components/Badge.tsx",
        "/app/code/frontend/src/components/BankrollManager.tsx",
        "/app/code/frontend/src/components/BestBetsDisplay.tsx",
        "/app/code/frontend/src/components/BetSlip.tsx",
        "/app/code/frontend/src/components/BettingHistory.tsx",
        "/app/code/frontend/src/components/BettingOpportunities.tsx",
        "/app/code/frontend/src/components/BettingStats.tsx",
        "/app/code/frontend/src/components/Breadcrumb.tsx",
        "/app/code/frontend/src/components/BuilderIntegration.tsx",
        "/app/code/frontend/src/components/Button.tsx",
        "/app/code/frontend/src/components/Card.d.ts",
        "/app/code/frontend/src/components/Card.tsx",
        "/app/code/frontend/src/components/ComprehensivePropsLoader.tsx",
        "/app/code/frontend/src/components/CondensedPropCard.tsx",
        "/app/code/frontend/src/components/ConfidenceIndicator.tsx",
        "/app/code/frontend/src/components/DarkModeToggle.tsx",
        "/app/code/frontend/src/components/EnhancedDashboard.tsx",
        "/app/code/frontend/src/components/EnhancedErrorBoundary.tsx",
        "/app/code/frontend/src/components/EnhancedPropCard.tsx",
        "/app/code/frontend/src/components/ErrorBoundaryVersion.tsx",
        "/app/code/frontend/src/components/FooterVersion.tsx",
        "/app/code/frontend/src/components/GlobalErrorBoundary.tsx",
        "/app/code/frontend/src/components/InjuriesTab.tsx",
        "/app/code/frontend/src/components/InjuryTracker.tsx",
        "/app/code/frontend/src/components/LineupBuilder.tsx",
        "/app/code/frontend/src/components/LiveGameStats.tsx",
        "/app/code/frontend/src/components/LoadingOverlay.tsx",
        "/app/code/frontend/src/components/LoadingSpinner.tsx",
        "/app/code/frontend/src/components/LockedBets.tsx",
        "/app/code/frontend/src/components/Login.tsx",
        "/app/code/frontend/src/components/MLAnalytics.tsx",
        "/app/code/frontend/src/components/Modal.tsx",
        "/app/code/frontend/src/components/MoneyMaker/UltimateMoneyMaker.tsx",
        "/app/code/frontend/src/components/NewsHub.tsx",
        "/app/code/frontend/src/components/NewsTab.tsx",
        "/app/code/frontend/src/components/OpportunitiesList.tsx",
        "/app/code/frontend/src/components/PastMatchupTracker.tsx",
        "/app/code/frontend/src/components/PatternRecognition.tsx",
        "/app/code/frontend/src/components/PerformanceMonitor.tsx",
        "/app/code/frontend/src/components/PlayerAvatar.tsx",
        "/app/code/frontend/src/components/PlayerDashboard.tsx",
        "/app/code/frontend/src/components/PredictionDisplay.tsx",
        "/app/code/frontend/src/components/PredictionsTab.tsx",
        "/app/code/frontend/src/components/ProgressBar.tsx",
        "/app/code/frontend/src/components/PropCard.tsx",
        "/app/code/frontend/src/components/PropOllamaUnified.tsx",
        "/app/code/frontend/src/components/QuantumAI.tsx",
        "/app/code/frontend/src/components/QuantumAITab.tsx",
        "/app/code/frontend/src/components/React19Comprehensive.tsx",
        "/app/code/frontend/src/components/React19Test.tsx",
        "/app/code/frontend/src/components/RealTimePerformanceMonitor.tsx",
        "/app/code/frontend/src/components/RealTimePredictions.tsx",
        "/app/code/frontend/src/components/RealtimePredictionDisplay.tsx",
        "/app/code/frontend/src/components/Register.tsx",
        "/app/code/frontend/src/components/SHAPAnalysis.tsx",
        "/app/code/frontend/src/components/SHAPTab.tsx",
        "/app/code/frontend/src/components/SettingsTab.tsx",
        "/app/code/frontend/src/components/SmartControlsBar.tsx",
        "/app/code/frontend/src/components/SocialIntelligence.tsx",
        "/app/code/frontend/src/components/SocialTab.tsx",
        "/app/code/frontend/src/components/StatcastMetrics.tsx",
        "/app/code/frontend/src/components/StreamBackgroundCard.tsx",
        "/app/code/frontend/src/components/StreamingTab.tsx",
        "/app/code/frontend/src/components/Tooltip.tsx",
        "/app/code/frontend/src/components/UnifiedOllama.tsx",
        "/app/code/frontend/src/components/UserProfile.tsx",
        "/app/code/frontend/src/components/VirtualizedPropList.tsx",
        "/app/code/frontend/src/components/ViteErrorBoundary.tsx",
        "/app/code/frontend/src/components/WeatherStation.tsx",
        "/app/code/frontend/src/components/WeatherTab.tsx",
        "/app/code/frontend/src/components/WebSocketAnalytics.tsx",
        "/app/code/frontend/src/components/__tests__/PropOllamaUnified.test.tsx",
        "/app/code/frontend/src/components/__tests__/UnifiedOllama.test.tsx",
        "/app/code/frontend/src/components/admin/AccessRequestManager.tsx",
        "/app/code/frontend/src/components/admin/AdminPanel.tsx",
        "/app/code/frontend/src/components/admin/UserManagement.tsx",
        "/app/code/frontend/src/components/ai/AIExplanationPanel.tsx",
        "/app/code/frontend/src/components/ai/AIRecommendationsDashboard.tsx",
        "/app/code/frontend/src/components/analysis/RealTimeAnalysisTrigger.tsx",
        "/app/code/frontend/src/components/analytics/AnalyticsWidget.tsx",
        "/app/code/frontend/src/components/analytics/CrossSportInsights.tsx",
        "/app/code/frontend/src/components/analytics/DashboardFiltersPanel.tsx",
        "/app/code/frontend/src/components/analytics/DashboardOverview.tsx",
        "/app/code/frontend/src/components/analytics/EvolutionaryInsights.tsx",
        "/app/code/frontend/src/components/analytics/ModelsPerformanceGrid.tsx",
        "/app/code/frontend/src/components/analytics/PerformanceAlertsPanel.tsx",
        "/app/code/frontend/src/components/analytics/PerformanceAnalyticsDashboard.tsx",
        "/app/code/frontend/src/components/analytics/ShapExplanation.tsx",
        "/app/code/frontend/src/components/analytics/SophisticatedAnalyticsDashboard.tsx",
        "/app/code/frontend/src/components/auth/AccessRequestForm.tsx",
        "/app/code/frontend/src/components/auth/AuthPage.tsx",
        "/app/code/frontend/src/components/auth/LoginForm.tsx",
        "/app/code/frontend/src/components/auth/PasswordChangeForm.tsx",
        "/app/code/frontend/src/components/auth/PermissionGuard.tsx",
        "/app/code/frontend/src/components/auth/RouteGuard.tsx",
        "/app/code/frontend/src/components/betting/BetSlipComponent.tsx",
        "/app/code/frontend/src/components/betting/ConfigurationMatrix.tsx",
        "/app/code/frontend/src/components/betting/EnsembleResults.tsx",
        "/app/code/frontend/src/components/betting/UnifiedBettingInterface.tsx",
        "/app/code/frontend/src/components/common/ErrorBoundary.tsx",
        "/app/code/frontend/src/components/common/HealthBanner.tsx",
        "/app/code/frontend/src/components/common/LoadingSkeleton.tsx",
        "/app/code/frontend/src/components/common/notifications/Toaster.tsx",
        "/app/code/frontend/src/components/common/theme/ThemeProvider.tsx",
        "/app/code/frontend/src/components/comprehensive/AdminWrapper.tsx",
        "/app/code/frontend/src/components/comprehensive/ComprehensiveAdminDashboard.tsx",
        "/app/code/frontend/src/components/containers/PropOllamaContainer.tsx",
        "/app/code/frontend/src/components/context/PropOllamaContext.tsx",
        "/app/code/frontend/src/components/core/AdvancedFilters.tsx",
        "/app/code/frontend/src/components/core/AppShell.tsx",
        "/app/code/frontend/src/components/core/ErrorBoundary.tsx",
        "/app/code/frontend/src/components/core/Layout/Layout.tsx",
        "/app/code/frontend/src/components/core/Layout.tsx",
        "/app/code/frontend/src/components/core/Navigation.tsx",
        "/app/code/frontend/src/components/core/React19ErrorBoundary.tsx",
        "/app/code/frontend/src/components/core/ServiceWorkerUpdateNotification.tsx",
        "/app/code/frontend/src/components/core/ThemeSelector.tsx",
        "/app/code/frontend/src/components/debug/BackendConnectionTest.tsx",
        "/app/code/frontend/src/components/debug/DataFetchTest.tsx",
        "/app/code/frontend/src/components/debug/DirectDataFetchTest.tsx",
        "/app/code/frontend/src/components/debug/FeaturedPropsServiceTest.tsx",
        "/app/code/frontend/src/components/debug/SimpleDirectAPITest.tsx",
        "/app/code/frontend/src/components/debug/SimplePropOllamaDebugContainer.tsx",
        "/app/code/frontend/src/components/electron/ElectronIntegration.tsx",
        "/app/code/frontend/src/components/enhanced/AIInsightsPanel.tsx",
        "/app/code/frontend/src/components/enhanced/InteractiveSHAPDashboard.tsx",
        "/app/code/frontend/src/components/enhanced/PortfolioOptimizer.tsx",
        "/app/code/frontend/src/components/enhanced/SmartStackingPanel.tsx",
        "/app/code/frontend/src/components/features/analytics/Analytics.tsx",
        "/app/code/frontend/src/components/features/bankroll/BankrollManager.tsx",
        "/app/code/frontend/src/components/features/betting/ArbitrageOpportunities.tsx",
        "/app/code/frontend/src/components/features/cheatsheets/CheatsheetsDashboard.tsx",
        "/app/code/frontend/src/components/features/dashboard/Dashboard.tsx",
        "/app/code/frontend/src/components/features/dashboard/EnhancedDashboard.tsx",
        "/app/code/frontend/src/components/features/dashboard/hooks.ts",
        "/app/code/frontend/src/components/features/injuries/InjuryTracker.tsx",
        "/app/code/frontend/src/components/features/lineup/LineupBuilder.tsx",
        "/app/code/frontend/src/components/features/livebetting/LiveBetting.tsx",
        "/app/code/frontend/src/components/features/moneymaker/MoneyMaker.tsx",
        "/app/code/frontend/src/components/features/news/NewsHub.tsx",
        "/app/code/frontend/src/components/features/odds/OddsComparison.tsx",
        "/app/code/frontend/src/components/features/prizepicks/PrizePicks.tsx",
        "/app/code/frontend/src/components/features/quantum/QuantumAI.tsx",
        "/app/code/frontend/src/components/features/risk/KellyCalculator.tsx",
        "/app/code/frontend/src/components/features/risk/RiskEngine.tsx",
        "/app/code/frontend/src/components/features/settings/AdvancedSettings.tsx",
        "/app/code/frontend/src/components/features/settings/NotificationSettings.tsx",
        "/app/code/frontend/src/components/features/settings/Settings.tsx",
        "/app/code/frontend/src/components/features/shap/SHAPAnalysis.tsx",
        "/app/code/frontend/src/components/features/social/SocialIntelligence.tsx",
        "/app/code/frontend/src/components/features/sports/SportsManager.tsx",
        "/app/code/frontend/src/components/features/user/UserProfile.tsx",
        "/app/code/frontend/src/components/features/weather/WeatherStation.tsx",
        "/app/code/frontend/src/components/feedback/FeedbackExamples.tsx",
        "/app/code/frontend/src/components/feedback/FeedbackWidget.tsx",
        "/app/code/frontend/src/components/filters/BettingFilters.tsx",
        "/app/code/frontend/src/components/filters/PropFilters.tsx",
        "/app/code/frontend/src/components/hooks/usePropOllamaData.ts",
        "/app/code/frontend/src/components/hooks/usePropOllamaReducer.ts",
        "/app/code/frontend/src/components/hooks/usePropOllamaState.ts",
        "/app/code/frontend/src/components/hooks/useSimplePropOllamaData.ts",
        "/app/code/frontend/src/components/layout/CyberFooter.tsx",
        "/app/code/frontend/src/components/lists/PropList.tsx",
        "/app/code/frontend/src/components/ml/MLModelCenter.tsx",
        "/app/code/frontend/src/components/navigation/EnhancedNavigation.tsx",
        "/app/code/frontend/src/components/navigation/MainNavigation.tsx",
        "/app/code/frontend/src/components/odds/OddsComparisonPanel.tsx",
        "/app/code/frontend/src/components/optimized/OptimizedPropList.fixed.tsx",
        "/app/code/frontend/src/components/optimized/OptimizedPropList.tsx",
        "/app/code/frontend/src/components/optimized/OptimizedPropList.v2.tsx",
        "/app/code/frontend/src/components/optimized/OptimizedPropOllamaContainer.tsx",
        "/app/code/frontend/src/components/pages/EnhancedLiveStreamPage.tsx",
        "/app/code/frontend/src/components/pages/EnhancedLockedBetsPage.tsx",
        "/app/code/frontend/src/components/pages/LiveStreamPage.tsx",
        "/app/code/frontend/src/components/pages/SettingsAdminPage.tsx",
        "/app/code/frontend/src/components/pages/SimpleSettingsPage.tsx",
        "/app/code/frontend/src/components/pages/UnifiedSettingsAdminPage.tsx",
        "/app/code/frontend/src/components/performance/PerformancePanel.tsx",
        "/app/code/frontend/src/components/player/EnhancedPlayerDashboard.tsx",
        "/app/code/frontend/src/components/player/PlayerAdvancedStats.tsx",
        "/app/code/frontend/src/components/player/PlayerDashboard.tsx",
        "/app/code/frontend/src/components/player/PlayerDashboardContainer.tsx",
        "/app/code/frontend/src/components/player/PlayerDashboardWrapper.tsx",
        "/app/code/frontend/src/components/player/PlayerMatchupAnalysis.tsx",
        "/app/code/frontend/src/components/player/PlayerOverview.tsx",
        "/app/code/frontend/src/components/player/PlayerPerformanceTrends.tsx",
        "/app/code/frontend/src/components/player/PlayerPropHistory.tsx",
        "/app/code/frontend/src/components/player/PlayerQuickStats.tsx",
        "/app/code/frontend/src/components/player/PlayerStatTrends.tsx",
        "/app/code/frontend/src/components/player/PlayerVisualizationCharts.tsx",
        "/app/code/frontend/src/components/shared/DemoModeIndicator.tsx",
        "/app/code/frontend/src/components/shared/PropOllamaChatBox.tsx",
        "/app/code/frontend/src/components/shared/ui/LoadingSpinner.tsx",
        "/app/code/frontend/src/components/sorting/PropSorting.tsx",
        "/app/code/frontend/src/components/stats/GameStatsPanel.tsx",
        "/app/code/frontend/src/components/ui/BackendControl.tsx",
        "/app/code/frontend/src/components/ui/BankrollTracker.tsx",
        "/app/code/frontend/src/components/ui/BetSimulationTool.tsx",
        "/app/code/frontend/src/components/ui/ChartErrorBoundary.tsx",
        "/app/code/frontend/src/components/ui/ChartOverride.tsx",
        "/app/code/frontend/src/components/ui/ChartWrapper.tsx",
        "/app/code/frontend/src/components/ui/ConfidenceBandChart.tsx",
        "/app/code/frontend/src/components/ui/ConfidenceBands.tsx",
        "/app/code/frontend/src/components/ui/CyberButton.tsx",
        "/app/code/frontend/src/components/ui/EmptyState.tsx",
        "/app/code/frontend/src/components/ui/EnhancedErrorBoundary.tsx",
        "/app/code/frontend/src/components/ui/EnhancedMetricCard.tsx",
        "/app/code/frontend/src/components/ui/EnhancedPropCard.tsx",
        "/app/code/frontend/src/components/ui/FeatureFlagIndicators.tsx",
        "/app/code/frontend/src/components/ui/GlassCard.tsx",
        "/app/code/frontend/src/components/ui/GlowButton.tsx",
        "/app/code/frontend/src/components/ui/GlowCard.tsx",
        "/app/code/frontend/src/components/ui/HistoricalPerformanceDashboard.tsx",
        "/app/code/frontend/src/components/ui/HolographicText.tsx",
        "/app/code/frontend/src/components/ui/LoadingOverlay.tsx",
        "/app/code/frontend/src/components/ui/LoadingWave.tsx",
        "/app/code/frontend/src/components/ui/MarketOpportunityCard.tsx",
        "/app/code/frontend/src/components/ui/MetricCard.tsx",
        "/app/code/frontend/src/components/ui/ModernActivityFeed.tsx",
        "/app/code/frontend/src/components/ui/ModernCommandPalette.tsx",
        "/app/code/frontend/src/components/ui/ModernNotificationCenter.tsx",
        "/app/code/frontend/src/components/ui/ModernStatusBar.tsx",
        "/app/code/frontend/src/components/ui/NotificationCenter.tsx",
        "/app/code/frontend/src/components/ui/NotificationToast.tsx",
        "/app/code/frontend/src/components/ui/OfflineIndicator.tsx",
        "/app/code/frontend/src/components/ui/ParticleField.tsx",
        "/app/code/frontend/src/components/ui/PredictionExplanationOverlay.tsx",
        "/app/code/frontend/src/components/ui/PredictionSummaryCard.tsx",
        "/app/code/frontend/src/components/ui/RiskHeatMap.tsx",
        "/app/code/frontend/src/components/ui/SafeChart.tsx",
        "/app/code/frontend/src/components/ui/SearchModal.tsx",
        "/app/code/frontend/src/components/ui/ServiceStatusIndicators.tsx",
        "/app/code/frontend/src/components/ui/Skeleton.tsx",
        "/app/code/frontend/src/components/ui/SmartControlsBar.tsx",
        "/app/code/frontend/src/components/ui/SourceHealthBar.tsx",
        "/app/code/frontend/src/components/ui/StatusIndicator.tsx",
        "/app/code/frontend/src/components/ui/StyledSelect.tsx",
        "/app/code/frontend/src/components/ui/Tooltip.tsx",
        "/app/code/frontend/src/components/ui/UnifiedUI.tsx",
        "/app/code/frontend/src/components/ui/UniversalButton.tsx",
        "/app/code/frontend/src/components/ui/WinProbabilityMeter.tsx",
        "/app/code/frontend/src/components/ui/alert.tsx",
        "/app/code/frontend/src/components/ui/badge.tsx",
        "/app/code/frontend/src/components/ui/betting/BettingFilters.tsx",
        "/app/code/frontend/src/components/ui/betting/BettingOpportunityCard.tsx",
        "/app/code/frontend/src/components/ui/design-system.tsx",
        "/app/code/frontend/src/components/ui/grid.tsx",
        "/app/code/frontend/src/components/ui/input.tsx",
        "/app/code/frontend/src/components/ui/label.tsx",
        "/app/code/frontend/src/components/ui/ml-status-indicators.tsx",
        "/app/code/frontend/src/components/ui/progress.tsx",
        "/app/code/frontend/src/components/ui/real-time-metrics.tsx",
        "/app/code/frontend/src/components/ui/select.tsx",
        "/app/code/frontend/src/components/ui/slider.tsx",
        "/app/code/frontend/src/components/ui/switch.tsx",
        "/app/code/frontend/src/components/ui/tabs.tsx",
        "/app/code/frontend/src/components/user-friendly/AnalyticsCommandCenter.tsx",
        "/app/code/frontend/src/components/user-friendly/Message.tsx",
        "/app/code/frontend/src/components/user-friendly/PrizePicksPro.tsx",
        "/app/code/frontend/src/components/user-friendly/PropOllama.tsx",
        "/app/code/frontend/src/components/user-friendly/PropOllamaInput.tsx",
        "/app/code/frontend/src/components/user-friendly/PropOllamaMessages.tsx",
        "/app/code/frontend/src/components/user-friendly/Settings.tsx",
        "/app/code/frontend/src/components/user-friendly/UserFriendlyApp.tsx",
        "/app/code/frontend/src/components/user-friendly/__tests__/PropOllama.test.tsx",
        "/app/code/frontend/src/components/welcome/PropFinderCompetitorDashboard.tsx",
        "/app/code/frontend/src/contexts/AppContext.tsx",
        "/app/code/frontend/src/contexts/AuthContext.tsx",
        "/app/code/frontend/src/contexts/CommandSummaryContext.tsx",
        "/app/code/frontend/src/contexts/LoggerContext.tsx",
        "/app/code/frontend/src/contexts/MetricsContext.tsx",
        "/app/code/frontend/src/contexts/ThemeContext.tsx",
        "/app/code/frontend/src/contexts/WebSocketContext.tsx",
        "/app/code/frontend/src/contexts/__mocks__/AuthContext.tsx",
        "/app/code/frontend/src/contexts/__tests__/AppContext.test.tsx",
        "/app/code/frontend/src/contexts/__tests__/AuthContext.test.tsx",
        "/app/code/frontend/src/core/MasterIntegrationHub.tsx",
        "/app/code/frontend/src/domains/analytics/components/ModernAnalyticsDashboard.tsx",
        "/app/code/frontend/src/domains/betting/components/ModernBetSlip.tsx",
        "/app/code/frontend/src/hooks/__tests__/usePlayerDashboardState.test.ts",
        "/app/code/frontend/src/hooks/__tests__/usePlayerDashboardState.test.tsx",
        "/app/code/frontend/src/hooks/useAdminData.ts",
        "/app/code/frontend/src/hooks/useAnalytics.ts",
        "/app/code/frontend/src/hooks/useApiRequest.ts",
        "/app/code/frontend/src/hooks/useBettingData.ts",
        "/app/code/frontend/src/hooks/useBettingSettings.ts",
        "/app/code/frontend/src/hooks/useClickOutside.ts",
        "/app/code/frontend/src/hooks/useDebounce.ts",
        "/app/code/frontend/src/hooks/useElectron.ts",
        "/app/code/frontend/src/hooks/useEnhancedBettingEngine.ts",
        "/app/code/frontend/src/hooks/useEnhancedRealDataSources.ts",
        "/app/code/frontend/src/hooks/useErrorBoundary.ts",
        "/app/code/frontend/src/hooks/useFilteredSorted.ts",
        "/app/code/frontend/src/hooks/useMLSimulation.ts",
        "/app/code/frontend/src/hooks/usePermissions.ts",
        "/app/code/frontend/src/hooks/usePlayerDashboardState.ts",
        "/app/code/frontend/src/hooks/usePredictionCacheManager.ts",
        "/app/code/frontend/src/hooks/usePrizePicksProps.ts",
        "/app/code/frontend/src/hooks/useRealtimeData.ts",
        "/app/code/frontend/src/hooks/useRealtimePredictions.ts",
        "/app/code/frontend/src/hooks/useSmartAlerts.ts",
        "/app/code/frontend/src/hooks/useStrategyEngineData.ts",
        "/app/code/frontend/src/hooks/useToast.tsx",
        "/app/code/frontend/src/hooks/useTrendingSuggestions.ts",
        "/app/code/frontend/src/hooks/useUnifiedBetting.ts",
        "/app/code/frontend/src/hooks/useUnifiedBettingState.ts",
        "/app/code/frontend/src/index.tsx",
        "/app/code/frontend/src/layouts/AuthLayout.tsx",
        "/app/code/frontend/src/layouts/MainLayout.tsx",
        "/app/code/frontend/src/main.tsx",
        "/app/code/frontend/src/onboarding/OnboardingContext.tsx",
        "/app/code/frontend/src/onboarding/OnboardingFlow.tsx",
        "/app/code/frontend/src/pages/NotFound.tsx",
        "/app/code/frontend/src/pages/PlayerDashboardTest.tsx",
        "/app/code/frontend/src/pages/Settings.tsx",
        "/app/code/frontend/src/pages/__tests__/LiveStream.test.tsx",
        "/app/code/frontend/src/pages/auth/ResetPasswordPage.tsx",
        "/app/code/frontend/src/providers/useAuth.ts",
        "/app/code/frontend/src/services/__tests__/PropOllama.test.tsx",
        "/app/code/frontend/src/services/optimized/OptimizedSportsDataService.ts",
        "/app/code/frontend/src/services/serviceWorkerManager.ts",
        "/app/code/frontend/src/theme/ThemeProvider.tsx",
        "/app/code/frontend/src/update/UpdateModal.tsx",
        "/app/code/frontend/src/utils/chartjs-safe.tsx",
        "/app/code/frontend/src/utils/lazyLoading.enhanced.tsx",
        "/app/code/frontend/src/utils/lazyLoading.tsx",
        "/app/code/frontend/src/utils/performance.ts",
        "/app/code/frontend/src/utils/theme.ts"
      ]
    },
    {
      "package": "react.ts",
      "namedImportsCount": 3,
      "namedImports": [
        "Component",
        "ErrorInfo",
        "ReactNode"
      ],
      "namespaceImports": 9,
      "defaultImports": 203,
      "filesUsed": 217,
      "files": [
        "/app/code/frontend/src/components/Analytics.d.ts",
        "/app/code/frontend/src/components/AnalyticsPage.d.ts",
        "/app/code/frontend/src/components/AppInitializer.d.ts",
        "/app/code/frontend/src/components/AppShell.d.ts",
        "/app/code/frontend/src/components/Arbitrage.d.ts",
        "/app/code/frontend/src/components/ArbitrageDetector.d.ts",
        "/app/code/frontend/src/components/ArbitrageOpportunities.d.ts",
        "/app/code/frontend/src/components/ArbitragePage.d.ts",
        "/app/code/frontend/src/components/Badge.d.ts",
        "/app/code/frontend/src/components/BankrollManager.d.ts",
        "/app/code/frontend/src/components/BankrollPage.d.ts",
        "/app/code/frontend/src/components/BetBuilder.d.ts",
        "/app/code/frontend/src/components/Breadcrumb.d.ts",
        "/app/code/frontend/src/components/Button.d.ts",
        "/app/code/frontend/src/components/ConnectionStatus.d.ts",
        "/app/code/frontend/src/components/Dashboard.d.ts",
        "/app/code/frontend/src/components/DebugPanel.d.ts",
        "/app/code/frontend/src/components/ESPNHeadlinesTicker.d.ts",
        "/app/code/frontend/src/components/FeatureStatusPanel.d.ts",
        "/app/code/frontend/src/components/FilterBar.d.ts",
        "/app/code/frontend/src/components/LiveOddsTicker.d.ts",
        "/app/code/frontend/src/components/LoginForm.d.ts",
        "/app/code/frontend/src/components/MLPredictions.d.ts",
        "/app/code/frontend/src/components/MarketAnalysisDashboard.d.ts",
        "/app/code/frontend/src/components/ModelPerformance.d.ts",
        "/app/code/frontend/src/components/MoneyMaker/MoneyMakerAdvanced.d.ts",
        "/app/code/frontend/src/components/NoResultsFallback.d.ts",
        "/app/code/frontend/src/components/PerformanceAnalytics.d.ts",
        "/app/code/frontend/src/components/PerformanceMonitor.d.ts",
        "/app/code/frontend/src/components/Progress.d.ts",
        "/app/code/frontend/src/components/PropList.d.ts",
        "/app/code/frontend/src/components/RegisterForm.d.ts",
        "/app/code/frontend/src/components/RiskManagerPage.d.ts",
        "/app/code/frontend/src/components/Settings.d.ts",
        "/app/code/frontend/src/components/Skeleton.d.ts",
        "/app/code/frontend/src/components/UltimateMoneyMakerEnhanced.d.ts",
        "/app/code/frontend/src/components/WebSocketBatchingAnalytics.d.ts",
        "/app/code/frontend/src/components/WebSocketLoadBalancerAnalytics.d.ts",
        "/app/code/frontend/src/components/WebSocketSecurityDashboard.d.ts",
        "/app/code/frontend/src/components/admin/AdminPanel.d.ts",
        "/app/code/frontend/src/components/admin/ErrorLogs.d.ts",
        "/app/code/frontend/src/components/advanced/WhatIfSimulator.d.ts",
        "/app/code/frontend/src/components/analytics/AdvancedAnalytics.d.ts",
        "/app/code/frontend/src/components/analytics/AdvancedAnalyticsHub.d.ts",
        "/app/code/frontend/src/components/analytics/EnsembleInsights.d.ts",
        "/app/code/frontend/src/components/analytics/EvolutionaryInsights.d.ts",
        "/app/code/frontend/src/components/analytics/HyperMLInsights.d.ts",
        "/app/code/frontend/src/components/analytics/MLInsights.d.ts",
        "/app/code/frontend/src/components/analytics/ModelComparisonChart.d.ts",
        "/app/code/frontend/src/components/analytics/PerformanceAnalyticsDashboard.d.ts",
        "/app/code/frontend/src/components/analytics/PredictionConfidenceGraph.d.ts",
        "/app/code/frontend/src/components/analytics/RealTimeAccuracyDashboard.d.ts",
        "/app/code/frontend/src/components/analytics/RiskAssessmentMatrix.d.ts",
        "/app/code/frontend/src/components/analytics/TrendAnalysisChart.d.ts",
        "/app/code/frontend/src/components/analytics/UltraMLInsights.d.ts",
        "/app/code/frontend/src/components/analytics/UserStats.d.ts",
        "/app/code/frontend/src/components/auth/LoginForm.d.ts",
        "/app/code/frontend/src/components/auth/ProtectedRoute.d.ts",
        "/app/code/frontend/src/components/auth/RegisterForm.d.ts",
        "/app/code/frontend/src/components/auth/UnifiedAuth.d.ts",
        "/app/code/frontend/src/components/base/Badge.d.ts",
        "/app/code/frontend/src/components/base/Breadcrumb.d.ts",
        "/app/code/frontend/src/components/base/Button.d.ts",
        "/app/code/frontend/src/components/base/Card.d.ts",
        "/app/code/frontend/src/components/base/Progress.d.ts",
        "/app/code/frontend/src/components/base/Skeleton.d.ts",
        "/app/code/frontend/src/components/base/SkeletonLoader.d.ts",
        "/app/code/frontend/src/components/base/Toast.d.ts",
        "/app/code/frontend/src/components/base/Toaster.d.ts",
        "/app/code/frontend/src/components/betting/BetSlip.d.ts",
        "/app/code/frontend/src/components/betting/BettingInterface.d.ts",
        "/app/code/frontend/src/components/betting/BettingSettingsContainer.d.ts",
        "/app/code/frontend/src/components/betting/BettingSettingsPanel.d.ts",
        "/app/code/frontend/src/components/betting/BettingSettingsSummary.d.ts",
        "/app/code/frontend/src/components/betting/BettingStats.d.ts",
        "/app/code/frontend/src/components/betting/KellyCalculator.d.ts",
        "/app/code/frontend/src/components/betting/OddsDisplay.d.ts",
        "/app/code/frontend/src/components/betting/PrizePicksInterface.d.ts",
        "/app/code/frontend/src/components/betting/SHAPVisualization.d.ts",
        "/app/code/frontend/src/components/betting/SportSelector.d.ts",
        "/app/code/frontend/src/components/betting/UltimateMoneyMaker.d.ts",
        "/app/code/frontend/src/components/betting/UnifiedBettingHistory.d.ts",
        "/app/code/frontend/src/components/betting/UnifiedBettingInterface.d.ts",
        "/app/code/frontend/src/components/builder/BettingCard.d.ts",
        "/app/code/frontend/src/components/builder/BuilderPage.d.ts",
        "/app/code/frontend/src/components/charts/PerformanceChart.d.ts",
        "/app/code/frontend/src/components/common/ErrorBoundary.d.ts",
        "/app/code/frontend/src/components/common/FilterBar.d.ts",
        "/app/code/frontend/src/components/common/LoadingSkeleton.d.ts",
        "/app/code/frontend/src/components/common/ThemeToggle.d.ts",
        "/app/code/frontend/src/components/common/ToastProvider.d.ts",
        "/app/code/frontend/src/components/common/buttons/BettingButton.d.ts",
        "/app/code/frontend/src/components/common/buttons/BettingButtonGroup.d.ts",
        "/app/code/frontend/src/components/common/buttons/Button.d.ts",
        "/app/code/frontend/src/components/common/layout/Layout.d.ts",
        "/app/code/frontend/src/components/common/layout/MainLayout.d.ts",
        "/app/code/frontend/src/components/common/layout/Navbar.d.ts",
        "/app/code/frontend/src/components/common/layout/Sidebar.d.ts",
        "/app/code/frontend/src/components/common/loading/SkeletonLoader.d.ts",
        "/app/code/frontend/src/components/common/notifications/Toaster.d.ts",
        "/app/code/frontend/src/components/core/ErrorState.d.ts",
        "/app/code/frontend/src/components/core/Layout/Layout.d.ts",
        "/app/code/frontend/src/components/core/LoadingScreen.d.ts",
        "/app/code/frontend/src/components/core/LoadingSpinner.d.ts",
        "/app/code/frontend/src/components/core/LoadingState.d.ts",
        "/app/code/frontend/src/components/core/Navbar/Navbar.d.ts",
        "/app/code/frontend/src/components/core/Sidebar/Sidebar.d.ts",
        "/app/code/frontend/src/components/core/Skeleton.d.ts",
        "/app/code/frontend/src/components/core/Toast.d.ts",
        "/app/code/frontend/src/components/dashboard/CyberDashboard.d.ts",
        "/app/code/frontend/src/components/dashboard/PremiumDashboard.d.ts",
        "/app/code/frontend/src/components/dashboard/UnifiedDashboard.d.ts",
        "/app/code/frontend/src/components/events/UnifiedEventDetails.d.ts",
        "/app/code/frontend/src/components/features/analytics/MLInsights.d.ts",
        "/app/code/frontend/src/components/features/analytics/ModelPerformance.d.ts",
        "/app/code/frontend/src/components/features/analytics/PerformanceChart.d.ts",
        "/app/code/frontend/src/components/features/betting/Arbitrage.d.ts",
        "/app/code/frontend/src/components/features/betting/ArbitrageDetector.d.ts",
        "/app/code/frontend/src/components/features/betting/BetBuilder.d.ts",
        "/app/code/frontend/src/components/features/betting/BetSlipSidebar.d.ts",
        "/app/code/frontend/src/components/features/betting/BettingHistory.d.ts",
        "/app/code/frontend/src/components/features/betting/PropCards.d.ts",
        "/app/code/frontend/src/components/features/dashboard/Dashboard.d.ts",
        "/app/code/frontend/src/components/features/news/ESPNHeadlinesTicker.d.ts",
        "/app/code/frontend/src/components/features/settings/Settings.d.ts",
        "/app/code/frontend/src/components/features/tracking/EntryTracking.d.ts",
        "/app/code/frontend/src/components/features/user/BankrollManager.d.ts",
        "/app/code/frontend/src/components/features/user/BankrollMetrics.d.ts",
        "/app/code/frontend/src/components/features/user/BankrollStats.d.ts",
        "/app/code/frontend/src/components/features/user/RiskProfileManager.d.ts",
        "/app/code/frontend/src/components/features/user/UserProfile.d.ts",
        "/app/code/frontend/src/components/features/user/UserStats.d.ts",
        "/app/code/frontend/src/components/insights/MLInsights.d.ts",
        "/app/code/frontend/src/components/layout/CyberFooter.d.ts",
        "/app/code/frontend/src/components/layout/CyberSidebar.d.ts",
        "/app/code/frontend/src/components/layout/Layout.d.ts",
        "/app/code/frontend/src/components/layout/Navigation.d.ts",
        "/app/code/frontend/src/components/lineup/SmartLineupBuilder.d.ts",
        "/app/code/frontend/src/components/ml/MLModelCenter.d.ts",
        "/app/code/frontend/src/components/ml/UltraAdvancedMLDashboard.d.ts",
        "/app/code/frontend/src/components/mobile/MobileOptimizedInterface.d.ts",
        "/app/code/frontend/src/components/modern/AppShell.d.ts",
        "/app/code/frontend/src/components/modern/BetSlipSidebar.d.ts",
        "/app/code/frontend/src/components/modern/ESPNHeadlinesTicker.d.ts",
        "/app/code/frontend/src/components/modern/PropCard.d.ts",
        "/app/code/frontend/src/components/modern/PropCards.d.ts",
        "/app/code/frontend/src/components/modern/Settings.d.ts",
        "/app/code/frontend/src/components/money-maker/UnifiedMoneyMaker.d.ts",
        "/app/code/frontend/src/components/monitoring/PerformanceAlertContainer.d.ts",
        "/app/code/frontend/src/components/monitoring/PerformanceDashboard.d.ts",
        "/app/code/frontend/src/components/navigation/UnifiedNavigation.d.ts",
        "/app/code/frontend/src/components/overview/UltraAccuracyOverview.d.ts",
        "/app/code/frontend/src/components/prediction/AdvancedConfidenceVisualizer.d.ts",
        "/app/code/frontend/src/components/prediction/PayoutPreview.d.ts",
        "/app/code/frontend/src/components/prediction/PredictionForm.d.ts",
        "/app/code/frontend/src/components/prediction/QuantumPredictionsInterface.d.ts",
        "/app/code/frontend/src/components/prediction/UnifiedPredictionInterface.d.ts",
        "/app/code/frontend/src/components/predictions/ConfidenceIndicator.d.ts",
        "/app/code/frontend/src/components/predictions/ShapValueDisplay.d.ts",
        "/app/code/frontend/src/components/profile/UnifiedProfile.d.ts",
        "/app/code/frontend/src/components/realtime/RealTimeDataStream.d.ts",
        "/app/code/frontend/src/components/revolutionary/EnhancedRevolutionaryInterface.d.ts",
        "/app/code/frontend/src/components/revolutionary/RevolutionaryAccuracyInterface.d.ts",
        "/app/code/frontend/src/components/risk/RiskProfileManager.d.ts",
        "/app/code/frontend/src/components/settings/UnifiedSettingsInterface.d.ts",
        "/app/code/frontend/src/components/shared/feedback/FeedbackWidget.d.ts",
        "/app/code/frontend/src/components/shared/feedback/Toast.d.ts",
        "/app/code/frontend/src/components/shared/feedback/Toaster.d.ts",
        "/app/code/frontend/src/components/shared/ui/NoResultsFallback.d.ts",
        "/app/code/frontend/src/components/shared/ui/SkeletonLoader.d.ts",
        "/app/code/frontend/src/components/strategy/UnifiedMoneyMakerIntegration.d.ts",
        "/app/code/frontend/src/components/strategy/UnifiedStrategyConfig.d.ts",
        "/app/code/frontend/src/components/ui/BankrollTracker.d.ts",
        "/app/code/frontend/src/components/ui/BetSimulationTool.d.ts",
        "/app/code/frontend/src/components/ui/CyberButton.d.ts",
        "/app/code/frontend/src/components/ui/FeatureFlagIndicators.d.ts",
        "/app/code/frontend/src/components/ui/GlassCard.d.ts",
        "/app/code/frontend/src/components/ui/GlowButton.d.ts",
        "/app/code/frontend/src/components/ui/HistoricalPerformanceDashboard.d.ts",
        "/app/code/frontend/src/components/ui/HolographicText.d.ts",
        "/app/code/frontend/src/components/ui/LoadingOverlay.d.ts",
        "/app/code/frontend/src/components/ui/NotificationCenter.d.ts",
        "/app/code/frontend/src/components/ui/PredictionSummaryCard.d.ts",
        "/app/code/frontend/src/components/ui/RiskHeatMap.d.ts",
        "/app/code/frontend/src/components/ui/ServiceStatusIndicators.d.ts",
        "/app/code/frontend/src/components/ui/Sidebar.d.ts",
        "/app/code/frontend/src/components/ui/Skeleton.d.ts",
        "/app/code/frontend/src/components/ui/badge.d.ts",
        "/app/code/frontend/src/components/ui/betting/BettingOpportunityCard.d.ts",
        "/app/code/frontend/src/components/ui/card.d.ts",
        "/app/code/frontend/src/components/ui/input.d.ts",
        "/app/code/frontend/src/components/ui/label.d.ts",
        "/app/code/frontend/src/components/ui/progress.d.ts",
        "/app/code/frontend/src/components/ui/select.d.ts",
        "/app/code/frontend/src/components/ui/slider.d.ts",
        "/app/code/frontend/src/components/ui/tabs.d.ts",
        "/app/code/frontend/src/pages/Admin.d.ts",
        "/app/code/frontend/src/pages/ArbitragePage.d.ts",
        "/app/code/frontend/src/pages/AuthPage.d.ts",
        "/app/code/frontend/src/pages/BankrollPage.d.ts",
        "/app/code/frontend/src/pages/BetsPage.d.ts",
        "/app/code/frontend/src/pages/BuilderExample.d.ts",
        "/app/code/frontend/src/pages/BuilderTest.d.ts",
        "/app/code/frontend/src/pages/LineupBuilderPage.d.ts",
        "/app/code/frontend/src/pages/LineupPage.d.ts",
        "/app/code/frontend/src/pages/NotFound.d.ts",
        "/app/code/frontend/src/pages/Predictions.d.ts",
        "/app/code/frontend/src/pages/PredictionsDashboard.d.ts",
        "/app/code/frontend/src/pages/PrizePicksPageEnhanced.d.ts",
        "/app/code/frontend/src/pages/Profile.d.ts",
        "/app/code/frontend/src/pages/PropsPage.d.ts",
        "/app/code/frontend/src/pages/RiskManagerPage.d.ts",
        "/app/code/frontend/src/pages/SHAPExplain.d.ts",
        "/app/code/frontend/src/pages/Settings.d.ts",
        "/app/code/frontend/src/pages/SettingsPage.d.ts",
        "/app/code/frontend/src/pages/StrategiesPage.d.ts",
        "/app/code/frontend/src/pages/Trends.d.ts"
      ]
    },
    {
      "package": "@",
      "namedImportsCount": 134,
      "namedImports": [
        "UnifiedMonitor",
        "DataSource",
        "EventBus",
        "PoeDataBlock",
        "PrizePicksProps",
        "PoeApiResponse",
        "PoePropCardContent",
        "UnifiedLogger",
        "UnifiedMetrics",
        "ModelPerformanceMetrics",
        "RealtimeData",
        "LiveOddsTickerProps",
        "ModelMetrics",
        "Spinner",
        "useMediaQuery",
        "ProcessedPrizePicksProp",
        "PropOption",
        "userPersonalizationService",
        "Bet",
        "Event",
        "Sport",
        "BetSlipComponent",
        "BettingFilters",
        "useUnifiedBettingState",
        "AnalyticsMetrics",
        "SocialSentimentData",
        "ShapValue",
        "cn",
        "isFeatureEnabled",
        "useBetHistoryStore",
        "FinalPredictionEngine",
        "FinalPredictionEngineDependencies",
        "FinalPredictionEngineConfig",
        "ModelOutput",
        "ModelWeight",
        "RiskProfile",
        "FinalPrediction",
        "RiskLevel",
        "//   PredictionWithExplanation",
        "PerformanceMonitor",
        "ModelVersion",
        "ModelEvaluation",
        "ModelEvaluatorConfig",
        "ModelMetadata",
        "ModelRegistryConfig",
        "WebSocketManager",
        "useBettingStore",
        "MLSimulationService",
        "Team",
        "Player",
        "Game",
        "Prediction",
        "PlayerStats",
        "PlayerForm",
        "//   InjuryStatus\n// @ts-expect-error TS(2307): Cannot find module '@/types/betting' or its corres... Remove this comment to see the full error message",
        "StrategyRecommendation",
        "UnifiedStrategyEngine",
        "BettingAutomationService",
        "defaultConfig",
        "notificationService",
        "PrizePicksPlayer",
        "PrizePicksLines",
        "BaseModel",
        "EngineeredFeatures",
        "RawPlayerData",
        "FeatureLoggerConfig",
        "FeatureRegistryConfig",
        "FeatureConfig",
        "FeatureSelectionResult",
        "FeatureStoreConfig",
        "FeatureValidationResult",
        "User",
        "APIError",
        "AppError",
        "unifiedMonitor",
        "BookOdds",
        "BettingOpportunity",
        "TeaserLeg",
        "TeaserStrategy",
        "CacheService",
        "UnifiedServiceRegistry",
        "BettingOdds",
        "LineShoppingResult",
        "Sportsbook",
        "Logger",
        "ModelConfig",
        "AdvancedEnsembleConfig",
        "ModelType",
        "UnifiedErrorHandler",
        "ModelPrediction",
        "apiClient",
        "ModelManager",
        "ToastNotification",
        "UnifiedConfigManager",
        "UnifiedConfig",
        "UnifiedCache",
        "RiskProfileType",
        "BettingMetrics",
        "BettingHistoryEntry",
        "ExplainabilityMap",
        "PerformanceMetrics",
        "TrendDelta",
        "BetRecord",
        "ClvAnalysis",
        "BettingContext",
        "BettingDecision",
        "PredictionResult",
        "Opportunity",
        "UserPreferences",
        "PredictionSummaryCard",
        "ErrorMetrics",
        "Analyzer",
        "DailyFantasyData",
        "ProjectionAnalysis",
        "Decision",
        "IntegratedData",
        "Recommendation",
        "Strategy",
        "SportsRadarData",
        "TheOddsData",
        "RiskTolerance",
        "PredictionContext",
        "UnifiedPredictionEngine",
        "MarketUpdate",
        "PlayerProp",
        "Entry",
        "Line",
        "Bar",
        "Doughnut",
        "Radar",
        "Scatter",
        "Chart",
        "BettingSystemError",
        "z"
      ],
      "namespaceImports": 0,
      "defaultImports": 6,
      "filesUsed": 127,
      "files": [
        "/app/code/frontend/src/adapters/DailyFantasyAdapter.ts",
        "/app/code/frontend/src/adapters/TheOddsAdapter.ts",
        "/app/code/frontend/src/adapters/poeToApiAdapter.d.ts",
        "/app/code/frontend/src/adapters/poeToApiAdapter.ts",
        "/app/code/frontend/src/api/routes/modelPerformance.ts",
        "/app/code/frontend/src/components/ArbitrageDetector.d.ts",
        "/app/code/frontend/src/components/LiveOddsTicker.d.ts",
        "/app/code/frontend/src/components/ModelPerformance.d.ts",
        "/app/code/frontend/src/components/PlayerDashboard.tsx",
        "/app/code/frontend/src/components/PropList.d.ts",
        "/app/code/frontend/src/components/RealTimePredictions.tsx",
        "/app/code/frontend/src/components/betting/BetSlip.d.ts",
        "/app/code/frontend/src/components/betting/OddsDisplay.d.ts",
        "/app/code/frontend/src/components/betting/SportSelector.d.ts",
        "/app/code/frontend/src/components/betting/UnifiedBettingInterface.tsx",
        "/app/code/frontend/src/components/features/analytics/ModelPerformance.d.ts",
        "/app/code/frontend/src/components/features/betting/ArbitrageDetector.d.ts",
        "/app/code/frontend/src/components/layout/CyberFooter.tsx",
        "/app/code/frontend/src/components/modern/PropCard.d.ts",
        "/app/code/frontend/src/components/modern/PropCards.d.ts",
        "/app/code/frontend/src/components/predictions/ShapValueDisplay.d.ts",
        "/app/code/frontend/src/components/ui/BankrollTracker.tsx",
        "/app/code/frontend/src/components/ui/BetSimulationTool.tsx",
        "/app/code/frontend/src/components/ui/ChartWrapper.tsx",
        "/app/code/frontend/src/components/ui/ConfidenceBandChart.tsx",
        "/app/code/frontend/src/components/ui/ConfidenceBands.tsx",
        "/app/code/frontend/src/components/ui/EmptyState.tsx",
        "/app/code/frontend/src/components/ui/FeatureFlagIndicators.tsx",
        "/app/code/frontend/src/components/ui/GlowButton.tsx",
        "/app/code/frontend/src/components/ui/HistoricalPerformanceDashboard.tsx",
        "/app/code/frontend/src/components/ui/ModernActivityFeed.tsx",
        "/app/code/frontend/src/components/ui/ModernCommandPalette.tsx",
        "/app/code/frontend/src/components/ui/ModernNotificationCenter.tsx",
        "/app/code/frontend/src/components/ui/ModernStatusBar.tsx",
        "/app/code/frontend/src/components/ui/NotificationCenter.tsx",
        "/app/code/frontend/src/components/ui/OfflineIndicator.tsx",
        "/app/code/frontend/src/components/ui/PredictionExplanationOverlay.tsx",
        "/app/code/frontend/src/components/ui/RiskHeatMap.tsx",
        "/app/code/frontend/src/components/ui/SafeChart.tsx",
        "/app/code/frontend/src/components/ui/SearchModal.tsx",
        "/app/code/frontend/src/components/ui/ServiceStatusIndicators.tsx",
        "/app/code/frontend/src/components/ui/SmartControlsBar.tsx",
        "/app/code/frontend/src/components/ui/SourceHealthBar.tsx",
        "/app/code/frontend/src/components/ui/StatusIndicator.tsx",
        "/app/code/frontend/src/components/ui/StyledSelect.tsx",
        "/app/code/frontend/src/components/ui/UnifiedUI.tsx",
        "/app/code/frontend/src/components/ui/UniversalButton.tsx",
        "/app/code/frontend/src/components/ui/design-system.tsx",
        "/app/code/frontend/src/core/FinalPredictionEngine/FinalPredictionEngine.d.ts",
        "/app/code/frontend/src/core/UnifiedMonitor.ts",
        "/app/code/frontend/src/core/logging/logger.d.ts",
        "/app/code/frontend/src/core/metrics/metrics.d.ts",
        "/app/code/frontend/src/core/models/ModelEvaluator.d.ts",
        "/app/code/frontend/src/core/models/ModelManager.d.ts",
        "/app/code/frontend/src/core/models/ModelRegistry.d.ts",
        "/app/code/frontend/src/core/websocket/handlers/PredictionHandler.d.ts",
        "/app/code/frontend/src/hooks/__tests__/usePlayerDashboardState.test.ts",
        "/app/code/frontend/src/hooks/useBettingSettings.ts",
        "/app/code/frontend/src/hooks/useMLSimulation.ts",
        "/app/code/frontend/src/hooks/useStrategyEngineData.ts",
        "/app/code/frontend/src/pages/NotFound.tsx",
        "/app/code/frontend/src/scripts/runAutomation.ts",
        "/app/code/frontend/src/services/adapters/prizepicks.d.ts",
        "/app/code/frontend/src/services/analytics/ShapExplainerService.d.ts",
        "/app/code/frontend/src/services/analytics/featureEngineeringService.d.ts",
        "/app/code/frontend/src/services/analytics/featureLogging.d.ts",
        "/app/code/frontend/src/services/analytics/featureRegistry.d.ts",
        "/app/code/frontend/src/services/analytics/featureSelection.d.ts",
        "/app/code/frontend/src/services/analytics/featureStore.d.ts",
        "/app/code/frontend/src/services/analytics/featureTransformation.d.ts",
        "/app/code/frontend/src/services/analytics/featureValidation.d.ts",
        "/app/code/frontend/src/services/analytics/userPersonalizationService.d.ts",
        "/app/code/frontend/src/services/api/client.ts",
        "/app/code/frontend/src/services/bettingStrategy.d.ts",
        "/app/code/frontend/src/services/cache.d.ts",
        "/app/code/frontend/src/services/core/UnifiedSettingsService.d.ts",
        "/app/code/frontend/src/services/core/UnifiedSettingsService.ts",
        "/app/code/frontend/src/services/lineShoppingService.d.ts",
        "/app/code/frontend/src/services/logger.d.ts",
        "/app/code/frontend/src/services/ml/config/modelConfig.d.ts",
        "/app/code/frontend/src/services/ml/evaluation/ModelEvaluator.d.ts",
        "/app/code/frontend/src/services/ml/manager/ModelManager.d.ts",
        "/app/code/frontend/src/services/ml/models/AdvancedEnsembleModel.d.ts",
        "/app/code/frontend/src/services/ml/models/AlternativeDataModel.d.ts",
        "/app/code/frontend/src/services/ml/models/MarketIntelligenceModel.d.ts",
        "/app/code/frontend/src/services/ml/models/ModelVersion.d.ts",
        "/app/code/frontend/src/services/ml/models/QuantumProbabilityModel.d.ts",
        "/app/code/frontend/src/services/ml/models/RealityExploitationEngine.d.ts",
        "/app/code/frontend/src/services/ml/models/TemporalPatternModel.d.ts",
        "/app/code/frontend/src/services/ml/prediction.ts",
        "/app/code/frontend/src/services/ml/registry/ModelRegistry.d.ts",
        "/app/code/frontend/src/services/ml/service/ModelService.d.ts",
        "/app/code/frontend/src/services/ml/service/ModelService.ts",
        "/app/code/frontend/src/services/notification.d.ts",
        "/app/code/frontend/src/services/prediction/PredictionIntegrationService.d.ts",
        "/app/code/frontend/src/services/risk/RiskProfileService.d.ts",
        "/app/code/frontend/src/services/unified/BaseService.d.ts",
        "/app/code/frontend/src/services/unified/BettingService.d.ts",
        "/app/code/frontend/src/services/unified/CacheService.ts",
        "/app/code/frontend/src/services/unified/UnifiedAnalyticsService.d.ts",
        "/app/code/frontend/src/services/unified/UnifiedBackupService.ts",
        "/app/code/frontend/src/services/unified/UnifiedBettingCore.d.ts",
        "/app/code/frontend/src/services/unified/UnifiedBettingCore.ts",
        "/app/code/frontend/src/services/unified/UnifiedRecoveryService.ts",
        "/app/code/frontend/src/services/userService.d.ts",
        "/app/code/frontend/src/services/weatherModern.ts",
        "/app/code/frontend/src/shared/prizePicks.ts",
        "/app/code/frontend/src/stories/PredictionSummaryCard.stories.d.ts",
        "/app/code/frontend/src/types/prizePicks.ts",
        "/app/code/frontend/src/unified/ErrorHandler.d.ts",
        "/app/code/frontend/src/utils/DailyFantasyAdapter.d.ts",
        "/app/code/frontend/src/utils/DataIntegrationHub.d.ts",
        "/app/code/frontend/src/utils/ESPNAdapter.d.ts",
        "/app/code/frontend/src/utils/ESPNAdapter.ts",
        "/app/code/frontend/src/utils/ProjectionAnalyzer.d.ts",
        "/app/code/frontend/src/utils/ProjectionBettingStrategy.d.ts",
        "/app/code/frontend/src/utils/SentimentEnhancedAnalyzer.d.ts",
        "/app/code/frontend/src/utils/SocialSentimentAdapter.d.ts",
        "/app/code/frontend/src/utils/StrategyEngine.d.ts",
        "/app/code/frontend/src/utils/TheOddsAdapter.d.ts",
        "/app/code/frontend/src/utils/UnifiedBettingCore.d.ts",
        "/app/code/frontend/src/utils/UnifiedBettingCore.test.ts",
        "/app/code/frontend/src/utils/UnifiedPredictionEngine.test.ts",
        "/app/code/frontend/src/utils/businessRules.d.ts",
        "/app/code/frontend/src/utils/chartjs-safe.tsx",
        "/app/code/frontend/src/utils/errorHandler.d.ts",
        "/app/code/frontend/src/validation/schemas.ts"
      ]
    },
    {
      "package": "framer-motion",
      "namedImportsCount": 3,
      "namedImports": [
        "motion",
        "AnimatePresence",
        "MotionProps"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 90,
      "files": [
        "/app/code/frontend/src/components/AutoPilot.tsx",
        "/app/code/frontend/src/components/BankrollManager.tsx",
        "/app/code/frontend/src/components/BestBetsDisplay.tsx",
        "/app/code/frontend/src/components/Button.tsx",
        "/app/code/frontend/src/components/Card.d.ts",
        "/app/code/frontend/src/components/Card.tsx",
        "/app/code/frontend/src/components/InjuryTracker.tsx",
        "/app/code/frontend/src/components/LoadingSpinner.tsx",
        "/app/code/frontend/src/components/Modal.tsx",
        "/app/code/frontend/src/components/MoneyMaker/UltimateMoneyMaker.tsx",
        "/app/code/frontend/src/components/NewsHub.tsx",
        "/app/code/frontend/src/components/PredictionDisplay.tsx",
        "/app/code/frontend/src/components/ProgressBar.tsx",
        "/app/code/frontend/src/components/QuantumAI.tsx",
        "/app/code/frontend/src/components/SHAPAnalysis.tsx",
        "/app/code/frontend/src/components/SocialIntelligence.tsx",
        "/app/code/frontend/src/components/Tooltip.tsx",
        "/app/code/frontend/src/components/UnifiedOllama.tsx",
        "/app/code/frontend/src/components/WeatherStation.tsx",
        "/app/code/frontend/src/components/admin/AccessRequestManager.tsx",
        "/app/code/frontend/src/components/admin/AdminPanel.tsx",
        "/app/code/frontend/src/components/admin/UserManagement.tsx",
        "/app/code/frontend/src/components/analysis/RealTimeAnalysisTrigger.tsx",
        "/app/code/frontend/src/components/auth/AccessRequestForm.tsx",
        "/app/code/frontend/src/components/auth/AuthPage.tsx",
        "/app/code/frontend/src/components/auth/LoginForm.tsx",
        "/app/code/frontend/src/components/auth/PasswordChangeForm.tsx",
        "/app/code/frontend/src/components/core/AdvancedFilters.tsx",
        "/app/code/frontend/src/components/core/AppShell.tsx",
        "/app/code/frontend/src/components/core/Layout/Layout.tsx",
        "/app/code/frontend/src/components/core/Layout.tsx",
        "/app/code/frontend/src/components/core/Navigation.tsx",
        "/app/code/frontend/src/components/core/ServiceWorkerUpdateNotification.tsx",
        "/app/code/frontend/src/components/core/ThemeSelector.tsx",
        "/app/code/frontend/src/components/enhanced/AIInsightsPanel.tsx",
        "/app/code/frontend/src/components/enhanced/PortfolioOptimizer.tsx",
        "/app/code/frontend/src/components/enhanced/SmartStackingPanel.tsx",
        "/app/code/frontend/src/components/features/analytics/Analytics.tsx",
        "/app/code/frontend/src/components/features/bankroll/BankrollManager.tsx",
        "/app/code/frontend/src/components/features/dashboard/Dashboard.tsx",
        "/app/code/frontend/src/components/features/dashboard/EnhancedDashboard.tsx",
        "/app/code/frontend/src/components/features/injuries/InjuryTracker.tsx",
        "/app/code/frontend/src/components/features/lineup/LineupBuilder.tsx",
        "/app/code/frontend/src/components/features/livebetting/LiveBetting.tsx",
        "/app/code/frontend/src/components/features/moneymaker/MoneyMaker.tsx",
        "/app/code/frontend/src/components/features/news/NewsHub.tsx",
        "/app/code/frontend/src/components/features/prizepicks/PrizePicks.tsx",
        "/app/code/frontend/src/components/features/quantum/QuantumAI.tsx",
        "/app/code/frontend/src/components/features/risk/RiskEngine.tsx",
        "/app/code/frontend/src/components/features/settings/AdvancedSettings.tsx",
        "/app/code/frontend/src/components/features/settings/NotificationSettings.tsx",
        "/app/code/frontend/src/components/features/settings/Settings.tsx",
        "/app/code/frontend/src/components/features/shap/SHAPAnalysis.tsx",
        "/app/code/frontend/src/components/features/social/SocialIntelligence.tsx",
        "/app/code/frontend/src/components/features/sports/SportsManager.tsx",
        "/app/code/frontend/src/components/features/user/UserProfile.tsx",
        "/app/code/frontend/src/components/features/weather/WeatherStation.tsx",
        "/app/code/frontend/src/components/navigation/EnhancedNavigation.tsx",
        "/app/code/frontend/src/components/ui/BackendControl.tsx",
        "/app/code/frontend/src/components/ui/ChartErrorBoundary.tsx",
        "/app/code/frontend/src/components/ui/CyberButton.tsx",
        "/app/code/frontend/src/components/ui/EnhancedErrorBoundary.tsx",
        "/app/code/frontend/src/components/ui/EnhancedMetricCard.tsx",
        "/app/code/frontend/src/components/ui/EnhancedPropCard.tsx",
        "/app/code/frontend/src/components/ui/GlassCard.tsx",
        "/app/code/frontend/src/components/ui/GlowCard.tsx",
        "/app/code/frontend/src/components/ui/HolographicText.tsx",
        "/app/code/frontend/src/components/ui/LoadingOverlay.tsx",
        "/app/code/frontend/src/components/ui/LoadingWave.tsx",
        "/app/code/frontend/src/components/ui/MarketOpportunityCard.tsx",
        "/app/code/frontend/src/components/ui/MetricCard.tsx",
        "/app/code/frontend/src/components/ui/NotificationToast.tsx",
        "/app/code/frontend/src/components/ui/PredictionSummaryCard.tsx",
        "/app/code/frontend/src/components/ui/Skeleton.tsx",
        "/app/code/frontend/src/components/ui/Tooltip.tsx",
        "/app/code/frontend/src/components/ui/WinProbabilityMeter.tsx",
        "/app/code/frontend/src/components/ui/alert.tsx",
        "/app/code/frontend/src/components/ui/betting/BettingFilters.tsx",
        "/app/code/frontend/src/components/ui/betting/BettingOpportunityCard.tsx",
        "/app/code/frontend/src/components/ui/grid.tsx",
        "/app/code/frontend/src/components/ui/input.tsx",
        "/app/code/frontend/src/components/ui/label.tsx",
        "/app/code/frontend/src/components/ui/ml-status-indicators.tsx",
        "/app/code/frontend/src/components/ui/progress.tsx",
        "/app/code/frontend/src/components/ui/real-time-metrics.tsx",
        "/app/code/frontend/src/components/ui/select.tsx",
        "/app/code/frontend/src/components/ui/slider.tsx",
        "/app/code/frontend/src/components/ui/tabs.tsx",
        "/app/code/frontend/src/components/user-friendly/PropOllamaMessages.tsx",
        "/app/code/frontend/src/pages/NotFound.tsx"
      ]
    },
    {
      "package": "lucide-react",
      "namedImportsCount": 126,
      "namedImports": [
        "AlertTriangle",
        "BarChart3",
        "CheckCircle",
        "Clock",
        "Pause",
        "Play",
        "Settings",
        "Shield",
        "Zap",
        "DollarSign",
        "PieChart",
        "Target",
        "ChevronRight",
        "Activity",
        "Heart",
        "Search",
        "TrendingDown",
        "User",
        "X",
        "TrendingUp",
        "Brain",
        "Calculator",
        "RefreshCw",
        "Cpu",
        "PlayCircle",
        "ExternalLink",
        "Filter",
        "Newspaper",
        "Star",
        "Calendar",
        "Trophy",
        "AlertCircle",
        "GitBranch",
        "RotateCcw",
        "Eye",
        "Lightbulb",
        "MessageSquare",
        "Share2",
        "Users",
        "Cloud",
        "CloudRain",
        "Droplets",
        "Snowflake",
        "Sun",
        "Thermometer",
        "Wind",
        "Mail",
        "XCircle",
        "CreditCard",
        "Edit",
        "HardDrive",
        "Lock",
        "MemoryStick",
        "Network",
        "Plus",
        "Server",
        "Trash2",
        "Unlock",
        "UserCheck",
        "MoreVertical",
        "Ban",
        "UserX",
        "Square",
        "Bookmark",
        "Timer",
        "Loader2",
        "Database",
        "Percent",
        "LineChart",
        "Info",
        "Send",
        "EyeOff",
        "LogIn",
        "Key",
        "ChevronDown",
        "Menu",
        "Bell",
        "LogOut",
        "Crown",
        "Award",
        "Briefcase",
        "GraduationCap",
        "Home",
        "Radio",
        "Wallet",
        "Palette",
        "Moon",
        "Monitor",
        "Sparkles",
        "Download",
        "Upload",
        "Check",
        "Loader",
        "Wifi",
        "WifiOff",
        "ChevronUp",
        "ArrowRight",
        "BookOpen",
        "Minus",
        "Settings2",
        "Globe",
        "MapPin",
        "Volume2",
        "Atom",
        "Waves",
        "Save",
        "History",
        "Smartphone",
        "VolumeX",
        "Twitter",
        "ThumbsUp",
        "ThumbsDown",
        "Phone",
        "Compass",
        "Gamepad2",
        "Laptop",
        "HelpCircle",
        "Tv",
        "Bot",
        "Maximize2",
        "MessageCircle",
        "Minimize2",
        "ArrowUpRight",
        "ArrowDownRight",
        "Code",
        "Settings as SettingsIcon"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 87,
      "files": [
        "/app/code/frontend/src/components/AutoPilot.tsx",
        "/app/code/frontend/src/components/BankrollManager.tsx",
        "/app/code/frontend/src/components/Breadcrumb.tsx",
        "/app/code/frontend/src/components/InjuryTracker.tsx",
        "/app/code/frontend/src/components/Modal.tsx",
        "/app/code/frontend/src/components/MoneyMaker/UltimateMoneyMaker.tsx",
        "/app/code/frontend/src/components/NewsHub.tsx",
        "/app/code/frontend/src/components/PredictionDisplay.tsx",
        "/app/code/frontend/src/components/QuantumAI.tsx",
        "/app/code/frontend/src/components/SHAPAnalysis.tsx",
        "/app/code/frontend/src/components/SocialIntelligence.tsx",
        "/app/code/frontend/src/components/UserProfile.tsx",
        "/app/code/frontend/src/components/WeatherStation.tsx",
        "/app/code/frontend/src/components/admin/AccessRequestManager.tsx",
        "/app/code/frontend/src/components/admin/AdminPanel.tsx",
        "/app/code/frontend/src/components/admin/UserManagement.tsx",
        "/app/code/frontend/src/components/ai/AIExplanationPanel.tsx",
        "/app/code/frontend/src/components/ai/AIRecommendationsDashboard.tsx",
        "/app/code/frontend/src/components/analysis/RealTimeAnalysisTrigger.tsx",
        "/app/code/frontend/src/components/analytics/SophisticatedAnalyticsDashboard.tsx",
        "/app/code/frontend/src/components/auth/AccessRequestForm.tsx",
        "/app/code/frontend/src/components/auth/LoginForm.tsx",
        "/app/code/frontend/src/components/auth/PasswordChangeForm.tsx",
        "/app/code/frontend/src/components/auth/PermissionGuard.tsx",
        "/app/code/frontend/src/components/betting/UnifiedBettingInterface.tsx",
        "/app/code/frontend/src/components/core/AdvancedFilters.tsx",
        "/app/code/frontend/src/components/core/AppShell.tsx",
        "/app/code/frontend/src/components/core/Navigation.tsx",
        "/app/code/frontend/src/components/core/ThemeSelector.tsx",
        "/app/code/frontend/src/components/debug/BackendConnectionTest.tsx",
        "/app/code/frontend/src/components/enhanced/AIInsightsPanel.tsx",
        "/app/code/frontend/src/components/enhanced/PortfolioOptimizer.tsx",
        "/app/code/frontend/src/components/enhanced/SmartStackingPanel.tsx",
        "/app/code/frontend/src/components/features/analytics/Analytics.tsx",
        "/app/code/frontend/src/components/features/bankroll/BankrollManager.tsx",
        "/app/code/frontend/src/components/features/betting/ArbitrageOpportunities.tsx",
        "/app/code/frontend/src/components/features/cheatsheets/CheatsheetsDashboard.tsx",
        "/app/code/frontend/src/components/features/dashboard/EnhancedDashboard.tsx",
        "/app/code/frontend/src/components/features/injuries/InjuryTracker.tsx",
        "/app/code/frontend/src/components/features/lineup/LineupBuilder.tsx",
        "/app/code/frontend/src/components/features/livebetting/LiveBetting.tsx",
        "/app/code/frontend/src/components/features/moneymaker/MoneyMaker.tsx",
        "/app/code/frontend/src/components/features/news/NewsHub.tsx",
        "/app/code/frontend/src/components/features/odds/OddsComparison.tsx",
        "/app/code/frontend/src/components/features/prizepicks/PrizePicks.tsx",
        "/app/code/frontend/src/components/features/quantum/QuantumAI.tsx",
        "/app/code/frontend/src/components/features/risk/KellyCalculator.tsx",
        "/app/code/frontend/src/components/features/risk/RiskEngine.tsx",
        "/app/code/frontend/src/components/features/settings/AdvancedSettings.tsx",
        "/app/code/frontend/src/components/features/settings/NotificationSettings.tsx",
        "/app/code/frontend/src/components/features/settings/Settings.tsx",
        "/app/code/frontend/src/components/features/shap/SHAPAnalysis.tsx",
        "/app/code/frontend/src/components/features/social/SocialIntelligence.tsx",
        "/app/code/frontend/src/components/features/sports/SportsManager.tsx",
        "/app/code/frontend/src/components/features/user/UserProfile.tsx",
        "/app/code/frontend/src/components/features/weather/WeatherStation.tsx",
        "/app/code/frontend/src/components/feedback/FeedbackWidget.tsx",
        "/app/code/frontend/src/components/ml/MLModelCenter.tsx",
        "/app/code/frontend/src/components/navigation/EnhancedNavigation.tsx",
        "/app/code/frontend/src/components/navigation/MainNavigation.tsx",
        "/app/code/frontend/src/components/odds/OddsComparisonPanel.tsx",
        "/app/code/frontend/src/components/pages/EnhancedLiveStreamPage.tsx",
        "/app/code/frontend/src/components/pages/LiveStreamPage.tsx",
        "/app/code/frontend/src/components/pages/SettingsAdminPage.tsx",
        "/app/code/frontend/src/components/pages/UnifiedSettingsAdminPage.tsx",
        "/app/code/frontend/src/components/player/EnhancedPlayerDashboard.tsx",
        "/app/code/frontend/src/components/player/PlayerDashboard.tsx",
        "/app/code/frontend/src/components/player/PlayerDashboardContainer.tsx",
        "/app/code/frontend/src/components/player/PlayerQuickStats.tsx",
        "/app/code/frontend/src/components/player/PlayerVisualizationCharts.tsx",
        "/app/code/frontend/src/components/shared/DemoModeIndicator.tsx",
        "/app/code/frontend/src/components/shared/PropOllamaChatBox.tsx",
        "/app/code/frontend/src/components/ui/CyberButton.tsx",
        "/app/code/frontend/src/components/ui/EnhancedPropCard.tsx",
        "/app/code/frontend/src/components/ui/LoadingOverlay.tsx",
        "/app/code/frontend/src/components/ui/MetricCard.tsx",
        "/app/code/frontend/src/components/ui/NotificationToast.tsx",
        "/app/code/frontend/src/components/ui/PredictionSummaryCard.tsx",
        "/app/code/frontend/src/components/ui/WinProbabilityMeter.tsx",
        "/app/code/frontend/src/components/ui/alert.tsx",
        "/app/code/frontend/src/components/ui/betting/BettingFilters.tsx",
        "/app/code/frontend/src/components/ui/betting/BettingOpportunityCard.tsx",
        "/app/code/frontend/src/components/ui/input.tsx",
        "/app/code/frontend/src/components/ui/select.tsx",
        "/app/code/frontend/src/components/user-friendly/UserFriendlyApp.tsx",
        "/app/code/frontend/src/components/welcome/PropFinderCompetitorDashboard.tsx",
        "/app/code/frontend/src/pages/Settings.tsx"
      ]
    },
    {
      "package": "@testing-library",
      "namedImportsCount": 7,
      "namedImports": [
        "render",
        "screen",
        "waitFor",
        "act",
        "fireEvent",
        "within",
        "render as testingLibraryRender"
      ],
      "namespaceImports": 0,
      "defaultImports": 2,
      "filesUsed": 35,
      "files": [
        "/app/code/frontend/src/__tests__/AnalyticsLogging.e2e.test.tsx",
        "/app/code/frontend/src/__tests__/App.e2e.error.test.tsx",
        "/app/code/frontend/src/__tests__/App.e2e.test.tsx",
        "/app/code/frontend/src/__tests__/App.empty-state.e2e.test.tsx",
        "/app/code/frontend/src/__tests__/App.test.tsx",
        "/app/code/frontend/src/__tests__/BettingInterface.e2e.test.tsx",
        "/app/code/frontend/src/__tests__/DashboardNavigation.e2e.test.tsx",
        "/app/code/frontend/src/__tests__/MLModelCenterMLOps.e2e.test.tsx",
        "/app/code/frontend/src/__tests__/MinimalUseState.e2e.test.tsx",
        "/app/code/frontend/src/__tests__/RealTimeUpdatesPerformance.e2e.test.tsx",
        "/app/code/frontend/src/__tests__/ServiceRegistryHealth.e2e.test.tsx",
        "/app/code/frontend/src/__tests__/UserContextSwitching.e2e.test.tsx",
        "/app/code/frontend/src/__tests__/WebSocketConnection.e2e.test.tsx",
        "/app/code/frontend/src/__tests__/components/PropOllamaUnified.e2e.test.tsx",
        "/app/code/frontend/src/components/A1BettingPreview.test.tsx",
        "/app/code/frontend/src/components/LockedBets.test.tsx",
        "/app/code/frontend/src/components/__tests__/AppFlows.test.tsx",
        "/app/code/frontend/src/components/__tests__/PropOllamaUnified.test.tsx",
        "/app/code/frontend/src/components/__tests__/UnifiedOllama.test.tsx",
        "/app/code/frontend/src/components/analytics/AnalyticsWidget.test.tsx",
        "/app/code/frontend/src/components/analytics/PerformanceAnalyticsDashboard.test.tsx",
        "/app/code/frontend/src/components/comprehensive/__tests__/ComprehensiveAdminDashboard.test.tsx",
        "/app/code/frontend/src/components/player/__tests__/PlayerDashboardContainer.test.tsx",
        "/app/code/frontend/src/components/user-friendly/__tests__/PropOllama.test.tsx",
        "/app/code/frontend/src/contexts/__tests__/AppContext.test.tsx",
        "/app/code/frontend/src/contexts/__tests__/AuthContext.test.tsx",
        "/app/code/frontend/src/contexts/__tests__/MetricsContext.test.tsx",
        "/app/code/frontend/src/contexts/__tests__/ThemeContext.test.tsx",
        "/app/code/frontend/src/contexts/__tests__/WebSocketContext.test.tsx",
        "/app/code/frontend/src/hooks/__tests__/usePlayerDashboardState.test.ts",
        "/app/code/frontend/src/hooks/__tests__/usePlayerDashboardState.test.tsx",
        "/app/code/frontend/src/pages/__tests__/LiveStream.test.tsx",
        "/app/code/frontend/src/services/__tests__/PropOllama.test.tsx",
        "/app/code/frontend/src/test-utils/index.ts",
        "/app/code/frontend/src/test-utils/render.tsx"
      ]
    },
    {
      "package": "@jest",
      "namedImportsCount": 6,
      "namedImports": [
        "beforeEach",
        "describe",
        "expect",
        "it",
        "test",
        "jest"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 23,
      "files": [
        "/app/code/frontend/src/adapters/__tests__/SocialSentimentAdapter.test.ts",
        "/app/code/frontend/src/components/A1BettingPreview.test.tsx",
        "/app/code/frontend/src/components/AllFeatures.test.tsx",
        "/app/code/frontend/src/components/ArbitragePage.test.tsx",
        "/app/code/frontend/src/components/BankrollPage.test.tsx",
        "/app/code/frontend/src/components/PayoutPreview.test.tsx",
        "/app/code/frontend/src/components/RiskManagerPage.test.tsx",
        "/app/code/frontend/src/components/analytics/AnalyticsDashboard.test.tsx",
        "/app/code/frontend/src/components/controls/SmartControlsBar.test.tsx",
        "/app/code/frontend/src/components/featureCoverage.test.tsx",
        "/app/code/frontend/src/models/__tests__/LineupSynergyModel.test.ts",
        "/app/code/frontend/src/models/__tests__/PlayerFormModel.test.ts",
        "/app/code/frontend/src/models/__tests__/PvPMatchupModel.test.ts",
        "/app/code/frontend/src/models/__tests__/RefereeImpactModel.test.ts",
        "/app/code/frontend/src/models/__tests__/VenueEffectModel.test.ts",
        "/app/code/frontend/src/test/a11y/Accessibility.test.tsx",
        "/app/code/frontend/src/test/featureCoverage.test.tsx",
        "/app/code/frontend/src/test/integration/AllFeatures.test.tsx",
        "/app/code/frontend/src/test/smoke.test.tsx",
        "/app/code/frontend/src/tests/example.test.ts",
        "/app/code/frontend/src/tests/optimization.test.ts",
        "/app/code/frontend/src/utils/UnifiedBettingCore.test.ts",
        "/app/code/frontend/src/utils/UnifiedPredictionEngine.test.ts"
      ]
    },
    {
      "package": "react-router-dom",
      "namedImportsCount": 9,
      "namedImports": [
        "BrowserRouter",
        "Route",
        "Routes",
        "MemoryRouter",
        "Link",
        "useLocation",
        "useNavigate",
        "useParams",
        "useSearchParams"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 20,
      "files": [
        "/app/code/frontend/src/App.tsx",
        "/app/code/frontend/src/__tests__/BettingInterface.e2e.test.tsx",
        "/app/code/frontend/src/__tests__/components/PropOllamaUnified.e2e.test.tsx",
        "/app/code/frontend/src/components/Breadcrumb.tsx",
        "/app/code/frontend/src/components/BuilderIntegration.tsx",
        "/app/code/frontend/src/components/Login.tsx",
        "/app/code/frontend/src/components/Register.tsx",
        "/app/code/frontend/src/components/__tests__/AppFlows.test.tsx",
        "/app/code/frontend/src/components/__tests__/PropOllamaUnified.test.tsx",
        "/app/code/frontend/src/components/__tests__/UnifiedOllama.test.tsx",
        "/app/code/frontend/src/components/auth/AuthPage.tsx",
        "/app/code/frontend/src/components/navigation/MainNavigation.tsx",
        "/app/code/frontend/src/components/player/PlayerDashboard.tsx",
        "/app/code/frontend/src/components/player/PlayerDashboardWrapper.tsx",
        "/app/code/frontend/src/components/user-friendly/UserFriendlyApp.tsx",
        "/app/code/frontend/src/components/user-friendly/__tests__/PropOllama.test.tsx",
        "/app/code/frontend/src/components/welcome/PropFinderCompetitorDashboard.tsx",
        "/app/code/frontend/src/pages/NotFound.tsx",
        "/app/code/frontend/src/pages/__tests__/LiveStream.test.tsx",
        "/app/code/frontend/src/pages/auth/ResetPasswordPage.tsx"
      ]
    },
    {
      "package": "axios",
      "namedImportsCount": 3,
      "namedImports": [
        "AxiosError",
        "AxiosInstance",
        "AxiosResponse"
      ],
      "namespaceImports": 0,
      "defaultImports": 13,
      "filesUsed": 20,
      "files": [
        "/app/code/frontend/src/api/index.ts",
        "/app/code/frontend/src/components/ApiHealthIndicator.tsx",
        "/app/code/frontend/src/components/LineupBuilder.tsx",
        "/app/code/frontend/src/services/ApiService.ts",
        "/app/code/frontend/src/services/EnhancedDataManager.ts",
        "/app/code/frontend/src/services/EnhancedPropAnalysisService.ts",
        "/app/code/frontend/src/services/OptimizedPropAnalysisService.ts",
        "/app/code/frontend/src/services/RefereeService.ts",
        "/app/code/frontend/src/services/__tests__/propOllamaService.test.ts",
        "/app/code/frontend/src/services/api/EnhancedApiService.ts",
        "/app/code/frontend/src/services/authService.ts",
        "/app/code/frontend/src/services/ml_service.ts",
        "/app/code/frontend/src/services/propOllamaService.ts",
        "/app/code/frontend/src/services/realTimePredictionService.ts",
        "/app/code/frontend/src/services/referee/__tests__/RefereeService.test.ts",
        "/app/code/frontend/src/services/unified/BaseService.ts",
        "/app/code/frontend/src/services/unified/EnhancedBackendApiService.ts",
        "/app/code/frontend/src/utils/api.ts",
        "/app/code/frontend/src/utils/api_new.ts",
        "/app/code/frontend/src/utils/api_old.ts"
      ]
    },
    {
      "package": "@tanstack",
      "namedImportsCount": 4,
      "namedImports": [
        "QueryClient",
        "QueryClientProvider",
        "useVirtualizer",
        "useQuery"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 15,
      "files": [
        "/app/code/frontend/src/App.tsx",
        "/app/code/frontend/src/__tests__/App.e2e.error.test.tsx",
        "/app/code/frontend/src/__tests__/App.e2e.test.tsx",
        "/app/code/frontend/src/__tests__/components/PropOllamaUnified.e2e.test.tsx",
        "/app/code/frontend/src/components/VirtualizedPropList.tsx",
        "/app/code/frontend/src/components/__tests__/AppFlows.test.tsx",
        "/app/code/frontend/src/components/__tests__/PropOllamaUnified.test.tsx",
        "/app/code/frontend/src/components/__tests__/UnifiedOllama.test.tsx",
        "/app/code/frontend/src/components/comprehensive/__tests__/ComprehensiveAdminDashboard.test.tsx",
        "/app/code/frontend/src/components/user-friendly/__tests__/PropOllama.test.tsx",
        "/app/code/frontend/src/hooks/useAIInsights.ts",
        "/app/code/frontend/src/hooks/useEnhancedBets.ts",
        "/app/code/frontend/src/hooks/usePortfolioOptimization.ts",
        "/app/code/frontend/src/hooks/useSpecialistData.ts",
        "/app/code/frontend/src/pages/__tests__/LiveStream.test.tsx"
      ]
    },
    {
      "package": "react-hot-toast",
      "namedImportsCount": 2,
      "namedImports": [
        "toast",
        "Toaster as HotToaster"
      ],
      "namespaceImports": 0,
      "defaultImports": 3,
      "filesUsed": 13,
      "files": [
        "/app/code/frontend/src/components/LineupBuilder.tsx",
        "/app/code/frontend/src/components/Toast.tsx",
        "/app/code/frontend/src/components/analysis/RealTimeAnalysisTrigger.tsx",
        "/app/code/frontend/src/components/common/notifications/Toaster.tsx",
        "/app/code/frontend/src/components/electron/ElectronIntegration.tsx",
        "/app/code/frontend/src/components/pages/EnhancedLiveStreamPage.tsx",
        "/app/code/frontend/src/components/pages/LiveStreamPage.tsx",
        "/app/code/frontend/src/components/pages/SettingsAdminPage.tsx",
        "/app/code/frontend/src/components/shared/PropOllamaChatBox.tsx",
        "/app/code/frontend/src/components/user-friendly/PrizePicksPro.tsx",
        "/app/code/frontend/src/components/user-friendly/SearchNotificationHandlers.tsx",
        "/app/code/frontend/src/services/realTimeAnalysisService.ts",
        "/app/code/frontend/src/utils/aiSearch.ts"
      ]
    },
    {
      "package": "eventemitter3",
      "namedImportsCount": 0,
      "namedImports": [],
      "namespaceImports": 0,
      "defaultImports": 10,
      "filesUsed": 10,
      "files": [
        "/app/code/frontend/src/core/EventBus.ts",
        "/app/code/frontend/src/services/ApiService.ts",
        "/app/code/frontend/src/services/unified/ApiService.d.ts",
        "/app/code/frontend/src/services/unified/ApiService.ts",
        "/app/code/frontend/src/services/unified/PerformanceTrackingService.ts",
        "/app/code/frontend/src/services/unified/UnifiedBettingCore.ts",
        "/app/code/frontend/src/utils/UnifiedBettingAnalytics-MyPC.ts",
        "/app/code/frontend/src/utils/UnifiedBettingAnalytics.d.ts",
        "/app/code/frontend/src/utils/UnifiedBettingAnalytics.ts",
        "/app/code/frontend/src/utils/UnifiedBettingCore.ts"
      ]
    },
    {
      "package": "events.ts",
      "namedImportsCount": 1,
      "namedImports": [
        "EventEmitter"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 7,
      "files": [
        "/app/code/frontend/src/services/MLSimulationService.d.ts",
        "/app/code/frontend/src/services/analytics/userPersonalizationService.d.ts",
        "/app/code/frontend/src/services/automation/BettingAutomationService.d.ts",
        "/app/code/frontend/src/services/lineShoppingService.d.ts",
        "/app/code/frontend/src/services/ml/registry/ModelRegistry.d.ts",
        "/app/code/frontend/src/services/notification.d.ts",
        "/app/code/frontend/src/services/realTimeUpdateService.d.ts"
      ]
    },
    {
      "package": "recharts",
      "namedImportsCount": 20,
      "namedImports": [
        "CartesianGrid",
        "Line",
        "LineChart",
        "ResponsiveContainer",
        "Tooltip",
        "XAxis",
        "YAxis",
        "Bar",
        "BarChart",
        "Scatter",
        "ScatterChart",
        "Legend",
        "Cell",
        "PolarAngleAxis",
        "PolarGrid",
        "PolarRadiusAxis",
        "Radar",
        "RadarChart",
        "Pie",
        "PieChart"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 6,
      "files": [
        "/app/code/frontend/src/components/PlayerDashboard.tsx",
        "/app/code/frontend/src/components/StatcastMetrics.tsx",
        "/app/code/frontend/src/components/features/betting/ArbitrageOpportunities.tsx",
        "/app/code/frontend/src/components/player/PlayerAdvancedStats.tsx",
        "/app/code/frontend/src/components/player/PlayerMatchupAnalysis.tsx",
        "/app/code/frontend/src/components/player/PlayerPerformanceTrends.tsx"
      ]
    },
    {
      "package": "zod",
      "namedImportsCount": 3,
      "namedImports": [
        "z",
        "ZodTypeAny",
        "ZodSchema"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 6,
      "files": [
        "/app/code/frontend/src/components/user-friendly/api.ts",
        "/app/code/frontend/src/schemas/affiliate.ts",
        "/app/code/frontend/src/schemas/contest.ts",
        "/app/code/frontend/src/schemas/player.ts",
        "/app/code/frontend/src/schemas/playerProjection.ts",
        "/app/code/frontend/src/zod.ts"
      ]
    },
    {
      "package": "zustand",
      "namedImportsCount": 6,
      "namedImports": [
        "create",
        "persist",
        "subscribeWithSelector",
        "immer",
        "devtools",
        "StateCreator"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 5,
      "files": [
        "/app/code/frontend/src/app/providers/ModernStateProvider.tsx",
        "/app/code/frontend/src/store/index.ts",
        "/app/code/frontend/src/store/slices/betHistorySlice.ts",
        "/app/code/frontend/src/store/unified/UnifiedStoreManager.ts",
        "/app/code/frontend/src/stores/errorStore.ts"
      ]
    },
    {
      "package": "react-error-boundary",
      "namedImportsCount": 2,
      "namedImports": [
        "ErrorBoundary",
        "FallbackProps"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 3,
      "files": [
        "/app/code/frontend/src/app/providers/ConcurrentFeaturesProvider.tsx",
        "/app/code/frontend/src/domains/analytics/components/ModernAnalyticsDashboard.tsx",
        "/app/code/frontend/src/utils/lazyLoading.enhanced.tsx"
      ]
    },
    {
      "package": "framer-motion.ts",
      "namedImportsCount": 1,
      "namedImports": [
        "MotionProps"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 3,
      "files": [
        "/app/code/frontend/src/components/Button.d.ts",
        "/app/code/frontend/src/components/base/Button.d.ts",
        "/app/code/frontend/src/components/base/Card.d.ts"
      ]
    },
    {
      "package": "chart.js",
      "namedImportsCount": 13,
      "namedImports": [
        "BarElement",
        "CategoryScale",
        "Chart as ChartJS",
        "Legend",
        "LineElement",
        "LinearScale",
        "PointElement",
        "Title",
        "Tooltip",
        "Filler",
        "RadarController",
        "RadialLinearScale",
        "Chart"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 3,
      "files": [
        "/app/code/frontend/src/components/enhanced/InteractiveSHAPDashboard.tsx",
        "/app/code/frontend/src/components/player/PlayerVisualizationCharts.tsx",
        "/app/code/frontend/src/utils/chart.ts"
      ]
    },
    {
      "package": "react-window",
      "namedImportsCount": 2,
      "namedImports": [
        "FixedSizeList as List",
        "ListChildComponentProps"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 3,
      "files": [
        "/app/code/frontend/src/components/optimized/OptimizedPropList.fixed.tsx",
        "/app/code/frontend/src/components/optimized/OptimizedPropList.v2.tsx",
        "/app/code/frontend/src/pages/Settings.tsx"
      ]
    },
    {
      "package": "clsx",
      "namedImportsCount": 2,
      "namedImports": [
        "type ClassValue",
        "clsx"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 3,
      "files": [
        "/app/code/frontend/src/lib/utils.ts",
        "/app/code/frontend/src/utils/classNames.d.ts",
        "/app/code/frontend/src/utils/index.ts"
      ]
    },
    {
      "package": "events",
      "namedImportsCount": 1,
      "namedImports": [
        "EventEmitter"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 3,
      "files": [
        "/app/code/frontend/src/services/ConsolidatedCacheManager.ts",
        "/app/code/frontend/src/services/analytics/userPersonalizationService.ts",
        "/app/code/frontend/src/services/unified/ExternalApiService.ts"
      ]
    },
    {
      "package": "path",
      "namedImportsCount": 0,
      "namedImports": [],
      "namespaceImports": 0,
      "defaultImports": 3,
      "filesUsed": 3,
      "files": [
        "/app/code/frontend/src/services/core/UnifiedSettingsService.ts",
        "/app/code/frontend/src/services/unified/UnifiedBackupService.ts",
        "/app/code/frontend/src/services/unified/UnifiedRecoveryService.ts"
      ]
    },
    {
      "package": "msw",
      "namedImportsCount": 3,
      "namedImports": [
        "http",
        "HttpResponse",
        "setupServer"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 2,
      "files": [
        "/app/code/frontend/src/__tests__/mocks/backend.ts",
        "/app/code/frontend/src/components/player/__tests__/PlayerDashboardContainer.test.tsx"
      ]
    },
    {
      "package": "react-error-boundary.ts",
      "namedImportsCount": 1,
      "namedImports": [
        "FallbackProps"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 2,
      "files": [
        "/app/code/frontend/src/components/ErrorFallback.d.ts",
        "/app/code/frontend/src/components/shared/feedback/ErrorFallback.d.ts"
      ]
    },
    {
      "package": "react-chartjs-2",
      "namedImportsCount": 3,
      "namedImports": [
        "Bar",
        "Line",
        "Radar"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 2,
      "files": [
        "/app/code/frontend/src/components/enhanced/InteractiveSHAPDashboard.tsx",
        "/app/code/frontend/src/components/player/PlayerVisualizationCharts.tsx"
      ]
    },
    {
      "package": "@radix-ui",
      "namedImportsCount": 0,
      "namedImports": [],
      "namespaceImports": 2,
      "defaultImports": 0,
      "filesUsed": 2,
      "files": [
        "/app/code/frontend/src/components/ui/label.d.ts",
        "/app/code/frontend/src/components/ui/select.d.ts"
      ]
    },
    {
      "package": "react-dom",
      "namedImportsCount": 1,
      "namedImports": [
        "createRoot"
      ],
      "namespaceImports": 0,
      "defaultImports": 1,
      "filesUsed": 2,
      "files": [
        "/app/code/frontend/src/index.tsx",
        "/app/code/frontend/src/main.tsx"
      ]
    },
    {
      "package": "tailwind-merge",
      "namedImportsCount": 1,
      "namedImports": [
        "twMerge"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 2,
      "files": [
        "/app/code/frontend/src/lib/utils.ts",
        "/app/code/frontend/src/utils/index.ts"
      ]
    },
    {
      "package": "fs",
      "namedImportsCount": 1,
      "namedImports": [
        "promises as fs"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 2,
      "files": [
        "/app/code/frontend/src/services/core/UnifiedSettingsService.ts",
        "/app/code/frontend/src/services/unified/UnifiedBackupService.ts"
      ]
    },
    {
      "package": "eventemitter3.ts",
      "namedImportsCount": 0,
      "namedImports": [],
      "namespaceImports": 0,
      "defaultImports": 2,
      "filesUsed": 2,
      "files": [
        "/app/code/frontend/src/services/unified/UnifiedBettingCore.d.ts",
        "/app/code/frontend/src/utils/UnifiedBettingCore.d.ts"
      ]
    },
    {
      "package": "web-vitals",
      "namedImportsCount": 6,
      "namedImports": [
        "onCLS",
        "onFCP",
        "onINP",
        "onLCP",
        "onTTFB",
        "type Metric"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 2,
      "files": [
        "/app/code/frontend/src/services/webVitalsService.ts",
        "/app/code/frontend/src/webVitals.ts"
      ]
    },
    {
      "package": "vitest",
      "namedImportsCount": 5,
      "namedImports": [
        "describe",
        "expect",
        "it",
        "test",
        "vi"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 2,
      "files": [
        "/app/code/frontend/src/tests/ErrorHandling.test.ts",
        "/app/code/frontend/src/tests/RequestCorrelation.test.ts"
      ]
    },
    {
      "package": "next.ts",
      "namedImportsCount": 2,
      "namedImports": [
        "NextApiRequest",
        "NextApiResponse"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 1,
      "files": [
        "/app/code/frontend/src/api/dailyfantasy/index.d.ts"
      ]
    },
    {
      "package": "express",
      "namedImportsCount": 2,
      "namedImports": [
        "Request",
        "Response"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 1,
      "files": [
        "/app/code/frontend/src/api/routes/modelPerformance.ts"
      ]
    },
    {
      "package": "react-toastify",
      "namedImportsCount": 1,
      "namedImports": [
        "toast"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 1,
      "files": [
        "/app/code/frontend/src/hooks/useErrorBoundary.ts"
      ]
    },
    {
      "package": "axios.ts",
      "namedImportsCount": 2,
      "namedImports": [
        "AxiosInstance",
        "AxiosRequestConfig"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 1,
      "files": [
        "/app/code/frontend/src/services/integrations/apiBase.d.ts"
      ]
    },
    {
      "package": "@tensorflow",
      "namedImportsCount": 0,
      "namedImports": [],
      "namespaceImports": 1,
      "defaultImports": 0,
      "filesUsed": 1,
      "files": [
        "/app/code/frontend/src/services/ml/evaluation/ModelEvaluator.d.ts"
      ]
    },
    {
      "package": "child_process",
      "namedImportsCount": 1,
      "namedImports": [
        "exec"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 1,
      "files": [
        "/app/code/frontend/src/services/unified/UnifiedBackupService.ts"
      ]
    },
    {
      "package": "util",
      "namedImportsCount": 1,
      "namedImports": [
        "promisify"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 1,
      "files": [
        "/app/code/frontend/src/services/unified/UnifiedBackupService.ts"
      ]
    },
    {
      "package": "@storybook",
      "namedImportsCount": 2,
      "namedImports": [
        "Meta",
        "StoryObj"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 1,
      "files": [
        "/app/code/frontend/src/stories/PredictionSummaryCard.stories.d.ts"
      ]
    },
    {
      "package": "@mantine",
      "namedImportsCount": 3,
      "namedImports": [
        "MantineProvider",
        "createTheme",
        "mergeThemeOverrides"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 1,
      "files": [
        "/app/code/frontend/src/test-utils/render.tsx"
      ]
    },
    {
      "package": "@mui",
      "namedImportsCount": 1,
      "namedImports": [
        "Theme"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 1,
      "files": [
        "/app/code/frontend/src/theme/index.d.ts"
      ]
    },
    {
      "package": "electron",
      "namedImportsCount": 1,
      "namedImports": [
        "ipcRenderer"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 1,
      "files": [
        "/app/code/frontend/src/utils/PredictionEngine.ts"
      ]
    },
    {
      "package": "crypto-js",
      "namedImportsCount": 2,
      "namedImports": [
        "AES",
        "enc"
      ],
      "namespaceImports": 0,
      "defaultImports": 0,
      "filesUsed": 1,
      "files": [
        "/app/code/frontend/src/utils/encryption.ts"
      ]
    }
  ],
  "unusedExports": [
    {
      "exportName": "DailyFantasyAdapter",
      "filePath": "/app/code/frontend/src/adapters/DailyFantasyAdapter.ts"
    },
    {
      "exportName": "ESPNGame",
      "filePath": "/app/code/frontend/src/utils/ESPNAdapter.ts"
    },
    {
      "exportName": "ESPNHeadline",
      "filePath": "/app/code/frontend/src/utils/ESPNAdapter.ts"
    },
    {
      "exportName": "ESPNData",
      "filePath": "/app/code/frontend/src/utils/ESPNAdapter.ts"
    },
    {
      "exportName": "ESPNAdapter",
      "filePath": "/app/code/frontend/src/utils/ESPNAdapter.ts"
    },
    {
      "exportName": "PrizePicksAdapter",
      "filePath": "/app/code/frontend/src/adapters/prizepicks.ts"
    },
    {
      "exportName": "type",
      "filePath": "/app/code/frontend/src/zod.ts"
    },
    {
      "exportName": "SportsRadarAdapter",
      "filePath": "/app/code/frontend/src/adapters/SportsRadarAdapter.ts"
    },
    {
      "exportName": "TheOddsAdapter",
      "filePath": "/app/code/frontend/src/adapters/TheOddsAdapter.ts"
    },
    {
      "exportName": "*",
      "filePath": "/app/code/frontend/src/types/index.ts"
    },
    {
      "exportName": "for",
      "filePath": "/app/code/frontend/src/utils/chartjs-safe.tsx"
    },
    {
      "exportName": "declare",
      "filePath": "/app/code/frontend/src/utils/security.d.ts"
    },
    {
      "exportName": "PoeToApiAdapter",
      "filePath": "/app/code/frontend/src/adapters/poeToApiAdapter.ts"
    },
    {
      "exportName": "PoeTeamForm",
      "filePath": "/app/code/frontend/src/adapters/poe/types.ts"
    },
    {
      "exportName": "PoeMatchupHistory",
      "filePath": "/app/code/frontend/src/adapters/poe/types.ts"
    },
    {
      "exportName": "PoePropOption",
      "filePath": "/app/code/frontend/src/adapters/poe/types.ts"
    },
    {
      "exportName": "PoeDetailedProp",
      "filePath": "/app/code/frontend/src/adapters/poe/types.ts"
    },
    {
      "exportName": "PoeProp",
      "filePath": "/app/code/frontend/src/adapters/poe/types.ts"
    },
    {
      "exportName": "PoeSentiment",
      "filePath": "/app/code/frontend/src/adapters/poe/types.ts"
    },
    {
      "exportName": "PoePlayer",
      "filePath": "/app/code/frontend/src/adapters/poe/types.ts"
    },
    {
      "exportName": "ApiProp",
      "filePath": "/app/code/frontend/src/adapters/poe/types.ts"
    },
    {
      "exportName": "ApiOdds",
      "filePath": "/app/code/frontend/src/adapters/poe/types.ts"
    },
    {
      "exportName": "ApiSentiment",
      "filePath": "/app/code/frontend/src/adapters/poe/types.ts"
    },
    {
      "exportName": "ApiNews",
      "filePath": "/app/code/frontend/src/adapters/poe/types.ts"
    },
    {
      "exportName": "MyApiFormat",
      "filePath": "/app/code/frontend/src/adapters/poe/types.ts"
    },
    {
      "exportName": "_poeToApiAdapter",
      "filePath": "/app/code/frontend/src/adapters/poeToApiAdapter.ts"
    },
    {
      "exportName": "PrizePicksConfig",
      "filePath": "/app/code/frontend/src/adapters/prizepicks.ts"
    },
    {
      "exportName": "FeatureEngineeringService",
      "filePath": "/app/code/frontend/src/analytics/FeatureEngineeringService.ts"
    },
    {
      "exportName": "_featureEngineeringService",
      "filePath": "/app/code/frontend/src/analytics/FeatureEngineeringService.ts"
    },
    {
      "exportName": "FeatureSelector",
      "filePath": "/app/code/frontend/src/analytics/FeatureSelector.ts"
    },
    {
      "exportName": "PredictionMetrics",
      "filePath": "/app/code/frontend/src/types/prediction.ts"
    },
    {
      "exportName": "ProjectionAnalyzer",
      "filePath": "/app/code/frontend/src/utils/ProjectionAnalyzer.ts"
    },
    {
      "exportName": "EnhancedAnalysis",
      "filePath": "/app/code/frontend/src/utils/SentimentEnhancedAnalyzer.d.ts"
    },
    {
      "exportName": "SentimentEnhancedAnalyzer",
      "filePath": "/app/code/frontend/src/analyzers/SentimentEnhancedAnalyzer.ts"
    },
    {
      "exportName": "PrizePicksAPIConfig",
      "filePath": "/app/code/frontend/src/api/PrizePicksAPI.ts"
    },
    {
      "exportName": "types",
      "filePath": "/app/code/frontend/src/api/PrizePicksAPI.ts"
    },
    {
      "exportName": "SuspenseWrapper:",
      "filePath": "/app/code/frontend/src/app/providers/ConcurrentFeaturesProvider.tsx"
    },
    {
      "exportName": "useDeferredSearch",
      "filePath": "/app/code/frontend/src/app/providers/ConcurrentFeaturesProvider.tsx"
    },
    {
      "exportName": "useSuspenseData",
      "filePath": "/app/code/frontend/src/app/providers/ConcurrentFeaturesProvider.tsx"
    },
    {
      "exportName": "ConcurrentDataLoaderProps<T>",
      "filePath": "/app/code/frontend/src/app/providers/ConcurrentFeaturesProvider.tsx"
    },
    {
      "exportName": "ConcurrentDataLoader",
      "filePath": "/app/code/frontend/src/app/providers/ConcurrentFeaturesProvider.tsx"
    },
    {
      "exportName": "useConcurrentForm",
      "filePath": "/app/code/frontend/src/app/providers/ConcurrentFeaturesProvider.tsx"
    },
    {
      "exportName": "SuspenseRouteProps",
      "filePath": "/app/code/frontend/src/app/providers/ConcurrentFeaturesProvider.tsx"
    },
    {
      "exportName": "SuspenseRoute:",
      "filePath": "/app/code/frontend/src/app/providers/ConcurrentFeaturesProvider.tsx"
    },
    {
      "exportName": "useUIStore",
      "filePath": "/app/code/frontend/src/app/providers/ModernStateProvider.tsx"
    },
    {
      "exportName": "useAnalyticsStore",
      "filePath": "/app/code/frontend/src/app/providers/ModernStateProvider.tsx"
    },
    {
      "exportName": "useTheme",
      "filePath": "/app/code/frontend/src/app/providers/ModernStateProvider.tsx"
    },
    {
      "exportName": "useSidebar",
      "filePath": "/app/code/frontend/src/app/providers/ModernStateProvider.tsx"
    },
    {
      "exportName": "useAppFilters",
      "filePath": "/app/code/frontend/src/app/providers/ModernStateProvider.tsx"
    },
    {
      "exportName": "AuthContextValue",
      "filePath": "/app/code/frontend/src/auth/authUtils.ts"
    },
    {
      "exportName": "async",
      "filePath": "/app/code/frontend/src/utils/PerformanceMonitor.ts"
    },
    {
      "exportName": "_builderConfig",
      "filePath": "/app/code/frontend/src/builder.config.ts"
    },
    {
      "exportName": "ArbitrageDetectorProps",
      "filePath": "/app/code/frontend/src/components/features/betting/ArbitrageDetector.d.ts"
    },
    {
      "exportName": "ArbitrageOpportunities:",
      "filePath": "/app/code/frontend/src/components/ArbitrageOpportunities.tsx"
    },
    {
      "exportName": "_AutoPilot:",
      "filePath": "/app/code/frontend/src/components/AutoPilot.tsx"
    },
    {
      "exportName": "BadgeProps",
      "filePath": "/app/code/frontend/src/components/ui/badge.tsx"
    },
    {
      "exportName": "BankrollManagerProps",
      "filePath": "/app/code/frontend/src/components/features/user/BankrollManager.d.ts"
    },
    {
      "exportName": "_BankrollManager:",
      "filePath": "/app/code/frontend/src/components/BankrollManager.tsx"
    },
    {
      "exportName": "BettingDashboardProps",
      "filePath": "/app/code/frontend/src/components/BettingDashboard.d.ts"
    },
    {
      "exportName": "_BettingHistory:",
      "filePath": "/app/code/frontend/src/components/BettingHistory.tsx"
    },
    {
      "exportName": "BettingOpportunitiesProps",
      "filePath": "/app/code/frontend/src/components/BettingOpportunities.d.ts"
    },
    {
      "exportName": "_BettingOpportunities:",
      "filePath": "/app/code/frontend/src/components/BettingOpportunities.tsx"
    },
    {
      "exportName": "BettingStatsProps",
      "filePath": "/app/code/frontend/src/components/BettingStats.d.ts"
    },
    {
      "exportName": "_BettingStats:",
      "filePath": "/app/code/frontend/src/components/BettingStats.tsx"
    },
    {
      "exportName": "BreadcrumbItem",
      "filePath": "/app/code/frontend/src/components/base/Breadcrumb.d.ts"
    },
    {
      "exportName": "BreadcrumbProps",
      "filePath": "/app/code/frontend/src/components/base/Breadcrumb.d.ts"
    },
    {
      "exportName": "_Breadcrumb:",
      "filePath": "/app/code/frontend/src/components/Breadcrumb.tsx"
    },
    {
      "exportName": "_Button",
      "filePath": "/app/code/frontend/src/components/Button.tsx"
    },
    {
      "exportName": "CardProps",
      "filePath": "/app/code/frontend/src/components/base/Card.d.ts"
    },
    {
      "exportName": "CardHeaderProps",
      "filePath": "/app/code/frontend/src/components/Card.d.ts"
    },
    {
      "exportName": "CardContentProps",
      "filePath": "/app/code/frontend/src/components/Card.d.ts"
    },
    {
      "exportName": "CardFooterProps",
      "filePath": "/app/code/frontend/src/components/Card.d.ts"
    },
    {
      "exportName": "_Card",
      "filePath": "/app/code/frontend/src/components/Card.tsx"
    },
    {
      "exportName": "_CardHeader",
      "filePath": "/app/code/frontend/src/components/Card.tsx"
    },
    {
      "exportName": "_CardContent",
      "filePath": "/app/code/frontend/src/components/Card.tsx"
    },
    {
      "exportName": "_CardFooter",
      "filePath": "/app/code/frontend/src/components/Card.tsx"
    },
    {
      "exportName": "GlobalErrorBoundary",
      "filePath": "/app/code/frontend/src/components/GlobalErrorBoundary.tsx"
    },
    {
      "exportName": "_InjuryTracker:",
      "filePath": "/app/code/frontend/src/components/InjuryTracker.tsx"
    },
    {
      "exportName": "LiveGameStats:",
      "filePath": "/app/code/frontend/src/components/LiveGameStats.tsx"
    },
    {
      "exportName": "LoadingSpinnerProps",
      "filePath": "/app/code/frontend/src/components/LoadingSpinner.d.ts"
    },
    {
      "exportName": "_LoadingSpinner:",
      "filePath": "/app/code/frontend/src/components/ui/LoadingWave.tsx"
    },
    {
      "exportName": "_MLAnalytics:",
      "filePath": "/app/code/frontend/src/components/MLAnalytics.tsx"
    },
    {
      "exportName": "ModalProps",
      "filePath": "/app/code/frontend/src/components/Modal.d.ts"
    },
    {
      "exportName": "_Modal:",
      "filePath": "/app/code/frontend/src/components/Modal.tsx"
    },
    {
      "exportName": "ModelPerformanceProps",
      "filePath": "/app/code/frontend/src/components/features/analytics/ModelPerformance.d.ts"
    },
    {
      "exportName": "_NewsHub:",
      "filePath": "/app/code/frontend/src/components/NewsHub.tsx"
    },
    {
      "exportName": "_OpportunitiesList:",
      "filePath": "/app/code/frontend/src/components/OpportunitiesList.tsx"
    },
    {
      "exportName": "PastMatchupTracker:",
      "filePath": "/app/code/frontend/src/components/PastMatchupTracker.tsx"
    },
    {
      "exportName": "_PatternRecognition:",
      "filePath": "/app/code/frontend/src/components/PatternRecognition.tsx"
    },
    {
      "exportName": "_PerformanceMonitor:",
      "filePath": "/app/code/frontend/src/components/PerformanceMonitor.tsx"
    },
    {
      "exportName": "GameLog",
      "filePath": "/app/code/frontend/src/components/PlayerDashboard.tsx"
    },
    {
      "exportName": "PlayerPerformanceData",
      "filePath": "/app/code/frontend/src/components/PlayerDashboard.tsx"
    },
    {
      "exportName": "PlayerDashboard:",
      "filePath": "/app/code/frontend/src/components/PlayerDashboard.tsx"
    },
    {
      "exportName": "ProgressProps",
      "filePath": "/app/code/frontend/src/components/ui/progress.tsx"
    },
    {
      "exportName": "ProgressBarProps",
      "filePath": "/app/code/frontend/src/components/ProgressBar.d.ts"
    },
    {
      "exportName": "_ProgressBar:",
      "filePath": "/app/code/frontend/src/components/ProgressBar.tsx"
    },
    {
      "exportName": "_QuantumAI:",
      "filePath": "/app/code/frontend/src/components/QuantumAI.tsx"
    },
    {
      "exportName": "React19Comprehensive:",
      "filePath": "/app/code/frontend/src/components/React19Comprehensive.tsx"
    },
    {
      "exportName": "React19Test:",
      "filePath": "/app/code/frontend/src/components/React19Test.tsx"
    },
    {
      "exportName": "PerformanceMonitor:",
      "filePath": "/app/code/frontend/src/components/RealTimePerformanceMonitor.tsx"
    },
    {
      "exportName": "_RealtimePredictionDisplay:",
      "filePath": "/app/code/frontend/src/components/RealtimePredictionDisplay.tsx"
    },
    {
      "exportName": "_SHAPAnalysis:",
      "filePath": "/app/code/frontend/src/components/SHAPAnalysis.tsx"
    },
    {
      "exportName": "SkeletonProps",
      "filePath": "/app/code/frontend/src/components/ui/Skeleton.tsx"
    },
    {
      "exportName": "_SocialIntelligence:",
      "filePath": "/app/code/frontend/src/components/SocialIntelligence.tsx"
    },
    {
      "exportName": "ToastProps",
      "filePath": "/app/code/frontend/src/components/base/Toast.d.ts"
    },
    {
      "exportName": "TooltipProps",
      "filePath": "/app/code/frontend/src/components/ui/Tooltip.tsx"
    },
    {
      "exportName": "_Tooltip:",
      "filePath": "/app/code/frontend/src/components/ui/Tooltip.tsx"
    },
    {
      "exportName": "_WeatherStation:",
      "filePath": "/app/code/frontend/src/components/WeatherStation.tsx"
    },
    {
      "exportName": "_WebSocketAnalytics:",
      "filePath": "/app/code/frontend/src/components/WebSocketAnalytics.tsx"
    },
    {
      "exportName": "AIExplanationPanel:",
      "filePath": "/app/code/frontend/src/components/ai/AIExplanationPanel.tsx"
    },
    {
      "exportName": "AIRecommendationsDashboard:",
      "filePath": "/app/code/frontend/src/components/ai/AIRecommendationsDashboard.tsx"
    },
    {
      "exportName": "_RealTimeAnalysisTrigger:",
      "filePath": "/app/code/frontend/src/components/analysis/RealTimeAnalysisTrigger.tsx"
    },
    {
      "exportName": "ShapExplanationProps",
      "filePath": "/app/code/frontend/src/components/analytics/ShapExplanation.tsx"
    },
    {
      "exportName": "SophisticatedAnalyticsDashboard",
      "filePath": "/app/code/frontend/src/components/analytics/SophisticatedAnalyticsDashboard.tsx"
    },
    {
      "exportName": "_withPermissions",
      "filePath": "/app/code/frontend/src/components/auth/PermissionGuard.tsx"
    },
    {
      "exportName": "_AdminOnly:",
      "filePath": "/app/code/frontend/src/components/auth/PermissionGuard.tsx"
    },
    {
      "exportName": "_SuperAdminOnly:",
      "filePath": "/app/code/frontend/src/components/auth/PermissionGuard.tsx"
    },
    {
      "exportName": "_AuthenticatedOnly:",
      "filePath": "/app/code/frontend/src/components/auth/PermissionGuard.tsx"
    },
    {
      "exportName": "_withRouteGuard",
      "filePath": "/app/code/frontend/src/components/auth/RouteGuard.tsx"
    },
    {
      "exportName": "_AdminRoute:",
      "filePath": "/app/code/frontend/src/components/auth/RouteGuard.tsx"
    },
    {
      "exportName": "_ProtectedRoute:",
      "filePath": "/app/code/frontend/src/components/auth/RouteGuard.tsx"
    },
    {
      "exportName": "BetSlipComponent:",
      "filePath": "/app/code/frontend/src/components/betting/BetSlipComponent.tsx"
    },
    {
      "exportName": "useErrorHandler",
      "filePath": "/app/code/frontend/src/components/common/ErrorBoundary.tsx"
    },
    {
      "exportName": "BettingButtonProps",
      "filePath": "/app/code/frontend/src/components/common/buttons/BettingButton.d.ts"
    },
    {
      "exportName": "BettingButtonGroupProps",
      "filePath": "/app/code/frontend/src/components/common/buttons/BettingButtonGroup.d.ts"
    },
    {
      "exportName": "ButtonVariant",
      "filePath": "/app/code/frontend/src/components/common/buttons/Button.d.ts"
    },
    {
      "exportName": "ButtonSize",
      "filePath": "/app/code/frontend/src/components/common/buttons/Button.d.ts"
    },
    {
      "exportName": "_Toaster:",
      "filePath": "/app/code/frontend/src/components/common/notifications/Toaster.tsx"
    },
    {
      "exportName": "PropOllamaContextValue",
      "filePath": "/app/code/frontend/src/components/context/PropOllamaContext.tsx"
    },
    {
      "exportName": "PropOllamaProviderProps",
      "filePath": "/app/code/frontend/src/components/context/PropOllamaContext.tsx"
    },
    {
      "exportName": "PropOllamaProvider:",
      "filePath": "/app/code/frontend/src/components/context/PropOllamaContext.tsx"
    },
    {
      "exportName": "usePropOllamaContext",
      "filePath": "/app/code/frontend/src/components/context/PropOllamaContext.tsx"
    },
    {
      "exportName": "_AppShell:",
      "filePath": "/app/code/frontend/src/components/core/AppShell.tsx"
    },
    {
      "exportName": "_Layout:",
      "filePath": "/app/code/frontend/src/components/core/Layout/Layout.tsx"
    },
    {
      "exportName": "NavigationItem",
      "filePath": "/app/code/frontend/src/components/core/Navigation.tsx"
    },
    {
      "exportName": "NavigationSection",
      "filePath": "/app/code/frontend/src/components/core/Navigation.tsx"
    },
    {
      "exportName": "_Navigation:",
      "filePath": "/app/code/frontend/src/components/core/Navigation.tsx"
    },
    {
      "exportName": "React19ErrorBoundary",
      "filePath": "/app/code/frontend/src/components/core/React19ErrorBoundary.tsx"
    },
    {
      "exportName": "ServiceWorkerUpdateNotification:",
      "filePath": "/app/code/frontend/src/components/core/ServiceWorkerUpdateNotification.tsx"
    },
    {
      "exportName": "BackendConnectionTest:",
      "filePath": "/app/code/frontend/src/components/debug/BackendConnectionTest.tsx"
    },
    {
      "exportName": "_useDesktopNotifications",
      "filePath": "/app/code/frontend/src/components/electron/ElectronIntegration.tsx"
    },
    {
      "exportName": "*/",
      "filePath": "/app/code/frontend/src/components/features/cheatsheets/CheatsheetsDashboard.tsx"
    },
    {
      "exportName": "CheatsheetsDashboard:",
      "filePath": "/app/code/frontend/src/components/features/cheatsheets/CheatsheetsDashboard.tsx"
    },
    {
      "exportName": "failed:',",
      "filePath": "/app/code/frontend/src/components/features/cheatsheets/CheatsheetsDashboard.tsx"
    },
    {
      "exportName": "CSV.",
      "filePath": "/app/code/frontend/src/components/features/cheatsheets/CheatsheetsDashboard.tsx"
    },
    {
      "exportName": "LiveOpportunity",
      "filePath": "/app/code/frontend/src/components/features/dashboard/hooks.ts"
    },
    {
      "exportName": "what",
      "filePath": "/app/code/frontend/src/components/features/index.ts"
    },
    {
      "exportName": "mockCheatsheetData",
      "filePath": "/app/code/frontend/src/components/features/odds/MockOddsData.ts"
    },
    {
      "exportName": "OddsComparison:",
      "filePath": "/app/code/frontend/src/components/features/odds/OddsComparison.tsx"
    },
    {
      "exportName": "KellyCalculator:",
      "filePath": "/app/code/frontend/src/components/features/risk/KellyCalculator.tsx"
    },
    {
      "exportName": "settings:',",
      "filePath": "/app/code/frontend/src/components/features/settings/Settings.tsx"
    },
    {
      "exportName": "KnownWebSocketMessageType",
      "filePath": "/app/code/frontend/src/components/features/tracking/EntryTracking.d.ts"
    },
    {
      "exportName": "BettingFilters:",
      "filePath": "/app/code/frontend/src/components/filters/BettingFilters.tsx"
    },
    {
      "exportName": "usePropOllamaData",
      "filePath": "/app/code/frontend/src/components/hooks/usePropOllamaData.ts"
    },
    {
      "exportName": "PropOllamaReducerState",
      "filePath": "/app/code/frontend/src/components/hooks/usePropOllamaReducer.ts"
    },
    {
      "exportName": "PropOllamaAction",
      "filePath": "/app/code/frontend/src/components/hooks/usePropOllamaReducer.ts"
    },
    {
      "exportName": "PropOllamaReducerActions",
      "filePath": "/app/code/frontend/src/components/hooks/usePropOllamaReducer.ts"
    },
    {
      "exportName": "file",
      "filePath": "/app/code/frontend/src/components/index.ts"
    },
    {
      "exportName": "PropListProps",
      "filePath": "/app/code/frontend/src/components/lists/PropList.tsx"
    },
    {
      "exportName": "MLModelDeployment",
      "filePath": "/app/code/frontend/src/components/ml/MLModelCenter.tsx"
    },
    {
      "exportName": "MLModel",
      "filePath": "/app/code/frontend/src/services/ml/MLService.ts"
    },
    {
      "exportName": "MLModelRegistryService",
      "filePath": "/app/code/frontend/src/components/ml/MLModelCenter.tsx"
    },
    {
      "exportName": "MainNavigation:",
      "filePath": "/app/code/frontend/src/components/navigation/MainNavigation.tsx"
    },
    {
      "exportName": "OddsComparisonPanel:",
      "filePath": "/app/code/frontend/src/components/odds/OddsComparisonPanel.tsx"
    },
    {
      "exportName": "PerformancePanelProps",
      "filePath": "/app/code/frontend/src/components/performance/PerformancePanel.tsx"
    },
    {
      "exportName": "PerformancePanel:",
      "filePath": "/app/code/frontend/src/components/performance/PerformancePanel.tsx"
    },
    {
      "exportName": "PlayerAdvancedStats:",
      "filePath": "/app/code/frontend/src/components/player/PlayerAdvancedStats.tsx"
    },
    {
      "exportName": "PlayerDashboardContainer:",
      "filePath": "/app/code/frontend/src/components/player/PlayerDashboardContainer.tsx"
    },
    {
      "exportName": "PlayerMatchupAnalysis:",
      "filePath": "/app/code/frontend/src/components/player/PlayerMatchupAnalysis.tsx"
    },
    {
      "exportName": "PlayerPerformanceTrends:",
      "filePath": "/app/code/frontend/src/components/player/PlayerPerformanceTrends.tsx"
    },
    {
      "exportName": "PlayerQuickStats:",
      "filePath": "/app/code/frontend/src/components/player/PlayerQuickStats.tsx"
    },
    {
      "exportName": "PlayerVisualizationCharts:",
      "filePath": "/app/code/frontend/src/components/player/PlayerVisualizationCharts.tsx"
    },
    {
      "exportName": "DemoModeIndicator:",
      "filePath": "/app/code/frontend/src/components/shared/DemoModeIndicator.tsx"
    },
    {
      "exportName": "safeCell",
      "filePath": "/app/code/frontend/src/components/shared/PropOllamaTypes.ts"
    },
    {
      "exportName": "formatCurrency",
      "filePath": "/app/code/frontend/src/components/shared/PropOllamaTypes.ts"
    },
    {
      "exportName": "formatPercentage",
      "filePath": "/app/code/frontend/src/components/shared/PropOllamaTypes.ts"
    },
    {
      "exportName": "GameStatsPanelProps",
      "filePath": "/app/code/frontend/src/components/stats/GameStatsPanel.tsx"
    },
    {
      "exportName": "GameStatsPanel:",
      "filePath": "/app/code/frontend/src/components/stats/GameStatsPanel.tsx"
    },
    {
      "exportName": "ServiceStatus",
      "filePath": "/app/code/frontend/src/components/ui/BackendControl.tsx"
    },
    {
      "exportName": "SystemMetrics",
      "filePath": "/app/code/frontend/src/services/unified/PerformanceTrackingService.ts"
    },
    {
      "exportName": "BackendControlProps",
      "filePath": "/app/code/frontend/src/components/ui/BackendControl.tsx"
    },
    {
      "exportName": "_BackendControl:",
      "filePath": "/app/code/frontend/src/components/ui/BackendControl.tsx"
    },
    {
      "exportName": "_BankrollTracker:",
      "filePath": "/app/code/frontend/src/components/ui/BankrollTracker.tsx"
    },
    {
      "exportName": "_BetSimulationTool:",
      "filePath": "/app/code/frontend/src/components/ui/BetSimulationTool.tsx"
    },
    {
      "exportName": "ChartErrorBoundaryState",
      "filePath": "/app/code/frontend/src/components/ui/ChartErrorBoundary.tsx"
    },
    {
      "exportName": "ChartErrorBoundaryProps",
      "filePath": "/app/code/frontend/src/components/ui/ChartErrorBoundary.tsx"
    },
    {
      "exportName": "ChartErrorBoundary",
      "filePath": "/app/code/frontend/src/components/ui/ChartErrorBoundary.tsx"
    },
    {
      "exportName": "_Line:",
      "filePath": "/app/code/frontend/src/components/ui/ChartOverride.tsx"
    },
    {
      "exportName": "_Bar:",
      "filePath": "/app/code/frontend/src/components/ui/ChartOverride.tsx"
    },
    {
      "exportName": "_Doughnut:",
      "filePath": "/app/code/frontend/src/components/ui/ChartOverride.tsx"
    },
    {
      "exportName": "_Radar:",
      "filePath": "/app/code/frontend/src/components/ui/ChartOverride.tsx"
    },
    {
      "exportName": "_Scatter:",
      "filePath": "/app/code/frontend/src/components/ui/ChartOverride.tsx"
    },
    {
      "exportName": "_Chart:",
      "filePath": "/app/code/frontend/src/components/ui/ChartOverride.tsx"
    },
    {
      "exportName": "_ChartWrapper:",
      "filePath": "/app/code/frontend/src/components/ui/ChartWrapper.tsx"
    },
    {
      "exportName": "_ConfidenceBandChart:",
      "filePath": "/app/code/frontend/src/components/ui/ConfidenceBandChart.tsx"
    },
    {
      "exportName": "_ConfidenceBands:",
      "filePath": "/app/code/frontend/src/components/ui/ConfidenceBands.tsx"
    },
    {
      "exportName": "_CyberButton:",
      "filePath": "/app/code/frontend/src/components/ui/CyberButton.tsx"
    },
    {
      "exportName": "_EmptyState:",
      "filePath": "/app/code/frontend/src/components/ui/EmptyState.tsx"
    },
    {
      "exportName": "_NoDataEmptyState:",
      "filePath": "/app/code/frontend/src/components/ui/EmptyState.tsx"
    },
    {
      "exportName": "_NoSearchResultsEmptyState:",
      "filePath": "/app/code/frontend/src/components/ui/EmptyState.tsx"
    },
    {
      "exportName": "_ErrorEmptyState:",
      "filePath": "/app/code/frontend/src/components/ui/EmptyState.tsx"
    },
    {
      "exportName": "_LoadingEmptyState:",
      "filePath": "/app/code/frontend/src/components/ui/EmptyState.tsx"
    },
    {
      "exportName": "_NoNotificationsEmptyState:",
      "filePath": "/app/code/frontend/src/components/ui/EmptyState.tsx"
    },
    {
      "exportName": "_NoBetsEmptyState:",
      "filePath": "/app/code/frontend/src/components/ui/EmptyState.tsx"
    },
    {
      "exportName": "_NoHistoryEmptyState:",
      "filePath": "/app/code/frontend/src/components/ui/EmptyState.tsx"
    },
    {
      "exportName": "ErrorBoundaryState",
      "filePath": "/app/code/frontend/src/components/ui/EnhancedErrorBoundary.tsx"
    },
    {
      "exportName": "EnhancedErrorBoundaryProps",
      "filePath": "/app/code/frontend/src/components/ui/EnhancedErrorBoundary.tsx"
    },
    {
      "exportName": "EnhancedErrorBoundary",
      "filePath": "/app/code/frontend/src/components/ui/EnhancedErrorBoundary.tsx"
    },
    {
      "exportName": "MetricTrend",
      "filePath": "/app/code/frontend/src/components/ui/EnhancedMetricCard.tsx"
    },
    {
      "exportName": "MetricThreshold",
      "filePath": "/app/code/frontend/src/components/ui/EnhancedMetricCard.tsx"
    },
    {
      "exportName": "MetricHistory",
      "filePath": "/app/code/frontend/src/components/ui/EnhancedMetricCard.tsx"
    },
    {
      "exportName": "EnhancedMetricCardProps",
      "filePath": "/app/code/frontend/src/components/ui/EnhancedMetricCard.tsx"
    },
    {
      "exportName": "_EnhancedMetricCard:",
      "filePath": "/app/code/frontend/src/components/ui/EnhancedMetricCard.tsx"
    },
    {
      "exportName": "EnhancedPropCardProps",
      "filePath": "/app/code/frontend/src/components/ui/EnhancedPropCard.tsx"
    },
    {
      "exportName": "_EnhancedPropCard:",
      "filePath": "/app/code/frontend/src/components/ui/EnhancedPropCard.tsx"
    },
    {
      "exportName": "_FeatureFlagIndicators:",
      "filePath": "/app/code/frontend/src/components/ui/FeatureFlagIndicators.tsx"
    },
    {
      "exportName": "_GlassCard:",
      "filePath": "/app/code/frontend/src/components/ui/GlassCard.tsx"
    },
    {
      "exportName": "_GlowButton:",
      "filePath": "/app/code/frontend/src/components/ui/GlowButton.tsx"
    },
    {
      "exportName": "_GlowCard:",
      "filePath": "/app/code/frontend/src/components/ui/GlowCard.tsx"
    },
    {
      "exportName": "_HistoricalPerformanceDashboard:",
      "filePath": "/app/code/frontend/src/components/ui/HistoricalPerformanceDashboard.tsx"
    },
    {
      "exportName": "_HolographicText:",
      "filePath": "/app/code/frontend/src/components/ui/HolographicText.tsx"
    },
    {
      "exportName": "LoadingOverlayProps",
      "filePath": "/app/code/frontend/src/components/ui/LoadingOverlay.tsx"
    },
    {
      "exportName": "_LoadingOverlay:",
      "filePath": "/app/code/frontend/src/components/ui/LoadingOverlay.tsx"
    },
    {
      "exportName": "_LoadingWave:",
      "filePath": "/app/code/frontend/src/components/ui/LoadingWave.tsx"
    },
    {
      "exportName": "_LoadingPulse:",
      "filePath": "/app/code/frontend/src/components/ui/LoadingWave.tsx"
    },
    {
      "exportName": "MarketOdds",
      "filePath": "/app/code/frontend/src/components/ui/MarketOpportunityCard.tsx"
    },
    {
      "exportName": "OpportunityMetrics",
      "filePath": "/app/code/frontend/src/components/ui/MarketOpportunityCard.tsx"
    },
    {
      "exportName": "MarketOpportunity",
      "filePath": "/app/code/frontend/src/components/ui/MarketOpportunityCard.tsx"
    },
    {
      "exportName": "MarketOpportunityCardProps",
      "filePath": "/app/code/frontend/src/components/ui/MarketOpportunityCard.tsx"
    },
    {
      "exportName": "_MarketOpportunityCard:",
      "filePath": "/app/code/frontend/src/components/ui/MarketOpportunityCard.tsx"
    },
    {
      "exportName": "MetricCardProps",
      "filePath": "/app/code/frontend/src/components/ui/MetricCard.tsx"
    },
    {
      "exportName": "_MetricCard:",
      "filePath": "/app/code/frontend/src/components/ui/MetricCard.tsx"
    },
    {
      "exportName": "_ModernActivityFeed:",
      "filePath": "/app/code/frontend/src/components/ui/ModernActivityFeed.tsx"
    },
    {
      "exportName": "_ModernCommandPalette:",
      "filePath": "/app/code/frontend/src/components/ui/ModernCommandPalette.tsx"
    },
    {
      "exportName": "_ModernNotificationCenter:",
      "filePath": "/app/code/frontend/src/components/ui/ModernNotificationCenter.tsx"
    },
    {
      "exportName": "_ModernStatusBar:",
      "filePath": "/app/code/frontend/src/components/ui/ModernStatusBar.tsx"
    },
    {
      "exportName": "_createCommonStatusItems",
      "filePath": "/app/code/frontend/src/components/ui/ModernStatusBar.tsx"
    },
    {
      "exportName": "_NotificationCenter:",
      "filePath": "/app/code/frontend/src/components/ui/NotificationCenter.tsx"
    },
    {
      "exportName": "_NotificationToast:",
      "filePath": "/app/code/frontend/src/components/ui/NotificationToast.tsx"
    },
    {
      "exportName": "_ToastContainer:",
      "filePath": "/app/code/frontend/src/components/ui/NotificationToast.tsx"
    },
    {
      "exportName": "_OfflineIndicator:",
      "filePath": "/app/code/frontend/src/components/ui/OfflineIndicator.tsx"
    },
    {
      "exportName": "_ParticleField:",
      "filePath": "/app/code/frontend/src/components/ui/ParticleField.tsx"
    },
    {
      "exportName": "_PredictionExplanationOverlay:",
      "filePath": "/app/code/frontend/src/components/ui/PredictionExplanationOverlay.tsx"
    },
    {
      "exportName": "PredictionSummaryProps",
      "filePath": "/app/code/frontend/src/components/ui/PredictionSummaryCard.d.ts"
    },
    {
      "exportName": "PredictionData",
      "filePath": "/app/code/frontend/src/utils/PredictionEngine.ts"
    },
    {
      "exportName": "PredictionSummaryCardProps",
      "filePath": "/app/code/frontend/src/components/ui/PredictionSummaryCard.tsx"
    },
    {
      "exportName": "_PredictionSummaryCard:",
      "filePath": "/app/code/frontend/src/components/ui/PredictionSummaryCard.tsx"
    },
    {
      "exportName": "RiskHeatMapProps",
      "filePath": "/app/code/frontend/src/components/ui/RiskHeatMap.d.ts"
    },
    {
      "exportName": "_RiskHeatMap:",
      "filePath": "/app/code/frontend/src/components/ui/RiskHeatMap.tsx"
    },
    {
      "exportName": "_SafeChart:",
      "filePath": "/app/code/frontend/src/components/ui/SafeChart.tsx"
    },
    {
      "exportName": "_SearchModal:",
      "filePath": "/app/code/frontend/src/components/ui/SearchModal.tsx"
    },
    {
      "exportName": "_ServiceStatusIndicators:",
      "filePath": "/app/code/frontend/src/components/ui/ServiceStatusIndicators.tsx"
    },
    {
      "exportName": "_Skeleton:",
      "filePath": "/app/code/frontend/src/components/ui/Skeleton.tsx"
    },
    {
      "exportName": "_SkeletonCard:",
      "filePath": "/app/code/frontend/src/components/ui/Skeleton.tsx"
    },
    {
      "exportName": "_SkeletonTable:",
      "filePath": "/app/code/frontend/src/components/ui/Skeleton.tsx"
    },
    {
      "exportName": "_SkeletonChart:",
      "filePath": "/app/code/frontend/src/components/ui/Skeleton.tsx"
    },
    {
      "exportName": "_SmartControlsBar:",
      "filePath": "/app/code/frontend/src/components/ui/SmartControlsBar.tsx"
    },
    {
      "exportName": "_SourceHealthBar:",
      "filePath": "/app/code/frontend/src/components/ui/SourceHealthBar.tsx"
    },
    {
      "exportName": "_StatusIndicator:",
      "filePath": "/app/code/frontend/src/components/ui/StatusIndicator.tsx"
    },
    {
      "exportName": "_StyledSelect:",
      "filePath": "/app/code/frontend/src/components/ui/StyledSelect.tsx"
    },
    {
      "exportName": "_UnifiedUI:",
      "filePath": "/app/code/frontend/src/components/ui/UnifiedUI.tsx"
    },
    {
      "exportName": "_UniversalButton",
      "filePath": "/app/code/frontend/src/components/ui/UniversalButton.tsx"
    },
    {
      "exportName": "_PrimaryButton",
      "filePath": "/app/code/frontend/src/components/ui/UniversalButton.tsx"
    },
    {
      "exportName": "_SecondaryButton",
      "filePath": "/app/code/frontend/src/components/ui/UniversalButton.tsx"
    },
    {
      "exportName": "_DangerButton",
      "filePath": "/app/code/frontend/src/components/ui/UniversalButton.tsx"
    },
    {
      "exportName": "_CyberButton",
      "filePath": "/app/code/frontend/src/components/ui/UniversalButton.tsx"
    },
    {
      "exportName": "_GlowButton",
      "filePath": "/app/code/frontend/src/components/ui/UniversalButton.tsx"
    },
    {
      "exportName": "_GlassButton",
      "filePath": "/app/code/frontend/src/components/ui/UniversalButton.tsx"
    },
    {
      "exportName": "_NeonButton",
      "filePath": "/app/code/frontend/src/components/ui/UniversalButton.tsx"
    },
    {
      "exportName": "_QuantumButton",
      "filePath": "/app/code/frontend/src/components/ui/UniversalButton.tsx"
    },
    {
      "exportName": "_PremiumButton",
      "filePath": "/app/code/frontend/src/components/ui/UniversalButton.tsx"
    },
    {
      "exportName": "_LoadingButton",
      "filePath": "/app/code/frontend/src/components/ui/UniversalButton.tsx"
    },
    {
      "exportName": "_IconButton",
      "filePath": "/app/code/frontend/src/components/ui/UniversalButton.tsx"
    },
    {
      "exportName": "WinProbabilityData",
      "filePath": "/app/code/frontend/src/components/ui/WinProbabilityMeter.tsx"
    },
    {
      "exportName": "WinProbabilityMeterProps",
      "filePath": "/app/code/frontend/src/components/ui/WinProbabilityMeter.tsx"
    },
    {
      "exportName": "_WinProbabilityMeter:",
      "filePath": "/app/code/frontend/src/components/ui/WinProbabilityMeter.tsx"
    },
    {
      "exportName": "AlertProps",
      "filePath": "/app/code/frontend/src/components/ui/alert.tsx"
    },
    {
      "exportName": "_Alert:",
      "filePath": "/app/code/frontend/src/components/ui/alert.tsx"
    },
    {
      "exportName": "_AlertTitle:",
      "filePath": "/app/code/frontend/src/components/ui/alert.tsx"
    },
    {
      "exportName": "_AlertDescription:",
      "filePath": "/app/code/frontend/src/components/ui/alert.tsx"
    },
    {
      "exportName": "_Badge:",
      "filePath": "/app/code/frontend/src/components/ui/badge.tsx"
    },
    {
      "exportName": "FilterOption",
      "filePath": "/app/code/frontend/src/components/ui/betting/BettingFilters.tsx"
    },
    {
      "exportName": "BettingFiltersProps",
      "filePath": "/app/code/frontend/src/components/ui/betting/BettingFilters.tsx"
    },
    {
      "exportName": "_BettingFilters:",
      "filePath": "/app/code/frontend/src/components/ui/betting/BettingFilters.tsx"
    },
    {
      "exportName": "BettingOpportunityCardProps",
      "filePath": "/app/code/frontend/src/components/ui/betting/BettingOpportunityCard.tsx"
    },
    {
      "exportName": "_BettingOpportunityCard:",
      "filePath": "/app/code/frontend/src/components/ui/betting/BettingOpportunityCard.tsx"
    },
    {
      "exportName": "GridProps",
      "filePath": "/app/code/frontend/src/components/ui/grid.tsx"
    },
    {
      "exportName": "GridItemProps",
      "filePath": "/app/code/frontend/src/components/ui/grid.tsx"
    },
    {
      "exportName": "_Grid:",
      "filePath": "/app/code/frontend/src/components/ui/grid.tsx"
    },
    {
      "exportName": "_GridItem:",
      "filePath": "/app/code/frontend/src/components/ui/grid.tsx"
    },
    {
      "exportName": "InputProps",
      "filePath": "/app/code/frontend/src/components/ui/input.tsx"
    },
    {
      "exportName": "_Input",
      "filePath": "/app/code/frontend/src/components/ui/input.tsx"
    },
    {
      "exportName": "LabelProps",
      "filePath": "/app/code/frontend/src/components/ui/label.tsx"
    },
    {
      "exportName": "_Label",
      "filePath": "/app/code/frontend/src/components/ui/label.tsx"
    },
    {
      "exportName": "MLStatusIndicatorsProps",
      "filePath": "/app/code/frontend/src/components/ui/ml-status-indicators.tsx"
    },
    {
      "exportName": "_Progress:",
      "filePath": "/app/code/frontend/src/components/ui/progress.tsx"
    },
    {
      "exportName": "MetricDataPoint",
      "filePath": "/app/code/frontend/src/components/ui/real-time-metrics.tsx"
    },
    {
      "exportName": "RealTimeMetric",
      "filePath": "/app/code/frontend/src/components/ui/real-time-metrics.tsx"
    },
    {
      "exportName": "RealTimeMetricsProps",
      "filePath": "/app/code/frontend/src/components/ui/real-time-metrics.tsx"
    },
    {
      "exportName": "SelectContextType",
      "filePath": "/app/code/frontend/src/components/ui/select.tsx"
    },
    {
      "exportName": "SelectProps",
      "filePath": "/app/code/frontend/src/components/ui/select.tsx"
    },
    {
      "exportName": "SelectTriggerProps",
      "filePath": "/app/code/frontend/src/components/ui/select.tsx"
    },
    {
      "exportName": "SelectContentProps",
      "filePath": "/app/code/frontend/src/components/ui/select.tsx"
    },
    {
      "exportName": "SelectItemProps",
      "filePath": "/app/code/frontend/src/components/ui/select.tsx"
    },
    {
      "exportName": "SelectValueProps",
      "filePath": "/app/code/frontend/src/components/ui/select.tsx"
    },
    {
      "exportName": "_Select:",
      "filePath": "/app/code/frontend/src/components/ui/select.tsx"
    },
    {
      "exportName": "_SelectTrigger:",
      "filePath": "/app/code/frontend/src/components/ui/select.tsx"
    },
    {
      "exportName": "_SelectValue:",
      "filePath": "/app/code/frontend/src/components/ui/select.tsx"
    },
    {
      "exportName": "_SelectContent:",
      "filePath": "/app/code/frontend/src/components/ui/select.tsx"
    },
    {
      "exportName": "_SelectItem:",
      "filePath": "/app/code/frontend/src/components/ui/select.tsx"
    },
    {
      "exportName": "SliderProps",
      "filePath": "/app/code/frontend/src/components/ui/slider.tsx"
    },
    {
      "exportName": "_Slider:",
      "filePath": "/app/code/frontend/src/components/ui/slider.tsx"
    },
    {
      "exportName": "_Switch:",
      "filePath": "/app/code/frontend/src/components/ui/switch.tsx"
    },
    {
      "exportName": "TabsProps",
      "filePath": "/app/code/frontend/src/components/ui/tabs.tsx"
    },
    {
      "exportName": "TabsListProps",
      "filePath": "/app/code/frontend/src/components/ui/tabs.tsx"
    },
    {
      "exportName": "TabsTriggerProps",
      "filePath": "/app/code/frontend/src/components/ui/tabs.tsx"
    },
    {
      "exportName": "TabsContentProps",
      "filePath": "/app/code/frontend/src/components/ui/tabs.tsx"
    },
    {
      "exportName": "TabsContextType",
      "filePath": "/app/code/frontend/src/components/ui/tabs.tsx"
    },
    {
      "exportName": "_Tabs:",
      "filePath": "/app/code/frontend/src/components/ui/tabs.tsx"
    },
    {
      "exportName": "_TabsList:",
      "filePath": "/app/code/frontend/src/components/ui/tabs.tsx"
    },
    {
      "exportName": "_TabsTrigger:",
      "filePath": "/app/code/frontend/src/components/ui/tabs.tsx"
    },
    {
      "exportName": "_TabsContent:",
      "filePath": "/app/code/frontend/src/components/ui/tabs.tsx"
    },
    {
      "exportName": "PropOllamaProps",
      "filePath": "/app/code/frontend/src/components/user-friendly/PropOllama.tsx"
    },
    {
      "exportName": "_handleSearchClick",
      "filePath": "/app/code/frontend/src/components/user-friendly/SearchNotificationHandlers.tsx"
    },
    {
      "exportName": "_handleNotificationClick",
      "filePath": "/app/code/frontend/src/components/user-friendly/SearchNotificationHandlers.tsx"
    },
    {
      "exportName": "_ChatPayloadSchema",
      "filePath": "/app/code/frontend/src/components/user-friendly/api.ts"
    },
    {
      "exportName": "ChatPayload",
      "filePath": "/app/code/frontend/src/components/user-friendly/api.ts"
    },
    {
      "exportName": "capability']",
      "filePath": "/app/code/frontend/src/components/welcome/PropFinderCompetitorDashboard.tsx"
    },
    {
      "exportName": "tools",
      "filePath": "/app/code/frontend/src/components/welcome/PropFinderCompetitorDashboard.tsx"
    },
    {
      "exportName": "SportConfig",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_SPORTS_CONFIG:",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_getAllSports",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_getSportById",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_getSportNames",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_getSportNamesWithAll",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_getSportsByCategory",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_getActiveSports",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_getFantasySports",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_getLiveBettingSports",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_getSportEmoji",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_getSportDisplayName",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_getSportColor",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_getSportMarkets",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_SPORT_CATEGORIES",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_SEASON_FILTERS",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_SPORT_OPTIONS",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_MAJOR_SPORTS",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_EMERGING_SPORTS",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_INTERNATIONAL_SPORTS",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_ALL_MARKET_TYPES",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "_SPORT_COMBINATIONS",
      "filePath": "/app/code/frontend/src/constants/sports.ts"
    },
    {
      "exportName": "VITE_WS_ENDPOINT",
      "filePath": "/app/code/frontend/src/constants.ts"
    },
    {
      "exportName": "VITE_WS_URL",
      "filePath": "/app/code/frontend/src/constants.ts"
    },
    {
      "exportName": "VITE_THEODDS_API_KEY",
      "filePath": "/app/code/frontend/src/constants.ts"
    },
    {
      "exportName": "VITE_SPORTRADAR_API_KEY",
      "filePath": "/app/code/frontend/src/constants.ts"
    },
    {
      "exportName": "VITE_DAILYFANTASY_API_KEY",
      "filePath": "/app/code/frontend/src/constants.ts"
    },
    {
      "exportName": "VITE_PRIZEPICKS_API_KEY",
      "filePath": "/app/code/frontend/src/constants.ts"
    },
    {
      "exportName": "VITE_PRIZEPICKS_API_URL",
      "filePath": "/app/code/frontend/src/constants.ts"
    },
    {
      "exportName": "VITE_SENTIMENT_API_URL",
      "filePath": "/app/code/frontend/src/constants.ts"
    },
    {
      "exportName": "VITE_SENTIMENT_API_KEY",
      "filePath": "/app/code/frontend/src/constants.ts"
    },
    {
      "exportName": "VITE_ENABLE_SENTIMENT",
      "filePath": "/app/code/frontend/src/constants.ts"
    },
    {
      "exportName": "VITE_DISABLE_SOCIAL_SENTIMENT",
      "filePath": "/app/code/frontend/src/constants.ts"
    },
    {
      "exportName": "VITE_SPORTRADAR_API_ENDPOINT",
      "filePath": "/app/code/frontend/src/constants.ts"
    },
    {
      "exportName": "VITE_ODDS_API_ENDPOINT",
      "filePath": "/app/code/frontend/src/constants.ts"
    },
    {
      "exportName": "VITE_ESPN_API_ENDPOINT",
      "filePath": "/app/code/frontend/src/constants.ts"
    },
    {
      "exportName": "VITE_SOCIAL_API_ENDPOINT",
      "filePath": "/app/code/frontend/src/constants.ts"
    },
    {
      "exportName": "AppContextType",
      "filePath": "/app/code/frontend/src/contexts/AppContext.tsx"
    },
    {
      "exportName": "_AppProvider:",
      "filePath": "/app/code/frontend/src/contexts/AppContext.tsx"
    },
    {
      "exportName": "_AuthProvider:",
      "filePath": "/app/code/frontend/src/contexts/AuthContext.tsx"
    },
    {
      "exportName": "_CommandSummaryProvider:",
      "filePath": "/app/code/frontend/src/contexts/CommandSummaryContext.tsx"
    },
    {
      "exportName": "_useCommandSummary",
      "filePath": "/app/code/frontend/src/contexts/CommandSummaryContext.tsx"
    },
    {
      "exportName": "LoggerContextType",
      "filePath": "/app/code/frontend/src/contexts/LoggerContext.tsx"
    },
    {
      "exportName": "LoggerLevel",
      "filePath": "/app/code/frontend/src/contexts/LoggerContext.tsx"
    },
    {
      "exportName": "_LoggerProvider:",
      "filePath": "/app/code/frontend/src/contexts/LoggerContext.tsx"
    },
    {
      "exportName": "_useLogger",
      "filePath": "/app/code/frontend/src/contexts/LoggerContext.tsx"
    },
    {
      "exportName": "MetricsContextType",
      "filePath": "/app/code/frontend/src/contexts/MetricsContext.tsx"
    },
    {
      "exportName": "_MetricsProvider:",
      "filePath": "/app/code/frontend/src/contexts/MetricsContext.tsx"
    },
    {
      "exportName": "ThemeContextType",
      "filePath": "/app/code/frontend/src/contexts/ThemeContext.tsx"
    },
    {
      "exportName": "_ThemeProvider:",
      "filePath": "/app/code/frontend/src/theme/ThemeProvider.tsx"
    },
    {
      "exportName": "WebSocketContextType",
      "filePath": "/app/code/frontend/src/contexts/WebSocketContext.tsx"
    },
    {
      "exportName": "WebSocketStatus",
      "filePath": "/app/code/frontend/src/contexts/WebSocketContext.tsx"
    },
    {
      "exportName": "_WebSocketProvider:",
      "filePath": "/app/code/frontend/src/contexts/WebSocketContext.tsx"
    },
    {
      "exportName": "EventTypes",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "_eventBus",
      "filePath": "/app/code/frontend/src/core/EventBus.ts"
    },
    {
      "exportName": "_useMasterIntegration",
      "filePath": "/app/code/frontend/src/core/MasterIntegrationHub.tsx"
    },
    {
      "exportName": "_MasterIntegrationProvider:",
      "filePath": "/app/code/frontend/src/core/MasterIntegrationHub.tsx"
    },
    {
      "exportName": "ConfigLeaf",
      "filePath": "/app/code/frontend/src/core/UnifiedConfig.ts"
    },
    {
      "exportName": "ConfigValue",
      "filePath": "/app/code/frontend/src/core/UnifiedConfig.ts"
    },
    {
      "exportName": "getInitializedUnifiedConfig",
      "filePath": "/app/code/frontend/src/core/UnifiedConfig.ts"
    },
    {
      "exportName": "UnifiedStateManager",
      "filePath": "/app/code/frontend/src/core/UnifiedState.ts"
    },
    {
      "exportName": "SystemError",
      "filePath": "/app/code/frontend/src/core/errors.ts"
    },
    {
      "exportName": "ANALYTICS_COMPONENTS_PLACEHOLDER",
      "filePath": "/app/code/frontend/src/domains/analytics/components/index.ts"
    },
    {
      "exportName": "ANALYTICS_HOOKS_PLACEHOLDER",
      "filePath": "/app/code/frontend/src/domains/analytics/hooks/index.ts"
    },
    {
      "exportName": "ANALYTICS_DOMAIN_READY",
      "filePath": "/app/code/frontend/src/domains/analytics/index.ts"
    },
    {
      "exportName": "ANALYTICS_SERVICES_PLACEHOLDER",
      "filePath": "/app/code/frontend/src/domains/analytics/services/index.ts"
    },
    {
      "exportName": "ANALYTICS_TYPES_PLACEHOLDER",
      "filePath": "/app/code/frontend/src/domains/analytics/types/index.ts"
    },
    {
      "exportName": "BETTING_COMPONENTS_PLACEHOLDER",
      "filePath": "/app/code/frontend/src/domains/betting/components/index.ts"
    },
    {
      "exportName": "BETTING_HOOKS_PLACEHOLDER",
      "filePath": "/app/code/frontend/src/domains/betting/hooks/index.ts"
    },
    {
      "exportName": "BETTING_DOMAIN_READY",
      "filePath": "/app/code/frontend/src/domains/betting/index.ts"
    },
    {
      "exportName": "BETTING_SERVICES_PLACEHOLDER",
      "filePath": "/app/code/frontend/src/domains/betting/services/index.ts"
    },
    {
      "exportName": "BETTING_TYPES_PLACEHOLDER",
      "filePath": "/app/code/frontend/src/domains/betting/types/index.ts"
    },
    {
      "exportName": "_useThemeStore",
      "filePath": "/app/code/frontend/src/hooks/index.ts"
    },
    {
      "exportName": "_useMLAnalytics",
      "filePath": "/app/code/frontend/src/hooks/index.ts"
    },
    {
      "exportName": "_useAdminData",
      "filePath": "/app/code/frontend/src/hooks/useAdminData.ts"
    },
    {
      "exportName": "exportData",
      "filePath": "/app/code/frontend/src/hooks/useAnalytics.ts"
    },
    {
      "exportName": "would",
      "filePath": "/app/code/frontend/src/hooks/useAnalytics.ts"
    },
    {
      "exportName": "data')",
      "filePath": "/app/code/frontend/src/hooks/useAnalytics.ts"
    },
    {
      "exportName": "useModelPerformance",
      "filePath": "/app/code/frontend/src/hooks/useAnalytics.ts"
    },
    {
      "exportName": "useCrossSportInsights",
      "filePath": "/app/code/frontend/src/hooks/useAnalytics.ts"
    },
    {
      "exportName": "useApiRequest<T>",
      "filePath": "/app/code/frontend/src/hooks/useApiRequest.ts"
    },
    {
      "exportName": "_useBettingData",
      "filePath": "/app/code/frontend/src/hooks/useBettingData.ts"
    },
    {
      "exportName": "useBettingSettings",
      "filePath": "/app/code/frontend/src/hooks/useBettingSettings.ts"
    },
    {
      "exportName": "useClickOutside",
      "filePath": "/app/code/frontend/src/hooks/useClickOutside.ts"
    },
    {
      "exportName": "useDebounce<T>",
      "filePath": "/app/code/frontend/src/hooks/useDebounce.ts"
    },
    {
      "exportName": "_useEnhancedBettingEngine",
      "filePath": "/app/code/frontend/src/hooks/useEnhancedBettingEngine.ts"
    },
    {
      "exportName": "_useEnhancedRealDataSources",
      "filePath": "/app/code/frontend/src/hooks/useEnhancedRealDataSources.ts"
    },
    {
      "exportName": "useErrorBoundary",
      "filePath": "/app/code/frontend/src/hooks/useErrorBoundary.ts"
    },
    {
      "exportName": "FilterSortOptions",
      "filePath": "/app/code/frontend/src/hooks/useFilteredSorted.ts"
    },
    {
      "exportName": "useFilteredSorted<",
      "filePath": "/app/code/frontend/src/hooks/useFilteredSorted.ts"
    },
    {
      "exportName": "_useMLSimulation",
      "filePath": "/app/code/frontend/src/hooks/useMLSimulation.ts"
    },
    {
      "exportName": "useMonitoring",
      "filePath": "/app/code/frontend/src/hooks/useMonitoring.ts"
    },
    {
      "exportName": "calculatePayout",
      "filePath": "/app/code/frontend/src/hooks/usePayout.ts"
    },
    {
      "exportName": "_usePredictionCacheManager",
      "filePath": "/app/code/frontend/src/hooks/usePredictionCacheManager.ts"
    },
    {
      "exportName": "useRealtimeData<T",
      "filePath": "/app/code/frontend/src/hooks/useRealtimeData.ts"
    },
    {
      "exportName": "_useRealtimeData",
      "filePath": "/app/code/frontend/src/hooks/useRealtimeData.ts"
    },
    {
      "exportName": "_useRealtimePredictions",
      "filePath": "/app/code/frontend/src/hooks/useRealtimePredictions.ts"
    },
    {
      "exportName": "enum",
      "filePath": "/app/code/frontend/src/utils/UnifiedBettingAnalytics-MyPC.ts"
    },
    {
      "exportName": "SmartAlert",
      "filePath": "/app/code/frontend/src/hooks/useSmartAlerts.ts"
    },
    {
      "exportName": "AlertAction",
      "filePath": "/app/code/frontend/src/hooks/useSmartAlerts.ts"
    },
    {
      "exportName": "AlertFilters",
      "filePath": "/app/code/frontend/src/hooks/useSmartAlerts.ts"
    },
    {
      "exportName": "AlertPreferences",
      "filePath": "/app/code/frontend/src/hooks/useSmartAlerts.ts"
    },
    {
      "exportName": "_useSmartAlerts",
      "filePath": "/app/code/frontend/src/hooks/useSmartAlerts.ts"
    },
    {
      "exportName": "useSportradarGames",
      "filePath": "/app/code/frontend/src/hooks/useSpecialistData.ts"
    },
    {
      "exportName": "useEventOdds",
      "filePath": "/app/code/frontend/src/hooks/useSpecialistData.ts"
    },
    {
      "exportName": "useStrategyEngineData",
      "filePath": "/app/code/frontend/src/hooks/useStrategyEngineData.ts"
    },
    {
      "exportName": "useToast",
      "filePath": "/app/code/frontend/src/hooks/useToast.tsx"
    },
    {
      "exportName": "ToastProvider:",
      "filePath": "/app/code/frontend/src/hooks/useToast.tsx"
    },
    {
      "exportName": "useNotification",
      "filePath": "/app/code/frontend/src/hooks/useToast.tsx"
    },
    {
      "exportName": "_useUnifiedBetting",
      "filePath": "/app/code/frontend/src/hooks/useUnifiedBetting.ts"
    },
    {
      "exportName": "BetSlipItem",
      "filePath": "/app/code/frontend/src/hooks/useUnifiedBettingState.ts"
    },
    {
      "exportName": "_AuthLayout:",
      "filePath": "/app/code/frontend/src/layouts/AuthLayout.tsx"
    },
    {
      "exportName": "_AuthLayoutProvider:",
      "filePath": "/app/code/frontend/src/layouts/AuthLayout.tsx"
    },
    {
      "exportName": "_MainLayout:",
      "filePath": "/app/code/frontend/src/layouts/MainLayout.tsx"
    },
    {
      "exportName": "COMPONENT_PATHS",
      "filePath": "/app/code/frontend/src/lib/paths.ts"
    },
    {
      "exportName": "getComponentPath",
      "filePath": "/app/code/frontend/src/lib/paths.ts"
    },
    {
      "exportName": "OnboardingStep",
      "filePath": "/app/code/frontend/src/onboarding/OnboardingContext.tsx"
    },
    {
      "exportName": "OnboardingState",
      "filePath": "/app/code/frontend/src/onboarding/OnboardingContext.tsx"
    },
    {
      "exportName": "OnboardingProvider:",
      "filePath": "/app/code/frontend/src/onboarding/OnboardingContext.tsx"
    },
    {
      "exportName": "OnboardingFlow:",
      "filePath": "/app/code/frontend/src/onboarding/OnboardingFlow.tsx"
    },
    {
      "exportName": "_useAuth",
      "filePath": "/app/code/frontend/src/providers/useAuth.ts"
    },
    {
      "exportName": "AffiliateLink",
      "filePath": "/app/code/frontend/src/services/partner/AffiliateService.ts"
    },
    {
      "exportName": "AffiliateOffer",
      "filePath": "/app/code/frontend/src/services/partner/AffiliateService.ts"
    },
    {
      "exportName": "ContestSchema",
      "filePath": "/app/code/frontend/src/schemas/contest.ts"
    },
    {
      "exportName": "PlayerSchema",
      "filePath": "/app/code/frontend/src/schemas/player.ts"
    },
    {
      "exportName": "PlayerPoolResponseSchema",
      "filePath": "/app/code/frontend/src/schemas/player.ts"
    },
    {
      "exportName": "PlayerProjectionSchema",
      "filePath": "/app/code/frontend/src/schemas/playerProjection.ts"
    },
    {
      "exportName": "PlayerProjectionsResponseSchema",
      "filePath": "/app/code/frontend/src/schemas/playerProjection.ts"
    },
    {
      "exportName": "PlayerProjection",
      "filePath": "/app/code/frontend/src/types/global.ts"
    },
    {
      "exportName": "AccessRequestSubmission",
      "filePath": "/app/code/frontend/src/services/AccessRequestService.ts"
    },
    {
      "exportName": "ApiServiceEvents",
      "filePath": "/app/code/frontend/src/services/unified/ApiService.ts"
    },
    {
      "exportName": "ApiResponse<T",
      "filePath": "/app/code/frontend/src/types/global.ts"
    },
    {
      "exportName": "RequestConfig",
      "filePath": "/app/code/frontend/src/services/ApiService.ts"
    },
    {
      "exportName": "abstract",
      "filePath": "/app/code/frontend/src/services/unified/BaseService.ts"
    },
    {
      "exportName": "CacheConfig",
      "filePath": "/app/code/frontend/src/utils/cacheUtils.d.ts"
    },
    {
      "exportName": "ConsolidatedCacheManager",
      "filePath": "/app/code/frontend/src/services/ConsolidatedCacheManager.ts"
    },
    {
      "exportName": "getCacheManager",
      "filePath": "/app/code/frontend/src/services/ConsolidatedCacheManager.ts"
    },
    {
      "exportName": "cacheGet",
      "filePath": "/app/code/frontend/src/services/ConsolidatedCacheManager.ts"
    },
    {
      "exportName": "cacheSet",
      "filePath": "/app/code/frontend/src/services/ConsolidatedCacheManager.ts"
    },
    {
      "exportName": "cacheRemove",
      "filePath": "/app/code/frontend/src/services/ConsolidatedCacheManager.ts"
    },
    {
      "exportName": "cacheClear",
      "filePath": "/app/code/frontend/src/services/ConsolidatedCacheManager.ts"
    },
    {
      "exportName": "DebugEnhancedDataManager",
      "filePath": "/app/code/frontend/src/services/DebugEnhancedDataManager.ts"
    },
    {
      "exportName": "EmailTemplate",
      "filePath": "/app/code/frontend/src/services/EmailNotificationService.ts"
    },
    {
      "exportName": "AccessRequestNotification",
      "filePath": "/app/code/frontend/src/services/EmailNotificationService.ts"
    },
    {
      "exportName": "AccessApprovalNotification",
      "filePath": "/app/code/frontend/src/services/EmailNotificationService.ts"
    },
    {
      "exportName": "AccessDenialNotification",
      "filePath": "/app/code/frontend/src/services/EmailNotificationService.ts"
    },
    {
      "exportName": "UserInvitationNotification",
      "filePath": "/app/code/frontend/src/services/EmailNotificationService.ts"
    },
    {
      "exportName": "_emailNotificationService",
      "filePath": "/app/code/frontend/src/services/EmailNotificationService.ts"
    },
    {
      "exportName": "EnhancedDataValidator",
      "filePath": "/app/code/frontend/src/services/EnhancedDataValidator.ts"
    },
    {
      "exportName": "LoggingConfig",
      "filePath": "/app/code/frontend/src/services/EnhancedLogger.ts"
    },
    {
      "exportName": "LogQueryOptions",
      "filePath": "/app/code/frontend/src/services/EnhancedLogger.ts"
    },
    {
      "exportName": "EnhancedLogger",
      "filePath": "/app/code/frontend/src/services/EnhancedLogger.ts"
    },
    {
      "exportName": "StatisticPoint",
      "filePath": "/app/code/frontend/src/services/EnhancedPropAnalysisService.ts"
    },
    {
      "exportName": "PropInsight",
      "filePath": "/app/code/frontend/src/services/EnhancedPropAnalysisService.ts"
    },
    {
      "exportName": "PlayerInfo",
      "filePath": "/app/code/frontend/src/services/EnhancedPropAnalysisService.ts"
    },
    {
      "exportName": "enhancedPropAnalysisService",
      "filePath": "/app/code/frontend/src/services/EnhancedPropAnalysisService.ts"
    },
    {
      "exportName": "APIResponse<T>",
      "filePath": "/app/code/frontend/src/services/EnhancedServiceClient.ts"
    },
    {
      "exportName": "SessionData",
      "filePath": "/app/code/frontend/src/services/EnhancedServiceClient.ts"
    },
    {
      "exportName": "PredictionRequest",
      "filePath": "/app/code/frontend/src/types/prediction.ts"
    },
    {
      "exportName": "PortfolioOptimization",
      "filePath": "/app/code/frontend/src/services/EnhancedServiceClient.ts"
    },
    {
      "exportName": "singleton",
      "filePath": "/app/code/frontend/src/services/EnhancedServiceClient.ts"
    },
    {
      "exportName": "HttpRequestOptions",
      "filePath": "/app/code/frontend/src/services/HttpClient.ts"
    },
    {
      "exportName": "ServiceHealth",
      "filePath": "/app/code/frontend/src/services/core/ServiceManager.ts"
    },
    {
      "exportName": "ServiceMetrics",
      "filePath": "/app/code/frontend/src/services/MasterServiceRegistry.ts"
    },
    {
      "exportName": "ServiceConfiguration",
      "filePath": "/app/code/frontend/src/services/MasterServiceRegistry.ts"
    },
    {
      "exportName": "_getService",
      "filePath": "/app/code/frontend/src/services/MasterServiceRegistry.ts"
    },
    {
      "exportName": "_services",
      "filePath": "/app/code/frontend/src/services/MasterServiceRegistry.ts"
    },
    {
      "exportName": "optimizedPropAnalysisService",
      "filePath": "/app/code/frontend/src/services/OptimizedPropAnalysisService.ts"
    },
    {
      "exportName": "RoleDefinition",
      "filePath": "/app/code/frontend/src/services/PermissionService.ts"
    },
    {
      "exportName": "PropOllamaResponse",
      "filePath": "/app/code/frontend/src/services/propOllamaService.ts"
    },
    {
      "exportName": "PrizePicksService",
      "filePath": "/app/code/frontend/src/services/PrizePicksService.ts"
    },
    {
      "exportName": "prizePicksService",
      "filePath": "/app/code/frontend/src/services/PrizePicksService.ts"
    },
    {
      "exportName": "AggregatedPropContext",
      "filePath": "/app/code/frontend/src/services/PropAnalysisAggregator.ts"
    },
    {
      "exportName": "_refereeService",
      "filePath": "/app/code/frontend/src/services/RefereeService.ts"
    },
    {
      "exportName": "generateRequestId",
      "filePath": "/app/code/frontend/src/services/RequestContextService.ts"
    },
    {
      "exportName": "timeRequest<T>",
      "filePath": "/app/code/frontend/src/services/RequestContextService.ts"
    },
    {
      "exportName": "SimpleFeaturedProp",
      "filePath": "/app/code/frontend/src/services/SimplePropsService.ts"
    },
    {
      "exportName": "ActivateSportResponse",
      "filePath": "/app/code/frontend/src/services/SportsService.ts"
    },
    {
      "exportName": "UserInvitation",
      "filePath": "/app/code/frontend/src/services/UserInvitationService.ts"
    },
    {
      "exportName": "InvitationRequest",
      "filePath": "/app/code/frontend/src/services/UserInvitationService.ts"
    },
    {
      "exportName": "InvitationResponse",
      "filePath": "/app/code/frontend/src/services/UserInvitationService.ts"
    },
    {
      "exportName": "_userInvitationService",
      "filePath": "/app/code/frontend/src/services/UserInvitationService.ts"
    },
    {
      "exportName": "ExplainRequest",
      "filePath": "/app/code/frontend/src/services/ai/OllamaService.ts"
    },
    {
      "exportName": "PlayerSummaryRequest",
      "filePath": "/app/code/frontend/src/services/ai/OllamaService.ts"
    },
    {
      "exportName": "AIResponse",
      "filePath": "/app/code/frontend/src/services/ai/OllamaService.ts"
    },
    {
      "exportName": "AIHealthStatus",
      "filePath": "/app/code/frontend/src/services/ai/OllamaService.ts"
    },
    {
      "exportName": "const",
      "filePath": "/app/code/frontend/src/services/analytics/AnalyticsService.ts"
    },
    {
      "exportName": "ModelPerformanceTracker",
      "filePath": "/app/code/frontend/src/services/analytics/ModelPerformanceTracker.ts"
    },
    {
      "exportName": "ShapExplainerService",
      "filePath": "/app/code/frontend/src/services/analytics/ShapExplainerService.ts"
    },
    {
      "exportName": "_mlService",
      "filePath": "/app/code/frontend/src/services/analytics/mlService.ts"
    },
    {
      "exportName": "_userPersonalizationService",
      "filePath": "/app/code/frontend/src/services/analytics/userPersonalizationService.ts"
    },
    {
      "exportName": "RiskAssessment",
      "filePath": "/app/code/frontend/src/types/enhancedBetting.ts"
    },
    {
      "exportName": "MarketAnalysis",
      "filePath": "/app/code/frontend/src/services/api/EnhancedApiService.ts"
    },
    {
      "exportName": "PredictionResponse",
      "filePath": "/app/code/frontend/src/types/prediction.ts"
    },
    {
      "exportName": "ArbitrageOpportunity",
      "filePath": "/app/code/frontend/src/types/enhancedBetting.ts"
    },
    {
      "exportName": "Transaction",
      "filePath": "/app/code/frontend/src/services/api/EnhancedApiService.ts"
    },
    {
      "exportName": "ActiveBet",
      "filePath": "/app/code/frontend/src/services/api/EnhancedApiService.ts"
    },
    {
      "exportName": "_apiService",
      "filePath": "/app/code/frontend/src/services/api/EnhancedApiService.ts"
    },
    {
      "exportName": "ProductionApiService",
      "filePath": "/app/code/frontend/src/services/api/ProductionApiService.ts"
    },
    {
      "exportName": "_productionApiService",
      "filePath": "/app/code/frontend/src/services/api/ProductionApiService.ts"
    },
    {
      "exportName": "_api",
      "filePath": "/app/code/frontend/src/utils/api_old.ts"
    },
    {
      "exportName": "ApiResponse<T>",
      "filePath": "/app/code/frontend/src/types/analytics.ts"
    },
    {
      "exportName": "ApiRequestConfig",
      "filePath": "/app/code/frontend/src/services/api/client.ts"
    },
    {
      "exportName": "_get",
      "filePath": "/app/code/frontend/src/services/api/client.ts"
    },
    {
      "exportName": "_post",
      "filePath": "/app/code/frontend/src/services/api/client.ts"
    },
    {
      "exportName": "LineupSubmission",
      "filePath": "/app/code/frontend/src/services/api/index.ts"
    },
    {
      "exportName": "_authService",
      "filePath": "/app/code/frontend/src/services/authService.ts"
    },
    {
      "exportName": "BetPlacement",
      "filePath": "/app/code/frontend/src/services/betting/BettingService.ts"
    },
    {
      "exportName": "KellyCriterion",
      "filePath": "/app/code/frontend/src/services/betting/BettingService.ts"
    },
    {
      "exportName": "PortfolioStats",
      "filePath": "/app/code/frontend/src/services/betting/BettingService.ts"
    },
    {
      "exportName": "PropOpportunity",
      "filePath": "/app/code/frontend/src/services/cheatsheetsService.ts"
    },
    {
      "exportName": "CheatsheetFilters",
      "filePath": "/app/code/frontend/src/services/cheatsheetsService.ts"
    },
    {
      "exportName": "OpportunitiesResponse",
      "filePath": "/app/code/frontend/src/services/cheatsheetsService.ts"
    },
    {
      "exportName": "CSV')",
      "filePath": "/app/code/frontend/src/services/cheatsheetsService.ts"
    },
    {
      "exportName": "_isFeatureEnabled",
      "filePath": "/app/code/frontend/src/services/configService.ts"
    },
    {
      "exportName": "_getAllFeatures",
      "filePath": "/app/code/frontend/src/services/configService.ts"
    },
    {
      "exportName": "_configService",
      "filePath": "/app/code/frontend/src/services/configService.ts"
    },
    {
      "exportName": "PlayerData",
      "filePath": "/app/code/frontend/src/services/data/PlayerDataService.ts"
    },
    {
      "exportName": "InjurySearchFilters",
      "filePath": "/app/code/frontend/src/services/injuryService.ts"
    },
    {
      "exportName": "OptimizationConstraints",
      "filePath": "/app/code/frontend/src/services/lineupService.ts"
    },
    {
      "exportName": "ModelPerformance",
      "filePath": "/app/code/frontend/src/types/prediction.ts"
    },
    {
      "exportName": "SHAPAnalysis",
      "filePath": "/app/code/frontend/src/services/ml/MLService.ts"
    },
    {
      "exportName": "ParticleSwarm",
      "filePath": "/app/code/frontend/src/services/ml/optimization/ParticleSwarm.ts"
    },
    {
      "exportName": "SimulatedAnnealing",
      "filePath": "/app/code/frontend/src/services/ml/optimization/SimulatedAnnealing.ts"
    },
    {
      "exportName": "ModelService",
      "filePath": "/app/code/frontend/src/services/ml/service/ModelService.ts"
    },
    {
      "exportName": "_useMLService",
      "filePath": "/app/code/frontend/src/services/ml_service.ts"
    },
    {
      "exportName": "MockPropProjection",
      "filePath": "/app/code/frontend/src/services/mockPropService.ts"
    },
    {
      "exportName": "getMockProjections",
      "filePath": "/app/code/frontend/src/services/mockPropService.ts"
    },
    {
      "exportName": "getStatsByPosition",
      "filePath": "/app/code/frontend/src/services/mockPropService.ts"
    },
    {
      "exportName": "getTeamsByLeague",
      "filePath": "/app/code/frontend/src/services/mockPropService.ts"
    },
    {
      "exportName": "NotificationType",
      "filePath": "/app/code/frontend/src/services/unified/UnifiedNotificationService.ts"
    },
    {
      "exportName": "NotificationData",
      "filePath": "/app/code/frontend/src/services/notification.d.ts"
    },
    {
      "exportName": "useOptimizedSportsData",
      "filePath": "/app/code/frontend/src/services/optimized/OptimizedSportsDataService.ts"
    },
    {
      "exportName": "_affiliateService",
      "filePath": "/app/code/frontend/src/services/partner/AffiliateService.ts"
    },
    {
      "exportName": "PredictionIntegrationService",
      "filePath": "/app/code/frontend/src/services/prediction/PredictionIntegrationService.ts"
    },
    {
      "exportName": "_predictionCache",
      "filePath": "/app/code/frontend/src/services/predictionCache.ts"
    },
    {
      "exportName": "_StorageUtils",
      "filePath": "/app/code/frontend/src/services/predictionCache.ts"
    },
    {
      "exportName": "PropOllamaChatMessage",
      "filePath": "/app/code/frontend/src/services/propOllamaService.ts"
    },
    {
      "exportName": "ScraperHealth",
      "filePath": "/app/code/frontend/src/services/propOllamaService.ts"
    },
    {
      "exportName": "AnalysisRequest",
      "filePath": "/app/code/frontend/src/services/realTimeAnalysisService.ts"
    },
    {
      "exportName": "_realTimeAnalysisService",
      "filePath": "/app/code/frontend/src/services/realTimeAnalysisService.ts"
    },
    {
      "exportName": "ModelInfo",
      "filePath": "/app/code/frontend/src/services/realTimePredictionService.ts"
    },
    {
      "exportName": "_realTimePredictionService",
      "filePath": "/app/code/frontend/src/services/realTimePredictionService.ts"
    },
    {
      "exportName": "TrendingTopic",
      "filePath": "/app/code/frontend/src/services/trendingSuggestionsService.ts"
    },
    {
      "exportName": "ApiServiceConfig",
      "filePath": "/app/code/frontend/src/services/unified/ApiService.d.ts"
    },
    {
      "exportName": "ServiceError",
      "filePath": "/app/code/frontend/src/services/unified/BaseService.ts"
    },
    {
      "exportName": "EnhancedPredictionRequest",
      "filePath": "/app/code/frontend/src/services/unified/EnhancedBackendApiService.ts"
    },
    {
      "exportName": "EnhancedPredictionResponse",
      "filePath": "/app/code/frontend/src/services/unified/EnhancedBackendApiService.ts"
    },
    {
      "exportName": "FeatureEngineeringRequest",
      "filePath": "/app/code/frontend/src/services/unified/EnhancedBackendApiService.ts"
    },
    {
      "exportName": "FeatureEngineeringResponse",
      "filePath": "/app/code/frontend/src/services/unified/EnhancedBackendApiService.ts"
    },
    {
      "exportName": "RiskAssessmentRequest",
      "filePath": "/app/code/frontend/src/services/unified/EnhancedBackendApiService.ts"
    },
    {
      "exportName": "RiskAssessmentResponse",
      "filePath": "/app/code/frontend/src/services/unified/EnhancedBackendApiService.ts"
    },
    {
      "exportName": "MathematicalAnalysisRequest",
      "filePath": "/app/code/frontend/src/services/unified/EnhancedBackendApiService.ts"
    },
    {
      "exportName": "MathematicalAnalysisResponse",
      "filePath": "/app/code/frontend/src/services/unified/EnhancedBackendApiService.ts"
    },
    {
      "exportName": "ModelStatusResponse",
      "filePath": "/app/code/frontend/src/services/unified/EnhancedBackendApiService.ts"
    },
    {
      "exportName": "SportsNewsArticle",
      "filePath": "/app/code/frontend/src/services/unified/ExternalApiService.ts"
    },
    {
      "exportName": "ExternalApiService",
      "filePath": "/app/code/frontend/src/services/unified/ExternalApiService.ts"
    },
    {
      "exportName": "_externalApiService",
      "filePath": "/app/code/frontend/src/services/unified/ExternalApiService.ts"
    },
    {
      "exportName": "mockProps:",
      "filePath": "/app/code/frontend/src/services/unified/FeaturedPropsService.mock.ts"
    },
    {
      "exportName": "subscribeToPropsUpdates",
      "filePath": "/app/code/frontend/src/services/unified/FeaturedPropsService.ts"
    },
    {
      "exportName": "getDataManagerMetrics",
      "filePath": "/app/code/frontend/src/services/unified/FeaturedPropsService.ts"
    },
    {
      "exportName": "clearPropsCache",
      "filePath": "/app/code/frontend/src/services/unified/FeaturedPropsService.ts"
    },
    {
      "exportName": "BetResult",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "RecentActivity",
      "filePath": "/app/code/frontend/src/services/unified/UnifiedAnalyticsService.ts"
    },
    {
      "exportName": "BackupConfig",
      "filePath": "/app/code/frontend/src/services/unified/UnifiedBackupService.ts"
    },
    {
      "exportName": "BackupResult",
      "filePath": "/app/code/frontend/src/services/unified/UnifiedBackupService.ts"
    },
    {
      "exportName": "BetRecommendation",
      "filePath": "/app/code/frontend/src/services/unified/UnifiedBettingAnalyticsStub.ts"
    },
    {
      "exportName": "UnifiedBettingAnalyticsStub",
      "filePath": "/app/code/frontend/src/services/unified/UnifiedBettingAnalyticsStub.ts"
    },
    {
      "exportName": "_unifiedCache",
      "filePath": "/app/code/frontend/src/services/unified/UnifiedCache.ts"
    },
    {
      "exportName": "_unifiedConfig",
      "filePath": "/app/code/frontend/src/services/unified/UnifiedConfig.ts"
    },
    {
      "exportName": "UnifiedPredictionRequest",
      "filePath": "/app/code/frontend/src/services/unified/UnifiedEnhancedPredictionService.ts"
    },
    {
      "exportName": "UnifiedPredictionResponse",
      "filePath": "/app/code/frontend/src/services/unified/UnifiedEnhancedPredictionService.ts"
    },
    {
      "exportName": "SystemHealthMetrics",
      "filePath": "/app/code/frontend/src/services/unified/UnifiedEnhancedPredictionService.ts"
    },
    {
      "exportName": "ErrorDetails",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "_unifiedLogger",
      "filePath": "/app/code/frontend/src/services/unified/UnifiedLogger.ts"
    },
    {
      "exportName": "Notification",
      "filePath": "/app/code/frontend/src/services/unified/UnifiedNotificationService.ts"
    },
    {
      "exportName": "NotificationOptions",
      "filePath": "/app/code/frontend/src/services/unified/UnifiedNotificationService.ts"
    },
    {
      "exportName": "RecoveryConfig",
      "filePath": "/app/code/frontend/src/services/unified/UnifiedRecoveryService.ts"
    },
    {
      "exportName": "RecoveryResult",
      "filePath": "/app/code/frontend/src/services/unified/UnifiedRecoveryService.ts"
    },
    {
      "exportName": "UnifiedRecoveryService",
      "filePath": "/app/code/frontend/src/services/unified/UnifiedRecoveryService.ts"
    },
    {
      "exportName": "unifiedApiService",
      "filePath": "/app/code/frontend/src/services/unifiedApiService.ts"
    },
    {
      "exportName": "WeatherService",
      "filePath": "/app/code/frontend/src/services/weatherModern.ts"
    },
    {
      "exportName": "_weatherService",
      "filePath": "/app/code/frontend/src/services/weatherModern.ts"
    },
    {
      "exportName": "withRequestCorrelation<T",
      "filePath": "/app/code/frontend/src/services/withRequestCorrelation.ts"
    },
    {
      "exportName": "from",
      "filePath": "/app/code/frontend/src/types/prizePicks.ts"
    },
    {
      "exportName": "point",
      "filePath": "/app/code/frontend/src/utils/index.ts"
    },
    {
      "exportName": "useAppStore",
      "filePath": "/app/code/frontend/src/store/index.ts"
    },
    {
      "exportName": "usePredictionStore",
      "filePath": "/app/code/frontend/src/store/index.ts"
    },
    {
      "exportName": "BetEntry",
      "filePath": "/app/code/frontend/src/store/slices/betHistorySlice.ts"
    },
    {
      "exportName": "UserHistory",
      "filePath": "/app/code/frontend/src/store/slices/betHistorySlice.ts"
    },
    {
      "exportName": "ModelEntry",
      "filePath": "/app/code/frontend/src/store/slices/betHistorySlice.ts"
    },
    {
      "exportName": "ModelHistory",
      "filePath": "/app/code/frontend/src/store/slices/betHistorySlice.ts"
    },
    {
      "exportName": "BetHistoryState",
      "filePath": "/app/code/frontend/src/store/slices/betHistorySlice.ts"
    },
    {
      "exportName": "_useBetHistoryStore",
      "filePath": "/app/code/frontend/src/store/slices/betHistorySlice.ts"
    },
    {
      "exportName": "useUnifiedStore",
      "filePath": "/app/code/frontend/src/store/unified/UnifiedStoreManager.ts"
    },
    {
      "exportName": "ErrorStoreState",
      "filePath": "/app/code/frontend/src/stores/errorStore.ts"
    },
    {
      "exportName": "everything",
      "filePath": "/app/code/frontend/src/utils/index.ts"
    },
    {
      "exportName": "export",
      "filePath": "/app/code/frontend/src/stores/index.ts"
    },
    {
      "exportName": "_useThemeListener",
      "filePath": "/app/code/frontend/src/theme/ThemeProvider.tsx"
    },
    {
      "exportName": "_withTheme",
      "filePath": "/app/code/frontend/src/theme/ThemeProvider.tsx"
    },
    {
      "exportName": "ThemeColors",
      "filePath": "/app/code/frontend/src/theme/index.ts"
    },
    {
      "exportName": "_THEMES:",
      "filePath": "/app/code/frontend/src/theme/index.ts"
    },
    {
      "exportName": "_getThemesByCategory",
      "filePath": "/app/code/frontend/src/theme/index.ts"
    },
    {
      "exportName": "_getDarkThemes",
      "filePath": "/app/code/frontend/src/theme/index.ts"
    },
    {
      "exportName": "_getLightThemes",
      "filePath": "/app/code/frontend/src/theme/index.ts"
    },
    {
      "exportName": "_getAnimatedThemes",
      "filePath": "/app/code/frontend/src/theme/index.ts"
    },
    {
      "exportName": "_getGlassMorphismThemes",
      "filePath": "/app/code/frontend/src/theme/index.ts"
    },
    {
      "exportName": "_THEME_CATEGORIES",
      "filePath": "/app/code/frontend/src/theme/index.ts"
    },
    {
      "exportName": "_getSystemTheme",
      "filePath": "/app/code/frontend/src/theme/index.ts"
    },
    {
      "exportName": "ValidationResult<T>",
      "filePath": "/app/code/frontend/src/types/DataValidation.ts"
    },
    {
      "exportName": "ValidationRule",
      "filePath": "/app/code/frontend/src/types/DataValidation.ts"
    },
    {
      "exportName": "MIN_QUALITY_SCORE",
      "filePath": "/app/code/frontend/src/types/DataValidation.ts"
    },
    {
      "exportName": "MAX_QUALITY_SCORE",
      "filePath": "/app/code/frontend/src/types/DataValidation.ts"
    },
    {
      "exportName": "OPTIONAL_PROP_FIELDS",
      "filePath": "/app/code/frontend/src/types/DataValidation.ts"
    },
    {
      "exportName": "FeatureImportance",
      "filePath": "/app/code/frontend/src/types/prediction.ts"
    },
    {
      "exportName": "ShapAnalysisResult",
      "filePath": "/app/code/frontend/src/types/analytics.ts"
    },
    {
      "exportName": "PerformanceTrend",
      "filePath": "/app/code/frontend/src/types/analytics.ts"
    },
    {
      "exportName": "VotingStrategy",
      "filePath": "/app/code/frontend/src/types/analytics.ts"
    },
    {
      "exportName": "LoadingState",
      "filePath": "/app/code/frontend/src/types/global.ts"
    },
    {
      "exportName": "AuthUser",
      "filePath": "/app/code/frontend/src/types/auth.ts"
    },
    {
      "exportName": "BettingState",
      "filePath": "/app/code/frontend/src/types/betting.ts"
    },
    {
      "exportName": "RootState",
      "filePath": "/app/code/frontend/src/types/betting.ts"
    },
    {
      "exportName": "MarketState",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "BetType",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "AlertMetadata",
      "filePath": "/app/code/frontend/src/types/common.ts"
    },
    {
      "exportName": "ShapVector",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "GameContext",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "WeatherData",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "TimestampedData",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "MLInsight",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "OddsUpdate",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "WSMessage",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "WebSocketConfig",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "SystemConfig",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "MetricData",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "MetricType",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "AnalysisResult",
      "filePath": "/app/code/frontend/src/utils/PredictionEngine.ts"
    },
    {
      "exportName": "ModelState",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "PredictionState",
      "filePath": "/app/code/frontend/src/types/prediction.ts"
    },
    {
      "exportName": "State",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "Preferences",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "HistoricalTrend",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "MarketSignal",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "Analysis",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "RiskToleranceEnum",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "Projection",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "PredictionUpdate",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "DataPoint",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "AnalyticsReport",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "EventMap",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "StreamState",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "DataStream<T",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "DataState",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "AppConfig",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "ConfigUpdate",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "FeatureFlag",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "ExperimentConfig",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "UserSegment",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "ThresholdConfig",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "StrategyConfig",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "BettingStrategy",
      "filePath": "/app/code/frontend/src/utils/UnifiedBettingAnalytics.d.ts"
    },
    {
      "exportName": "LineMovement",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "RiskConfig",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "ResourceUsage",
      "filePath": "/app/code/frontend/src/types/core.ts"
    },
    {
      "exportName": "ElectronAPI",
      "filePath": "/app/code/frontend/src/types/electron.d.ts"
    },
    {
      "exportName": "NotificationAPI",
      "filePath": "/app/code/frontend/src/types/electron.d.ts"
    },
    {
      "exportName": "StoreAPI",
      "filePath": "/app/code/frontend/src/types/electron.d.ts"
    },
    {
      "exportName": "SHAPExplanation",
      "filePath": "/app/code/frontend/src/types/enhancedBetting.ts"
    },
    {
      "exportName": "LiveGameContext",
      "filePath": "/app/code/frontend/src/types/enhancedBetting.ts"
    },
    {
      "exportName": "MultiPlatformOpportunity",
      "filePath": "/app/code/frontend/src/types/enhancedBetting.ts"
    },
    {
      "exportName": "AIInsightsPanelProps",
      "filePath": "/app/code/frontend/src/types/enhancedBetting.ts"
    },
    {
      "exportName": "PortfolioOptimizerProps",
      "filePath": "/app/code/frontend/src/types/enhancedBetting.ts"
    },
    {
      "exportName": "SmartStackingPanelProps",
      "filePath": "/app/code/frontend/src/types/enhancedBetting.ts"
    },
    {
      "exportName": "LiveContextOverlayProps",
      "filePath": "/app/code/frontend/src/types/enhancedBetting.ts"
    },
    {
      "exportName": "UnifiedApiResponse<T>",
      "filePath": "/app/code/frontend/src/types/enhancedBetting.ts"
    },
    {
      "exportName": "PlatformConfig",
      "filePath": "/app/code/frontend/src/types/enhancedBetting.ts"
    },
    {
      "exportName": "SportsSport",
      "filePath": "/app/code/frontend/src/types/global.ts"
    },
    {
      "exportName": "SportsTeam",
      "filePath": "/app/code/frontend/src/types/global.ts"
    },
    {
      "exportName": "SportsPlayer",
      "filePath": "/app/code/frontend/src/types/global.ts"
    },
    {
      "exportName": "BettingAnalysis",
      "filePath": "/app/code/frontend/src/utils/UnifiedBettingAnalytics.d.ts"
    },
    {
      "exportName": "FilterOptions",
      "filePath": "/app/code/frontend/src/types/global.ts"
    },
    {
      "exportName": "SHAPValue",
      "filePath": "/app/code/frontend/src/types/global.ts"
    },
    {
      "exportName": "ModelExplanation",
      "filePath": "/app/code/frontend/src/types/global.ts"
    },
    {
      "exportName": "DailyFantasyRequest",
      "filePath": "/app/code/frontend/src/types/global.ts"
    },
    {
      "exportName": "DailyFantasyPlayer",
      "filePath": "/app/code/frontend/src/types/global.ts"
    },
    {
      "exportName": "SentimentEnhancedInput",
      "filePath": "/app/code/frontend/src/types/global.ts"
    },
    {
      "exportName": "DeepPartial<T>",
      "filePath": "/app/code/frontend/src/types/global.ts"
    },
    {
      "exportName": "NonEmptyArray<T>",
      "filePath": "/app/code/frontend/src/types/global.ts"
    },
    {
      "exportName": "AsyncResult<T>",
      "filePath": "/app/code/frontend/src/types/global.ts"
    },
    {
      "exportName": "PredictionError",
      "filePath": "/app/code/frontend/src/types/prediction.ts"
    },
    {
      "exportName": "Feature",
      "filePath": "/app/code/frontend/src/utils/FeatureFlags.ts"
    },
    {
      "exportName": "PredictionConfig",
      "filePath": "/app/code/frontend/src/types/prediction.ts"
    },
    {
      "exportName": "ModelWeights",
      "filePath": "/app/code/frontend/src/utils/PredictionEngine.ts"
    },
    {
      "exportName": "PredictionValidation",
      "filePath": "/app/code/frontend/src/types/prediction.ts"
    },
    {
      "exportName": "PredictionCache",
      "filePath": "/app/code/frontend/src/types/prediction.ts"
    },
    {
      "exportName": "PredictionSubscription",
      "filePath": "/app/code/frontend/src/types/prediction.ts"
    },
    {
      "exportName": "PredictionModel",
      "filePath": "/app/code/frontend/src/utils/UnifiedBettingAnalytics.d.ts"
    },
    {
      "exportName": "PredictionExplanation",
      "filePath": "/app/code/frontend/src/types/prediction.ts"
    },
    {
      "exportName": "MLPrediction",
      "filePath": "/app/code/frontend/src/types/prizePicksUnified.ts"
    },
    {
      "exportName": "ShapValues",
      "filePath": "/app/code/frontend/src/types/prizePicksUnified.ts"
    },
    {
      "exportName": "LineupEntry",
      "filePath": "/app/code/frontend/src/types/prizePicksUnified.ts"
    },
    {
      "exportName": "OptimizedLineup",
      "filePath": "/app/code/frontend/src/types/prizePicksUnified.ts"
    },
    {
      "exportName": "PrizePicksAPIResponse<T>",
      "filePath": "/app/code/frontend/src/types/prizePicksUnified.ts"
    },
    {
      "exportName": "PrizePicksProUnifiedProps",
      "filePath": "/app/code/frontend/src/types/prizePicksUnified.ts"
    },
    {
      "exportName": "UsePrizePicksPropsResult",
      "filePath": "/app/code/frontend/src/types/prizePicksUnified.ts"
    },
    {
      "exportName": "PrizePicksFilters",
      "filePath": "/app/code/frontend/src/types/prizePicksUnified.ts"
    },
    {
      "exportName": "SavedLineup",
      "filePath": "/app/code/frontend/src/types/prizePicksUnified.ts"
    },
    {
      "exportName": "PrizePicksEntry",
      "filePath": "/app/code/frontend/src/types/prizePicksUnified.ts"
    },
    {
      "exportName": "isPrizePicksProjection",
      "filePath": "/app/code/frontend/src/types/prizePicksUnified.ts"
    },
    {
      "exportName": "isLegacyPlayerProp",
      "filePath": "/app/code/frontend/src/types/prizePicksUnified.ts"
    },
    {
      "exportName": "transformToPlayerProp",
      "filePath": "/app/code/frontend/src/types/prizePicksUnified.ts"
    },
    {
      "exportName": "DataSource<T",
      "filePath": "/app/code/frontend/src/utils/PredictionEngine.ts"
    },
    {
      "exportName": "UpdateModal:",
      "filePath": "/app/code/frontend/src/update/UpdateModal.tsx"
    },
    {
      "exportName": "APITestSuite",
      "filePath": "/app/code/frontend/src/utils/APITestSuite.ts"
    },
    {
      "exportName": "AnalysisContext",
      "filePath": "/app/code/frontend/src/utils/AnalysisFramework.ts"
    },
    {
      "exportName": "AnalysisPlugin<TInput,",
      "filePath": "/app/code/frontend/src/utils/AnalysisFramework.ts"
    },
    {
      "exportName": "AnalysisRegistry",
      "filePath": "/app/code/frontend/src/utils/AnalysisFramework.ts"
    },
    {
      "exportName": "Analyzer<T",
      "filePath": "/app/code/frontend/src/utils/Analyzer.ts"
    },
    {
      "exportName": "DataSourceMetrics",
      "filePath": "/app/code/frontend/src/utils/DataSource.ts"
    },
    {
      "exportName": "DataIntegrationHub",
      "filePath": "/app/code/frontend/src/utils/DataIntegrationHub.ts"
    },
    {
      "exportName": "PipelineMetrics",
      "filePath": "/app/code/frontend/src/utils/PredictionEngine.ts"
    },
    {
      "exportName": "PipelineStage<T,",
      "filePath": "/app/code/frontend/src/utils/DataPipeline.ts"
    },
    {
      "exportName": "DataSink<T>",
      "filePath": "/app/code/frontend/src/utils/DataPipeline.ts"
    },
    {
      "exportName": "DataCache<T>",
      "filePath": "/app/code/frontend/src/utils/DataPipeline.ts"
    },
    {
      "exportName": "StreamingDataPipeline<T,",
      "filePath": "/app/code/frontend/src/utils/DataPipeline.ts"
    },
    {
      "exportName": "DataSource<T>",
      "filePath": "/app/code/frontend/src/utils/DataSource.ts"
    },
    {
      "exportName": "DataSourceConfig",
      "filePath": "/app/code/frontend/src/utils/DataSource.ts"
    },
    {
      "exportName": "FeatureMetadata",
      "filePath": "/app/code/frontend/src/utils/FeatureComposition.ts"
    },
    {
      "exportName": "FeatureContext",
      "filePath": "/app/code/frontend/src/utils/FeatureComposition.ts"
    },
    {
      "exportName": "FeatureComponent<T,",
      "filePath": "/app/code/frontend/src/utils/FeatureComposition.ts"
    },
    {
      "exportName": "ComposableFeature<T,",
      "filePath": "/app/code/frontend/src/utils/FeatureComposition.ts"
    },
    {
      "exportName": "FeatureRegistry",
      "filePath": "/app/code/frontend/src/utils/FeatureComposition.ts"
    },
    {
      "exportName": "Experiment",
      "filePath": "/app/code/frontend/src/utils/FeatureFlags.ts"
    },
    {
      "exportName": "UserContext",
      "filePath": "/app/code/frontend/src/utils/FeatureFlags.ts"
    },
    {
      "exportName": "MarketData",
      "filePath": "/app/code/frontend/src/utils/PredictionEngine.ts"
    },
    {
      "exportName": "CorrelationData",
      "filePath": "/app/code/frontend/src/utils/PredictionEngine.ts"
    },
    {
      "exportName": "SentimentData",
      "filePath": "/app/code/frontend/src/utils/PredictionEngine.ts"
    },
    {
      "exportName": "DataSink<T",
      "filePath": "/app/code/frontend/src/utils/PredictionEngine.ts"
    },
    {
      "exportName": "PredictionEngineConfig",
      "filePath": "/app/code/frontend/src/utils/PredictionEngine.ts"
    },
    {
      "exportName": "PredictionFeedback",
      "filePath": "/app/code/frontend/src/utils/PredictionEngine.ts"
    },
    {
      "exportName": "UnifiedDataStream<T>",
      "filePath": "/app/code/frontend/src/utils/PredictionEngine.ts"
    },
    {
      "exportName": "ProjectionPlugin",
      "filePath": "/app/code/frontend/src/utils/ProjectionBettingStrategy.d.ts"
    },
    {
      "exportName": "ExtendedIntegratedData",
      "filePath": "/app/code/frontend/src/utils/ProjectionBettingStrategy.ts"
    },
    {
      "exportName": "StrategyContext",
      "filePath": "/app/code/frontend/src/utils/StrategyComposition.ts"
    },
    {
      "exportName": "StrategyComponent<T,",
      "filePath": "/app/code/frontend/src/utils/StrategyComposition.ts"
    },
    {
      "exportName": "StrategyResult<T>",
      "filePath": "/app/code/frontend/src/utils/StrategyComposition.ts"
    },
    {
      "exportName": "StrategyRegistry",
      "filePath": "/app/code/frontend/src/utils/StrategyComposition.ts"
    },
    {
      "exportName": "ComposableStrategy<T,",
      "filePath": "/app/code/frontend/src/utils/StrategyComposition.ts"
    },
    {
      "exportName": "StrategyEngine",
      "filePath": "/app/code/frontend/src/utils/StrategyEngine.ts"
    },
    {
      "exportName": "AnalyticsEvent",
      "filePath": "/app/code/frontend/src/utils/UnifiedAnalytics.d.ts"
    },
    {
      "exportName": "UnifiedBettingAnalytics",
      "filePath": "/app/code/frontend/src/utils/UnifiedBettingAnalytics.ts"
    },
    {
      "exportName": "_handleAISearch",
      "filePath": "/app/code/frontend/src/utils/aiSearch.ts"
    },
    {
      "exportName": "_handleSmartSearch",
      "filePath": "/app/code/frontend/src/utils/aiSearch.ts"
    },
    {
      "exportName": "BackendHealthInfo",
      "filePath": "/app/code/frontend/src/utils/backendHealth.ts"
    },
    {
      "exportName": "BackendHealthChecker",
      "filePath": "/app/code/frontend/src/utils/backendHealth.ts"
    },
    {
      "exportName": "_MIN_WIN_RATE",
      "filePath": "/app/code/frontend/src/utils/businessRules.ts"
    },
    {
      "exportName": "isTeamDiversified",
      "filePath": "/app/code/frontend/src/utils/businessRules.ts"
    },
    {
      "exportName": "getMultiplier",
      "filePath": "/app/code/frontend/src/utils/businessRules.ts"
    },
    {
      "exportName": "validateEntry",
      "filePath": "/app/code/frontend/src/utils/businessRules.ts"
    },
    {
      "exportName": "with",
      "filePath": "/app/code/frontend/src/utils/chartjs-safe.tsx"
    },
    {
      "exportName": "_LineChart",
      "filePath": "/app/code/frontend/src/utils/chartjs-safe.tsx"
    },
    {
      "exportName": "_BarChart",
      "filePath": "/app/code/frontend/src/utils/chartjs-safe.tsx"
    },
    {
      "exportName": "_DoughnutChart",
      "filePath": "/app/code/frontend/src/utils/chartjs-safe.tsx"
    },
    {
      "exportName": "_RadarChart",
      "filePath": "/app/code/frontend/src/utils/chartjs-safe.tsx"
    },
    {
      "exportName": "_ScatterChart",
      "filePath": "/app/code/frontend/src/utils/chartjs-safe.tsx"
    },
    {
      "exportName": "_Pie",
      "filePath": "/app/code/frontend/src/utils/chartjs-safe.tsx"
    },
    {
      "exportName": "_PieChart",
      "filePath": "/app/code/frontend/src/utils/chartjs-safe.tsx"
    },
    {
      "exportName": "_Bubble",
      "filePath": "/app/code/frontend/src/utils/chartjs-safe.tsx"
    },
    {
      "exportName": "_BubbleChart",
      "filePath": "/app/code/frontend/src/utils/chartjs-safe.tsx"
    },
    {
      "exportName": "_PolarArea",
      "filePath": "/app/code/frontend/src/utils/chartjs-safe.tsx"
    },
    {
      "exportName": "Chart.js",
      "filePath": "/app/code/frontend/src/utils/chartjs-safe.tsx"
    },
    {
      "exportName": "getStatusColor",
      "filePath": "/app/code/frontend/src/utils/colorUtils.ts"
    },
    {
      "exportName": "getRecommendationColor",
      "filePath": "/app/code/frontend/src/utils/colorUtils.ts"
    },
    {
      "exportName": "getConfidenceColor",
      "filePath": "/app/code/frontend/src/utils/colorUtils.ts"
    },
    {
      "exportName": "_APP_NAME",
      "filePath": "/app/code/frontend/src/utils/constants.ts"
    },
    {
      "exportName": "_MAX_PARLAY_LEGS",
      "filePath": "/app/code/frontend/src/utils/constants.ts"
    },
    {
      "exportName": "_API_TIMEOUT",
      "filePath": "/app/code/frontend/src/utils/constants.ts"
    },
    {
      "exportName": "getEnvVar",
      "filePath": "/app/code/frontend/src/utils/getEnvVar.ts"
    },
    {
      "exportName": "_sleep",
      "filePath": "/app/code/frontend/src/utils/helpers.ts"
    },
    {
      "exportName": "_generateUniqueId",
      "filePath": "/app/code/frontend/src/utils/helpers.ts"
    },
    {
      "exportName": "classNames",
      "filePath": "/app/code/frontend/src/utils/index.ts"
    },
    {
      "exportName": "formatters",
      "filePath": "/app/code/frontend/src/utils/index.ts"
    },
    {
      "exportName": "validators",
      "filePath": "/app/code/frontend/src/utils/index.ts"
    },
    {
      "exportName": "arrayUtils",
      "filePath": "/app/code/frontend/src/utils/index.ts"
    },
    {
      "exportName": "objectUtils",
      "filePath": "/app/code/frontend/src/utils/index.ts"
    },
    {
      "exportName": "stringUtils",
      "filePath": "/app/code/frontend/src/utils/index.ts"
    },
    {
      "exportName": "numberUtils",
      "filePath": "/app/code/frontend/src/utils/index.ts"
    },
    {
      "exportName": "dateUtils",
      "filePath": "/app/code/frontend/src/utils/index.ts"
    },
    {
      "exportName": "asyncUtils",
      "filePath": "/app/code/frontend/src/utils/index.ts"
    },
    {
      "exportName": "bettingUtils",
      "filePath": "/app/code/frontend/src/utils/index.ts"
    },
    {
      "exportName": "storageUtils",
      "filePath": "/app/code/frontend/src/utils/index.ts"
    },
    {
      "exportName": "createLazyComponent<T",
      "filePath": "/app/code/frontend/src/utils/lazyLoading.enhanced.tsx"
    },
    {
      "exportName": "preloadComponent",
      "filePath": "/app/code/frontend/src/utils/lazyLoading.tsx"
    },
    {
      "exportName": "createLazyRoute",
      "filePath": "/app/code/frontend/src/utils/lazyLoading.enhanced.tsx"
    },
    {
      "exportName": "createLazyInline",
      "filePath": "/app/code/frontend/src/utils/lazyLoading.enhanced.tsx"
    },
    {
      "exportName": "createLazyFeature",
      "filePath": "/app/code/frontend/src/utils/lazyLoading.enhanced.tsx"
    },
    {
      "exportName": "LazyComponents",
      "filePath": "/app/code/frontend/src/utils/lazyLoading.tsx"
    },
    {
      "exportName": "preloadCriticalComponents",
      "filePath": "/app/code/frontend/src/utils/lazyLoading.enhanced.tsx"
    },
    {
      "exportName": "preloadForRoute",
      "filePath": "/app/code/frontend/src/utils/lazyLoading.enhanced.tsx"
    },
    {
      "exportName": "useProgressiveEnhancement",
      "filePath": "/app/code/frontend/src/utils/lazyLoading.enhanced.tsx"
    },
    {
      "exportName": "addResourceHints",
      "filePath": "/app/code/frontend/src/utils/lazyLoading.enhanced.tsx"
    },
    {
      "exportName": "DefaultLoadingFallback:",
      "filePath": "/app/code/frontend/src/utils/lazyLoading.tsx"
    },
    {
      "exportName": "ComponentLoadingFallback:",
      "filePath": "/app/code/frontend/src/utils/lazyLoading.tsx"
    },
    {
      "exportName": "LazyLoadErrorFallback:",
      "filePath": "/app/code/frontend/src/utils/lazyLoading.tsx"
    },
    {
      "exportName": "usePreloadOnHover",
      "filePath": "/app/code/frontend/src/utils/lazyLoading.tsx"
    },
    {
      "exportName": "performanceMonitor",
      "filePath": "/app/code/frontend/src/utils/performance.ts"
    },
    {
      "exportName": "withPerformanceTracking",
      "filePath": "/app/code/frontend/src/utils/performance.ts"
    },
    {
      "exportName": "getSecurityHeaders",
      "filePath": "/app/code/frontend/src/utils/security.ts"
    },
    {
      "exportName": "FunctionalityTestResult",
      "filePath": "/app/code/frontend/src/utils/testFunctionality.ts"
    },
    {
      "exportName": "_testCoreFunctionality",
      "filePath": "/app/code/frontend/src/utils/testFunctionality.ts"
    },
    {
      "exportName": "_logFunctionalityTest",
      "filePath": "/app/code/frontend/src/utils/testFunctionality.ts"
    },
    {
      "exportName": "ThemeMode",
      "filePath": "/app/code/frontend/src/utils/theme.ts"
    },
    {
      "exportName": "getThemeMode",
      "filePath": "/app/code/frontend/src/utils/theme.ts"
    },
    {
      "exportName": "useThemeMode",
      "filePath": "/app/code/frontend/src/utils/theme.ts"
    },
    {
      "exportName": "getThemeClasses",
      "filePath": "/app/code/frontend/src/utils/theme.ts"
    },
    {
      "exportName": "DEFAULT_SETTINGS:",
      "filePath": "/app/code/frontend/src/utils/userSettings.ts"
    },
    {
      "exportName": "_betSchema",
      "filePath": "/app/code/frontend/src/validation/schemas.ts"
    },
    {
      "exportName": "_userSchema",
      "filePath": "/app/code/frontend/src/validation/schemas.ts"
    },
    {
      "exportName": "_predictionSchema",
      "filePath": "/app/code/frontend/src/validation/schemas.ts"
    },
    {
      "exportName": "_marketSchema",
      "filePath": "/app/code/frontend/src/validation/schemas.ts"
    },
    {
      "exportName": "_eventSchema",
      "filePath": "/app/code/frontend/src/validation/schemas.ts"
    },
    {
      "exportName": "_validateRequest",
      "filePath": "/app/code/frontend/src/validation/schemas.ts"
    },
    {
      "exportName": "initWebVitals",
      "filePath": "/app/code/frontend/src/webVitals.ts"
    },
    {
      "exportName": "zod",
      "filePath": "/app/code/frontend/src/zod.ts"
    }
  ],
  "recommendations": [
    {
      "type": "Barrel Imports",
      "priority": "HIGH",
      "issue": "10 barrel imports with >10 named imports detected",
      "impact": "May prevent effective tree shaking",
      "solution": "Replace barrel imports with direct imports from specific modules",
      "files": [
        "react",
        "@/types.ts",
        "@/types/betting.ts",
        "lucide-react",
        "recharts",
        "../../types/analytics",
        "../shared/PropOllamaTypes",
        "chart.js",
        "@/types/betting",
        "../types/DataValidation"
      ]
    },
    {
      "type": "Large Dependencies",
      "priority": "MEDIUM",
      "issue": "8 dependencies with heavy usage patterns",
      "impact": "Large bundle size from over-imported dependencies",
      "solution": "Consider using smaller alternatives or more selective imports",
      "details": [
        {
          "package": "react",
          "namedImportsCount": 22,
          "filesUsed": 344
        },
        {
          "package": "@",
          "namedImportsCount": 134,
          "filesUsed": 127
        },
        {
          "package": "lucide-react",
          "namedImportsCount": 126,
          "filesUsed": 87
        },
        {
          "package": "@testing-library",
          "namedImportsCount": 7,
          "filesUsed": 35
        },
        {
          "package": "@jest",
          "namedImportsCount": 6,
          "filesUsed": 23
        }
      ]
    },
    {
      "type": "Unused Exports",
      "priority": "LOW",
      "issue": "853 potentially unused exports found",
      "impact": "Dead code that could be removed",
      "solution": "Remove unused exports or verify they are not used externally",
      "count": 853
    },
    {
      "type": "Namespace Imports",
      "priority": "MEDIUM",
      "issue": "4 packages imported with namespace imports",
      "impact": "Prevents tree shaking of unused functions",
      "solution": "Replace namespace imports with named imports where possible",
      "packages": [
        "react",
        "react.ts",
        "@radix-ui",
        "@tensorflow"
      ]
    }
  ]
}