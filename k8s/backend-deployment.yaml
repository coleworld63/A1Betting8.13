# A1Betting Kubernetes Deployment
# Phase 3: Production-ready Kubernetes manifests

apiVersion: apps/v1
kind: Deployment
metadata:
  name: a1betting-backend
  labels:
    app: a1betting-backend
    version: phase3
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: a1betting-backend
  template:
    metadata:
      labels:
        app: a1betting-backend
        version: phase3
        tier: backend
    spec:
      containers:
        - name: a1betting-backend
          image: a1betting/backend:latest
          ports:
            - containerPort: 8000
              name: http
          env:
            - name: ENVIRONMENT
              value: "production"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: a1betting-secrets
                  key: database-url
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: a1betting-secrets
                  key: redis-url
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: a1betting-secrets
                  key: jwt-secret
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          volumeMounts:
            - name: logs
              mountPath: /app/backend/logs
      volumes:
        - name: logs
          emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      tolerations:
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 30
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: a1betting-backend-service
  labels:
    app: a1betting-backend
spec:
  selector:
    app: a1betting-backend
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: a1betting-backend-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - api.a1betting.com
      secretName: a1betting-tls
  rules:
    - host: api.a1betting.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: a1betting-backend-service
                port:
                  number: 8000

---
apiVersion: v1
kind: Secret
metadata:
  name: a1betting-secrets
type: Opaque
stringData:
  database-url: "postgresql://user:password@postgres:5432/a1betting"
  redis-url: "redis://redis:6379/0"
  jwt-secret: "your-secure-jwt-secret-key-here"

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: a1betting-backend-pdb
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: a1betting-backend

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: a1betting-backend-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: a1betting-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
