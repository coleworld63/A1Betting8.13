[
  {
    "name": "LogEntry",
    "type": "class",
    "file": "backend/admin_api.py",
    "signature": "class LogEntry(BaseModel):",
    "docstring": ""
  },
  {
    "name": "LogEntry",
    "type": "class",
    "file": "backend/admin_api.py",
    "signature": "class LogEntry(BaseModel):",
    "docstring": ""
  },
  {
    "name": "User",
    "type": "class",
    "file": "backend/admin_api.py",
    "signature": "class User(BaseModel):",
    "docstring": ""
  },
  {
    "name": "User",
    "type": "class",
    "file": "backend/admin_api.py",
    "signature": "class User(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/admin/logs\", response_model=List[LogEntry])",
    "type": "endpoint",
    "file": "backend/admin_api.py",
    "signature": "@router.get(\"/admin/logs\", response_model=List[LogEntry])",
    "docstring": ""
  },
  {
    "name": "get_logs",
    "type": "function",
    "file": "backend/admin_api.py",
    "signature": "def get_logs():",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/admin/logs\")",
    "type": "endpoint",
    "file": "backend/admin_api.py",
    "signature": "@router.post(\"/admin/logs\")",
    "docstring": ""
  },
  {
    "name": "add_log",
    "type": "function",
    "file": "backend/admin_api.py",
    "signature": "def add_log(entry: LogEntry):",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/admin/users\", response_model=List[User])",
    "type": "endpoint",
    "file": "backend/admin_api.py",
    "signature": "@router.get(\"/admin/users\", response_model=List[User])",
    "docstring": ""
  },
  {
    "name": "list_users",
    "type": "function",
    "file": "backend/admin_api.py",
    "signature": "def list_users():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/admin/health\")",
    "type": "endpoint",
    "file": "backend/admin_api.py",
    "signature": "@router.get(\"/admin/health\")",
    "docstring": ""
  },
  {
    "name": "health_check",
    "type": "function",
    "file": "backend/admin_api.py",
    "signature": "def health_check():",
    "docstring": ""
  },
  {
    "name": "AdvancedSupervisorCoordinator",
    "type": "class",
    "file": "backend/advanced_best_practices_manager.py",
    "signature": "class AdvancedSupervisorCoordinator:",
    "docstring": ""
  },
  {
    "name": "AdvancedSupervisorCoordinator",
    "type": "class",
    "file": "backend/advanced_best_practices_manager.py",
    "signature": "class AdvancedSupervisorCoordinator:",
    "docstring": ""
  },
  {
    "name": "AdvancedBestPracticesManager",
    "type": "class",
    "file": "backend/advanced_best_practices_manager.py",
    "signature": "class AdvancedBestPracticesManager:",
    "docstring": ""
  },
  {
    "name": "AdvancedBestPracticesManager",
    "type": "class",
    "file": "backend/advanced_best_practices_manager.py",
    "signature": "class AdvancedBestPracticesManager:",
    "docstring": ""
  },
  {
    "name": "FeatureEngineeringStrategy",
    "type": "class",
    "file": "backend/advanced_feature_engineering.py",
    "signature": "class FeatureEngineeringStrategy(str, Enum):",
    "docstring": ""
  },
  {
    "name": "FeatureEngineeringStrategy",
    "type": "class",
    "file": "backend/advanced_feature_engineering.py",
    "signature": "class FeatureEngineeringStrategy(str, Enum):",
    "docstring": ""
  },
  {
    "name": "FeatureImportanceMethod",
    "type": "class",
    "file": "backend/advanced_feature_engineering.py",
    "signature": "class FeatureImportanceMethod(str, Enum):",
    "docstring": ""
  },
  {
    "name": "FeatureImportanceMethod",
    "type": "class",
    "file": "backend/advanced_feature_engineering.py",
    "signature": "class FeatureImportanceMethod(str, Enum):",
    "docstring": ""
  },
  {
    "name": "AdvancedFeatureMetrics",
    "type": "class",
    "file": "backend/advanced_feature_engineering.py",
    "signature": "class AdvancedFeatureMetrics:",
    "docstring": ""
  },
  {
    "name": "AdvancedFeatureMetrics",
    "type": "class",
    "file": "backend/advanced_feature_engineering.py",
    "signature": "class AdvancedFeatureMetrics:",
    "docstring": ""
  },
  {
    "name": "FeatureSet",
    "type": "class",
    "file": "backend/advanced_feature_engineering.py",
    "signature": "class FeatureSet:",
    "docstring": ""
  },
  {
    "name": "FeatureSet",
    "type": "class",
    "file": "backend/advanced_feature_engineering.py",
    "signature": "class FeatureSet:",
    "docstring": ""
  },
  {
    "name": "AdvancedFeatureEngineer",
    "type": "class",
    "file": "backend/advanced_feature_engineering.py",
    "signature": "class AdvancedFeatureEngineer:",
    "docstring": ""
  },
  {
    "name": "AdvancedFeatureEngineer",
    "type": "class",
    "file": "backend/advanced_feature_engineering.py",
    "signature": "class AdvancedFeatureEngineer:",
    "docstring": ""
  },
  {
    "name": "MockPlan",
    "type": "class",
    "file": "backend/agent_planner.py",
    "signature": "class MockPlan:",
    "docstring": ""
  },
  {
    "name": "MockPlan",
    "type": "class",
    "file": "backend/agent_planner.py",
    "signature": "class MockPlan:",
    "docstring": ""
  },
  {
    "name": "generate_recursive_plan",
    "type": "function",
    "file": "backend/agent_planner.py",
    "signature": "def generate_recursive_plan(context: Any) -> MockPlan:",
    "docstring": ""
  },
  {
    "name": "LoginRequest",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class LoginRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "LoginRequest",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class LoginRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "RegisterRequest",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class RegisterRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "RegisterRequest",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class RegisterRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "RefreshTokenRequest",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class RefreshTokenRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "RefreshTokenRequest",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class RefreshTokenRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UserProfile",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class UserProfile(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UserProfile",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class UserProfile(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TokenResponse",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class TokenResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TokenResponse",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class TokenResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "AuthResponse",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class AuthResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "AuthResponse",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class AuthResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PlayerProp",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class PlayerProp(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PlayerProp",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class PlayerProp(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ExpandedPlayerProp",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class ExpandedPlayerProp(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ExpandedPlayerProp",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class ExpandedPlayerProp(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PlayerDetails",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class PlayerDetails(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PlayerDetails",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class PlayerDetails(BaseModel):",
    "docstring": ""
  },
  {
    "name": "SelectedPick",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class SelectedPick(BaseModel):",
    "docstring": ""
  },
  {
    "name": "SelectedPick",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class SelectedPick(BaseModel):",
    "docstring": ""
  },
  {
    "name": "LineupRequest",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class LineupRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "LineupRequest",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class LineupRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "LineupResponse",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class LineupResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "LineupResponse",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class LineupResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PredictionFactor",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class PredictionFactor(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PredictionFactor",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class PredictionFactor(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PredictionModel",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class PredictionModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PredictionModel",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class PredictionModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "LivePrediction",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class LivePrediction(BaseModel):",
    "docstring": ""
  },
  {
    "name": "LivePrediction",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class LivePrediction(BaseModel):",
    "docstring": ""
  },
  {
    "name": "AnalysisRequest",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class AnalysisRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "AnalysisRequest",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class AnalysisRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "AnalysisResponse",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class AnalysisResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "AnalysisResponse",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class AnalysisResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ProfileUpdateRequest",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class ProfileUpdateRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ProfileUpdateRequest",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class ProfileUpdateRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "BankrollInfo",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class BankrollInfo(BaseModel):",
    "docstring": ""
  },
  {
    "name": "BankrollInfo",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class BankrollInfo(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TransactionRequest",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class TransactionRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TransactionRequest",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class TransactionRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "Transaction",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class Transaction(BaseModel):",
    "docstring": ""
  },
  {
    "name": "Transaction",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class Transaction(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PerformanceMetrics",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class PerformanceMetrics(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PerformanceMetrics",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class PerformanceMetrics(BaseModel):",
    "docstring": ""
  },
  {
    "name": "MarketTrend",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class MarketTrend(BaseModel):",
    "docstring": ""
  },
  {
    "name": "MarketTrend",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class MarketTrend(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ChatRequest",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class ChatRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ChatRequest",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class ChatRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ChatResponse",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class ChatResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ChatResponse",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class ChatResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "WSMessage",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class WSMessage(BaseModel):",
    "docstring": ""
  },
  {
    "name": "WSMessage",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class WSMessage(BaseModel):",
    "docstring": ""
  },
  {
    "name": "hash_password",
    "type": "function",
    "file": "backend/api_integration.py",
    "signature": "def hash_password(password: str) -> str:",
    "docstring": ""
  },
  {
    "name": "verify_password",
    "type": "function",
    "file": "backend/api_integration.py",
    "signature": "def verify_password(plain_password: str, hashed_password: str) -> bool:",
    "docstring": ""
  },
  {
    "name": "create_access_token",
    "type": "function",
    "file": "backend/api_integration.py",
    "signature": "def create_access_token(data: Dict[str, Any]) -> str:",
    "docstring": ""
  },
  {
    "name": "create_refresh_token",
    "type": "function",
    "file": "backend/api_integration.py",
    "signature": "def create_refresh_token(user_id: str) -> str:",
    "docstring": ""
  },
  {
    "name": "validate_lineup",
    "type": "function",
    "file": "backend/api_integration.py",
    "signature": "def validate_lineup(picks: List[SelectedPick]) -> tuple[bool, List[str]]:",
    "docstring": ""
  },
  {
    "name": "calculate_payout",
    "type": "function",
    "file": "backend/api_integration.py",
    "signature": "def calculate_payout(picks: List[SelectedPick], bet_amount: float) -> float:",
    "docstring": ""
  },
  {
    "name": "ConnectionManager",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class ConnectionManager:",
    "docstring": ""
  },
  {
    "name": "ConnectionManager",
    "type": "class",
    "file": "backend/api_integration.py",
    "signature": "class ConnectionManager:",
    "docstring": ""
  },
  {
    "name": "create_integrated_app",
    "type": "function",
    "file": "backend/api_integration.py",
    "signature": "def create_integrated_app() -> FastAPI:",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/health\")",
    "type": "endpoint",
    "file": "backend/api_integration.py",
    "signature": "@app.get(\"/health\")",
    "docstring": ""
  },
  {
    "name": "ArbitrageType",
    "type": "class",
    "file": "backend/arbitrage_engine.py",
    "signature": "class ArbitrageType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "ArbitrageType",
    "type": "class",
    "file": "backend/arbitrage_engine.py",
    "signature": "class ArbitrageType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "MarketInefficiencyType",
    "type": "class",
    "file": "backend/arbitrage_engine.py",
    "signature": "class MarketInefficiencyType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "MarketInefficiencyType",
    "type": "class",
    "file": "backend/arbitrage_engine.py",
    "signature": "class MarketInefficiencyType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "ArbitrageOpportunity",
    "type": "class",
    "file": "backend/arbitrage_engine.py",
    "signature": "class ArbitrageOpportunity:",
    "docstring": ""
  },
  {
    "name": "ArbitrageOpportunity",
    "type": "class",
    "file": "backend/arbitrage_engine.py",
    "signature": "class ArbitrageOpportunity:",
    "docstring": ""
  },
  {
    "name": "MarketInefficiency",
    "type": "class",
    "file": "backend/arbitrage_engine.py",
    "signature": "class MarketInefficiency:",
    "docstring": ""
  },
  {
    "name": "MarketInefficiency",
    "type": "class",
    "file": "backend/arbitrage_engine.py",
    "signature": "class MarketInefficiency:",
    "docstring": ""
  },
  {
    "name": "ArbitrageCalculator",
    "type": "class",
    "file": "backend/arbitrage_engine.py",
    "signature": "class ArbitrageCalculator:",
    "docstring": ""
  },
  {
    "name": "ArbitrageCalculator",
    "type": "class",
    "file": "backend/arbitrage_engine.py",
    "signature": "class ArbitrageCalculator:",
    "docstring": ""
  },
  {
    "name": "MarketInefficiencyDetector",
    "type": "class",
    "file": "backend/arbitrage_engine.py",
    "signature": "class MarketInefficiencyDetector:",
    "docstring": ""
  },
  {
    "name": "MarketInefficiencyDetector",
    "type": "class",
    "file": "backend/arbitrage_engine.py",
    "signature": "class MarketInefficiencyDetector:",
    "docstring": ""
  },
  {
    "name": "UltraArbitrageEngine",
    "type": "class",
    "file": "backend/arbitrage_engine.py",
    "signature": "class UltraArbitrageEngine:",
    "docstring": ""
  },
  {
    "name": "UltraArbitrageEngine",
    "type": "class",
    "file": "backend/arbitrage_engine.py",
    "signature": "class UltraArbitrageEngine:",
    "docstring": ""
  },
  {
    "name": "AuthService",
    "type": "class",
    "file": "backend/auth.py",
    "signature": "class AuthService:",
    "docstring": ""
  },
  {
    "name": "AuthService",
    "type": "class",
    "file": "backend/auth.py",
    "signature": "class AuthService:",
    "docstring": ""
  },
  {
    "name": "UserCreate",
    "type": "class",
    "file": "backend/auth_service.py",
    "signature": "class UserCreate(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UserCreate",
    "type": "class",
    "file": "backend/auth_service.py",
    "signature": "class UserCreate(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UserLogin",
    "type": "class",
    "file": "backend/auth_service.py",
    "signature": "class UserLogin(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UserLogin",
    "type": "class",
    "file": "backend/auth_service.py",
    "signature": "class UserLogin(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UserResponse",
    "type": "class",
    "file": "backend/auth_service.py",
    "signature": "class UserResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UserResponse",
    "type": "class",
    "file": "backend/auth_service.py",
    "signature": "class UserResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TokenResponse",
    "type": "class",
    "file": "backend/auth_service.py",
    "signature": "class TokenResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TokenResponse",
    "type": "class",
    "file": "backend/auth_service.py",
    "signature": "class TokenResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "AuthService",
    "type": "class",
    "file": "backend/auth_service.py",
    "signature": "class AuthService:",
    "docstring": ""
  },
  {
    "name": "AuthService",
    "type": "class",
    "file": "backend/auth_service.py",
    "signature": "class AuthService:",
    "docstring": ""
  },
  {
    "name": "AutonomousRecursiveOrchestrator",
    "type": "class",
    "file": "backend/autonomous_recursive_orchestrator.py",
    "signature": "class AutonomousRecursiveOrchestrator:",
    "docstring": ""
  },
  {
    "name": "AutonomousRecursiveOrchestrator",
    "type": "class",
    "file": "backend/autonomous_recursive_orchestrator.py",
    "signature": "class AutonomousRecursiveOrchestrator:",
    "docstring": ""
  },
  {
    "name": "SystemMetrics",
    "type": "class",
    "file": "backend/autonomous_system.py",
    "signature": "class SystemMetrics:",
    "docstring": ""
  },
  {
    "name": "SystemMetrics",
    "type": "class",
    "file": "backend/autonomous_system.py",
    "signature": "class SystemMetrics:",
    "docstring": ""
  },
  {
    "name": "HealthStatus",
    "type": "class",
    "file": "backend/autonomous_system.py",
    "signature": "class HealthStatus:",
    "docstring": ""
  },
  {
    "name": "HealthStatus",
    "type": "class",
    "file": "backend/autonomous_system.py",
    "signature": "class HealthStatus:",
    "docstring": ""
  },
  {
    "name": "AutonomousSystem",
    "type": "class",
    "file": "backend/autonomous_system.py",
    "signature": "class AutonomousSystem:",
    "docstring": ""
  },
  {
    "name": "AutonomousSystem",
    "type": "class",
    "file": "backend/autonomous_system.py",
    "signature": "class AutonomousSystem:",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\")",
    "type": "endpoint",
    "file": "backend/backend_8001.py",
    "signature": "@app.get(\"/\")",
    "docstring": ""
  },
  {
    "name": "root",
    "type": "function",
    "file": "backend/backend_8001.py",
    "signature": "def root():",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/health\")",
    "type": "endpoint",
    "file": "backend/backend_8001.py",
    "signature": "@app.get(\"/health\")",
    "docstring": ""
  },
  {
    "name": "health",
    "type": "function",
    "file": "backend/backend_8001.py",
    "signature": "def health():",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/prizepicks/props\")",
    "type": "endpoint",
    "file": "backend/backend_8001.py",
    "signature": "@app.get(\"/api/prizepicks/props\")",
    "docstring": ""
  },
  {
    "name": "get_props",
    "type": "function",
    "file": "backend/backend_8001.py",
    "signature": "def get_props():",
    "docstring": ""
  },
  {
    "name": "OpportunityType",
    "type": "class",
    "file": "backend/betting_opportunity_service.py",
    "signature": "class OpportunityType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "OpportunityType",
    "type": "class",
    "file": "backend/betting_opportunity_service.py",
    "signature": "class OpportunityType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "RiskLevel",
    "type": "class",
    "file": "backend/betting_opportunity_service.py",
    "signature": "class RiskLevel(str, Enum):",
    "docstring": ""
  },
  {
    "name": "RiskLevel",
    "type": "class",
    "file": "backend/betting_opportunity_service.py",
    "signature": "class RiskLevel(str, Enum):",
    "docstring": ""
  },
  {
    "name": "MarketData",
    "type": "class",
    "file": "backend/betting_opportunity_service.py",
    "signature": "class MarketData:",
    "docstring": ""
  },
  {
    "name": "MarketData",
    "type": "class",
    "file": "backend/betting_opportunity_service.py",
    "signature": "class MarketData:",
    "docstring": ""
  },
  {
    "name": "BettingOpportunity",
    "type": "class",
    "file": "backend/betting_opportunity_service.py",
    "signature": "class BettingOpportunity:",
    "docstring": ""
  },
  {
    "name": "BettingOpportunity",
    "type": "class",
    "file": "backend/betting_opportunity_service.py",
    "signature": "class BettingOpportunity:",
    "docstring": ""
  },
  {
    "name": "BettingOpportunityService",
    "type": "class",
    "file": "backend/betting_opportunity_service.py",
    "signature": "class BettingOpportunityService:",
    "docstring": ""
  },
  {
    "name": "BettingOpportunityService",
    "type": "class",
    "file": "backend/betting_opportunity_service.py",
    "signature": "class BettingOpportunityService:",
    "docstring": ""
  },
  {
    "name": "SportsExpertAgent",
    "type": "class",
    "file": "backend/betting_opportunity_service.py",
    "signature": "class SportsExpertAgent:",
    "docstring": ""
  },
  {
    "name": "SportsExpertAgent",
    "type": "class",
    "file": "backend/betting_opportunity_service.py",
    "signature": "class SportsExpertAgent:",
    "docstring": ""
  },
  {
    "name": "get_llm_engine",
    "type": "function",
    "file": "backend/betting_opportunity_service.py",
    "signature": "def get_llm_engine() -> Any:",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/opportunities\")",
    "type": "endpoint",
    "file": "backend/betting_opportunity_service.py",
    "signature": "@router.get(\"/opportunities\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/status\")",
    "type": "endpoint",
    "file": "backend/betting_opportunity_service.py",
    "signature": "@router.get(\"/status\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/analyze\")",
    "type": "endpoint",
    "file": "backend/betting_opportunity_service.py",
    "signature": "@router.post(\"/analyze\")",
    "docstring": ""
  },
  {
    "name": "CacheLayer",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class CacheLayer(str, Enum):",
    "docstring": ""
  },
  {
    "name": "CacheLayer",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class CacheLayer(str, Enum):",
    "docstring": ""
  },
  {
    "name": "CacheStrategy",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class CacheStrategy(str, Enum):",
    "docstring": ""
  },
  {
    "name": "CacheStrategy",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class CacheStrategy(str, Enum):",
    "docstring": ""
  },
  {
    "name": "CompressionType",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class CompressionType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "CompressionType",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class CompressionType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "CacheMetrics",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class CacheMetrics:",
    "docstring": ""
  },
  {
    "name": "CacheMetrics",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class CacheMetrics:",
    "docstring": ""
  },
  {
    "name": "CacheEntry",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class CacheEntry:",
    "docstring": ""
  },
  {
    "name": "CacheEntry",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class CacheEntry:",
    "docstring": ""
  },
  {
    "name": "InMemoryCache",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class InMemoryCache:",
    "docstring": ""
  },
  {
    "name": "InMemoryCache",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class InMemoryCache:",
    "docstring": ""
  },
  {
    "name": "RedisCache",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class RedisCache:",
    "docstring": ""
  },
  {
    "name": "RedisCache",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class RedisCache:",
    "docstring": ""
  },
  {
    "name": "MultiTierCache",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class MultiTierCache:",
    "docstring": ""
  },
  {
    "name": "MultiTierCache",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class MultiTierCache:",
    "docstring": ""
  },
  {
    "name": "CacheWarmer",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class CacheWarmer:",
    "docstring": ""
  },
  {
    "name": "CacheWarmer",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class CacheWarmer:",
    "docstring": ""
  },
  {
    "name": "UltraCacheOptimizer",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class UltraCacheOptimizer:",
    "docstring": ""
  },
  {
    "name": "UltraCacheOptimizer",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class UltraCacheOptimizer:",
    "docstring": ""
  },
  {
    "name": "CachePerformanceMonitor",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class CachePerformanceMonitor:",
    "docstring": ""
  },
  {
    "name": "CachePerformanceMonitor",
    "type": "class",
    "file": "backend/cache_optimizer.py",
    "signature": "class CachePerformanceMonitor:",
    "docstring": ""
  },
  {
    "name": "cleanup_console_statements",
    "type": "function",
    "file": "backend/cleanup_console_statements.py",
    "signature": "def cleanup_console_statements(file_path: str) -> bool:",
    "docstring": ""
  },
  {
    "name": "cleanup_backend_debug_logging",
    "type": "function",
    "file": "backend/cleanup_console_statements.py",
    "signature": "def cleanup_backend_debug_logging(file_path: str) -> bool:",
    "docstring": ""
  },
  {
    "name": "main",
    "type": "function",
    "file": "backend/cleanup_console_statements.py",
    "signature": "def main():",
    "docstring": ""
  },
  {
    "name": "ModelRetrainingService",
    "type": "class",
    "file": "backend/complete_stub_endpoints.py",
    "signature": "class ModelRetrainingService:",
    "docstring": ""
  },
  {
    "name": "ModelRetrainingService",
    "type": "class",
    "file": "backend/complete_stub_endpoints.py",
    "signature": "class ModelRetrainingService:",
    "docstring": ""
  },
  {
    "name": "DataPipelineService",
    "type": "class",
    "file": "backend/complete_stub_endpoints.py",
    "signature": "class DataPipelineService:",
    "docstring": ""
  },
  {
    "name": "DataPipelineService",
    "type": "class",
    "file": "backend/complete_stub_endpoints.py",
    "signature": "class DataPipelineService:",
    "docstring": ""
  },
  {
    "name": "EnsembleOptimizerService",
    "type": "class",
    "file": "backend/complete_stub_endpoints.py",
    "signature": "class EnsembleOptimizerService:",
    "docstring": ""
  },
  {
    "name": "EnsembleOptimizerService",
    "type": "class",
    "file": "backend/complete_stub_endpoints.py",
    "signature": "class EnsembleOptimizerService:",
    "docstring": ""
  },
  {
    "name": "DocumentationService",
    "type": "class",
    "file": "backend/complete_stub_endpoints.py",
    "signature": "class DocumentationService:",
    "docstring": ""
  },
  {
    "name": "DocumentationService",
    "type": "class",
    "file": "backend/complete_stub_endpoints.py",
    "signature": "class DocumentationService:",
    "docstring": ""
  },
  {
    "name": "BackendConfig",
    "type": "class",
    "file": "backend/config.py",
    "signature": "class BackendConfig(BaseSettings):",
    "docstring": ""
  },
  {
    "name": "BackendConfig",
    "type": "class",
    "file": "backend/config.py",
    "signature": "class BackendConfig(BaseSettings):",
    "docstring": ""
  },
  {
    "name": "HealthStatus",
    "type": "class",
    "file": "backend/config.py",
    "signature": "class HealthStatus:",
    "docstring": ""
  },
  {
    "name": "HealthStatus",
    "type": "class",
    "file": "backend/config.py",
    "signature": "class HealthStatus:",
    "docstring": ""
  },
  {
    "name": "ConfigManager",
    "type": "class",
    "file": "backend/config.py",
    "signature": "class ConfigManager:",
    "docstring": ""
  },
  {
    "name": "ConfigManager",
    "type": "class",
    "file": "backend/config.py",
    "signature": "class ConfigManager:",
    "docstring": ""
  },
  {
    "name": "Environment",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class Environment(str, Enum):",
    "docstring": ""
  },
  {
    "name": "Environment",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class Environment(str, Enum):",
    "docstring": ""
  },
  {
    "name": "DatabaseConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class DatabaseConfig:",
    "docstring": ""
  },
  {
    "name": "DatabaseConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class DatabaseConfig:",
    "docstring": ""
  },
  {
    "name": "APIKeysConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class APIKeysConfig:",
    "docstring": ""
  },
  {
    "name": "APIKeysConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class APIKeysConfig:",
    "docstring": ""
  },
  {
    "name": "CacheConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class CacheConfig:",
    "docstring": ""
  },
  {
    "name": "CacheConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class CacheConfig:",
    "docstring": ""
  },
  {
    "name": "SecurityConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class SecurityConfig:",
    "docstring": ""
  },
  {
    "name": "SecurityConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class SecurityConfig:",
    "docstring": ""
  },
  {
    "name": "LoggingConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class LoggingConfig:",
    "docstring": ""
  },
  {
    "name": "LoggingConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class LoggingConfig:",
    "docstring": ""
  },
  {
    "name": "ServerConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class ServerConfig:",
    "docstring": ""
  },
  {
    "name": "ServerConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class ServerConfig:",
    "docstring": ""
  },
  {
    "name": "FeatureFlagsConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class FeatureFlagsConfig:",
    "docstring": ""
  },
  {
    "name": "FeatureFlagsConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class FeatureFlagsConfig:",
    "docstring": ""
  },
  {
    "name": "ExternalServicesConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class ExternalServicesConfig:",
    "docstring": ""
  },
  {
    "name": "ExternalServicesConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class ExternalServicesConfig:",
    "docstring": ""
  },
  {
    "name": "PerformanceConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class PerformanceConfig:",
    "docstring": ""
  },
  {
    "name": "PerformanceConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class PerformanceConfig:",
    "docstring": ""
  },
  {
    "name": "A1BettingConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class A1BettingConfig:",
    "docstring": ""
  },
  {
    "name": "A1BettingConfig",
    "type": "class",
    "file": "backend/config_manager.py",
    "signature": "class A1BettingConfig:",
    "docstring": ""
  },
  {
    "name": "get_config",
    "type": "function",
    "file": "backend/config_manager.py",
    "signature": "def get_config() -> A1BettingConfig:",
    "docstring": ""
  },
  {
    "name": "is_development",
    "type": "function",
    "file": "backend/config_manager.py",
    "signature": "def is_development() -> bool:",
    "docstring": ""
  },
  {
    "name": "is_production",
    "type": "function",
    "file": "backend/config_manager.py",
    "signature": "def is_production() -> bool:",
    "docstring": ""
  },
  {
    "name": "get_api_key",
    "type": "function",
    "file": "backend/config_manager.py",
    "signature": "def get_api_key(service: str) -> Optional[str]:",
    "docstring": ""
  },
  {
    "name": "get_database_url",
    "type": "function",
    "file": "backend/config_manager.py",
    "signature": "def get_database_url() -> str:",
    "docstring": ""
  },
  {
    "name": "DataSourceType",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class DataSourceType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "DataSourceType",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class DataSourceType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "DataStatus",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class DataStatus(str, Enum):",
    "docstring": ""
  },
  {
    "name": "DataStatus",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class DataStatus(str, Enum):",
    "docstring": ""
  },
  {
    "name": "DataRequest",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class DataRequest:",
    "docstring": ""
  },
  {
    "name": "DataRequest",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class DataRequest:",
    "docstring": ""
  },
  {
    "name": "DataResponse",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class DataResponse:",
    "docstring": ""
  },
  {
    "name": "DataResponse",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class DataResponse:",
    "docstring": ""
  },
  {
    "name": "RateLimiter",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class RateLimiter:",
    "docstring": ""
  },
  {
    "name": "RateLimiter",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class RateLimiter:",
    "docstring": ""
  },
  {
    "name": "DataSourceConnector",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class DataSourceConnector:",
    "docstring": ""
  },
  {
    "name": "DataSourceConnector",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class DataSourceConnector:",
    "docstring": ""
  },
  {
    "name": "SportradarConnector",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class SportradarConnector(DataSourceConnector):",
    "docstring": ""
  },
  {
    "name": "SportradarConnector",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class SportradarConnector(DataSourceConnector):",
    "docstring": ""
  },
  {
    "name": "OddsAPIConnector",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class OddsAPIConnector(DataSourceConnector):",
    "docstring": ""
  },
  {
    "name": "OddsAPIConnector",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class OddsAPIConnector(DataSourceConnector):",
    "docstring": ""
  },
  {
    "name": "PrizePicksConnector",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class PrizePicksConnector(DataSourceConnector):",
    "docstring": ""
  },
  {
    "name": "PrizePicksConnector",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class PrizePicksConnector(DataSourceConnector):",
    "docstring": ""
  },
  {
    "name": "DataPipeline",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class DataPipeline:",
    "docstring": ""
  },
  {
    "name": "DataPipeline",
    "type": "class",
    "file": "backend/data_pipeline.py",
    "signature": "class DataPipeline:",
    "docstring": ""
  },
  {
    "name": "DataSourceReliability",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class DataSourceReliability(str, Enum):",
    "docstring": ""
  },
  {
    "name": "DataSourceReliability",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class DataSourceReliability(str, Enum):",
    "docstring": ""
  },
  {
    "name": "DataType",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class DataType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "DataType",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class DataType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "DataQualityMetrics",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class DataQualityMetrics:",
    "docstring": ""
  },
  {
    "name": "DataQualityMetrics",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class DataQualityMetrics:",
    "docstring": ""
  },
  {
    "name": "EnhancedDataPoint",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class EnhancedDataPoint:",
    "docstring": ""
  },
  {
    "name": "EnhancedDataPoint",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class EnhancedDataPoint:",
    "docstring": ""
  },
  {
    "name": "DataValidator",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class DataValidator:",
    "docstring": ""
  },
  {
    "name": "DataValidator",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class DataValidator:",
    "docstring": ""
  },
  {
    "name": "DataSourceConnector",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class DataSourceConnector:",
    "docstring": ""
  },
  {
    "name": "DataSourceConnector",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class DataSourceConnector:",
    "docstring": ""
  },
  {
    "name": "IntelligentRateLimiter",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class IntelligentRateLimiter:",
    "docstring": ""
  },
  {
    "name": "IntelligentRateLimiter",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class IntelligentRateLimiter:",
    "docstring": ""
  },
  {
    "name": "CircuitBreaker",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class CircuitBreaker:",
    "docstring": ""
  },
  {
    "name": "CircuitBreaker",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class CircuitBreaker:",
    "docstring": ""
  },
  {
    "name": "PerformanceTracker",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class PerformanceTracker:",
    "docstring": ""
  },
  {
    "name": "PerformanceTracker",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class PerformanceTracker:",
    "docstring": ""
  },
  {
    "name": "DataReconciliationEngine",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class DataReconciliationEngine:",
    "docstring": ""
  },
  {
    "name": "DataReconciliationEngine",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class DataReconciliationEngine:",
    "docstring": ""
  },
  {
    "name": "UltraEnhancedDataSourceManager",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class UltraEnhancedDataSourceManager:",
    "docstring": ""
  },
  {
    "name": "UltraEnhancedDataSourceManager",
    "type": "class",
    "file": "backend/data_sources.py",
    "signature": "class UltraEnhancedDataSourceManager:",
    "docstring": ""
  },
  {
    "name": "get_db",
    "type": "function",
    "file": "backend/database.py",
    "signature": "def get_db():",
    "docstring": ""
  },
  {
    "name": "create_tables",
    "type": "function",
    "file": "backend/database.py",
    "signature": "def create_tables():",
    "docstring": ""
  },
  {
    "name": "DBManager",
    "type": "class",
    "file": "backend/database.py",
    "signature": "class DBManager:",
    "docstring": ""
  },
  {
    "name": "DBManager",
    "type": "class",
    "file": "backend/database.py",
    "signature": "class DBManager:",
    "docstring": ""
  },
  {
    "name": "ModelPerformance",
    "type": "class",
    "file": "backend/database.py",
    "signature": "class ModelPerformance:",
    "docstring": ""
  },
  {
    "name": "ModelPerformance",
    "type": "class",
    "file": "backend/database.py",
    "signature": "class ModelPerformance:",
    "docstring": ""
  },
  {
    "name": "DatabaseHealthChecker",
    "type": "class",
    "file": "backend/database_health_checker.py",
    "signature": "class DatabaseHealthChecker:",
    "docstring": ""
  },
  {
    "name": "DatabaseHealthChecker",
    "type": "class",
    "file": "backend/database_health_checker.py",
    "signature": "class DatabaseHealthChecker:",
    "docstring": ""
  },
  {
    "name": "ProductionDeployer",
    "type": "class",
    "file": "backend/deploy_production.py",
    "signature": "class ProductionDeployer:",
    "docstring": ""
  },
  {
    "name": "ProductionDeployer",
    "type": "class",
    "file": "backend/deploy_production.py",
    "signature": "class ProductionDeployer:",
    "docstring": ""
  },
  {
    "name": "main",
    "type": "function",
    "file": "backend/deploy_production.py",
    "signature": "def main():",
    "docstring": ""
  },
  {
    "name": "MockModelManager",
    "type": "class",
    "file": "backend/direct_ollama_test.py",
    "signature": "class MockModelManager:",
    "docstring": ""
  },
  {
    "name": "MockModelManager",
    "type": "class",
    "file": "backend/direct_ollama_test.py",
    "signature": "class MockModelManager:",
    "docstring": ""
  },
  {
    "name": "HealthCheckResponse",
    "type": "class",
    "file": "backend/enhanced_api_routes.py",
    "signature": "class HealthCheckResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "HealthCheckResponse",
    "type": "class",
    "file": "backend/enhanced_api_routes.py",
    "signature": "class HealthCheckResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UnifiedPredictionRequest",
    "type": "class",
    "file": "backend/enhanced_api_routes.py",
    "signature": "class UnifiedPredictionRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UnifiedPredictionRequest",
    "type": "class",
    "file": "backend/enhanced_api_routes.py",
    "signature": "class UnifiedPredictionRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UnifiedPredictionResponse",
    "type": "class",
    "file": "backend/enhanced_api_routes.py",
    "signature": "class UnifiedPredictionResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UnifiedPredictionResponse",
    "type": "class",
    "file": "backend/enhanced_api_routes.py",
    "signature": "class UnifiedPredictionResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "FeatureEngineeringRequest",
    "type": "class",
    "file": "backend/enhanced_api_routes.py",
    "signature": "class FeatureEngineeringRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "FeatureEngineeringRequest",
    "type": "class",
    "file": "backend/enhanced_api_routes.py",
    "signature": "class FeatureEngineeringRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "RiskAssessmentRequest",
    "type": "class",
    "file": "backend/enhanced_api_routes.py",
    "signature": "class RiskAssessmentRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "RiskAssessmentRequest",
    "type": "class",
    "file": "backend/enhanced_api_routes.py",
    "signature": "class RiskAssessmentRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ModelStatus",
    "type": "class",
    "file": "backend/enhanced_api_routes.py",
    "signature": "class ModelStatus(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ModelStatus",
    "type": "class",
    "file": "backend/enhanced_api_routes.py",
    "signature": "class ModelStatus(BaseModel):",
    "docstring": ""
  },
  {
    "name": "SystemHealthResponse",
    "type": "class",
    "file": "backend/enhanced_api_routes.py",
    "signature": "class SystemHealthResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "SystemHealthResponse",
    "type": "class",
    "file": "backend/enhanced_api_routes.py",
    "signature": "class SystemHealthResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\", response_model=Dict[str, str])",
    "type": "endpoint",
    "file": "backend/enhanced_api_routes.py",
    "signature": "@app.get(\"/\", response_model=Dict[str, str])",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/health\", response_model=HealthCheckResponse)",
    "type": "endpoint",
    "file": "backend/enhanced_api_routes.py",
    "signature": "@app.get(\"/health\", response_model=HealthCheckResponse)",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/api/unified/predict\", response_model=UnifiedPredictionResponse)",
    "type": "endpoint",
    "file": "backend/enhanced_api_routes.py",
    "signature": "@app.post(\"/api/unified/predict\", response_model=UnifiedPredictionResponse)",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/api/enhanced-features/engineer\")",
    "type": "endpoint",
    "file": "backend/enhanced_api_routes.py",
    "signature": "@app.post(\"/api/enhanced-features/engineer\")",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/api/enhanced-risk/assess\")",
    "type": "endpoint",
    "file": "backend/enhanced_api_routes.py",
    "signature": "@app.post(\"/api/enhanced-risk/assess\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/enhanced-models/status\", response_model=SystemHealthResponse)",
    "type": "endpoint",
    "file": "backend/enhanced_api_routes.py",
    "signature": "@app.get(\"/api/enhanced-models/status\", response_model=SystemHealthResponse)",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/performance/metrics\")",
    "type": "endpoint",
    "file": "backend/enhanced_api_routes.py",
    "signature": "@app.get(\"/api/performance/metrics\")",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/api/batch/predictions\")",
    "type": "endpoint",
    "file": "backend/enhanced_api_routes.py",
    "signature": "@app.post(\"/api/batch/predictions\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/monitoring/real-time\")",
    "type": "endpoint",
    "file": "backend/enhanced_api_routes.py",
    "signature": "@app.get(\"/api/monitoring/real-time\")",
    "docstring": ""
  },
  {
    "name": "DataProcessingResult",
    "type": "class",
    "file": "backend/enhanced_data_pipeline.py",
    "signature": "class DataProcessingResult:",
    "docstring": ""
  },
  {
    "name": "DataProcessingResult",
    "type": "class",
    "file": "backend/enhanced_data_pipeline.py",
    "signature": "class DataProcessingResult:",
    "docstring": ""
  },
  {
    "name": "AdvancedSignalProcessing",
    "type": "class",
    "file": "backend/enhanced_data_pipeline.py",
    "signature": "class AdvancedSignalProcessing:",
    "docstring": ""
  },
  {
    "name": "AdvancedSignalProcessing",
    "type": "class",
    "file": "backend/enhanced_data_pipeline.py",
    "signature": "class AdvancedSignalProcessing:",
    "docstring": ""
  },
  {
    "name": "AdvancedMissingDataImputation",
    "type": "class",
    "file": "backend/enhanced_data_pipeline.py",
    "signature": "class AdvancedMissingDataImputation:",
    "docstring": ""
  },
  {
    "name": "AdvancedMissingDataImputation",
    "type": "class",
    "file": "backend/enhanced_data_pipeline.py",
    "signature": "class AdvancedMissingDataImputation:",
    "docstring": ""
  },
  {
    "name": "AdvancedAnomalyDetection",
    "type": "class",
    "file": "backend/enhanced_data_pipeline.py",
    "signature": "class AdvancedAnomalyDetection:",
    "docstring": ""
  },
  {
    "name": "AdvancedAnomalyDetection",
    "type": "class",
    "file": "backend/enhanced_data_pipeline.py",
    "signature": "class AdvancedAnomalyDetection:",
    "docstring": ""
  },
  {
    "name": "EnhancedMathematicalDataPipeline",
    "type": "class",
    "file": "backend/enhanced_data_pipeline.py",
    "signature": "class EnhancedMathematicalDataPipeline:",
    "docstring": ""
  },
  {
    "name": "EnhancedMathematicalDataPipeline",
    "type": "class",
    "file": "backend/enhanced_data_pipeline.py",
    "signature": "class EnhancedMathematicalDataPipeline:",
    "docstring": ""
  },
  {
    "name": "DatabaseConfig",
    "type": "class",
    "file": "backend/enhanced_database.py",
    "signature": "class DatabaseConfig:",
    "docstring": ""
  },
  {
    "name": "DatabaseConfig",
    "type": "class",
    "file": "backend/enhanced_database.py",
    "signature": "class DatabaseConfig:",
    "docstring": ""
  },
  {
    "name": "DatabaseHealth",
    "type": "class",
    "file": "backend/enhanced_database.py",
    "signature": "class DatabaseHealth:",
    "docstring": ""
  },
  {
    "name": "DatabaseHealth",
    "type": "class",
    "file": "backend/enhanced_database.py",
    "signature": "class DatabaseHealth:",
    "docstring": ""
  },
  {
    "name": "DatabaseConnectionManager",
    "type": "class",
    "file": "backend/enhanced_database.py",
    "signature": "class DatabaseConnectionManager:",
    "docstring": ""
  },
  {
    "name": "DatabaseConnectionManager",
    "type": "class",
    "file": "backend/enhanced_database.py",
    "signature": "class DatabaseConnectionManager:",
    "docstring": ""
  },
  {
    "name": "OptimizationStrategy",
    "type": "class",
    "file": "backend/enhanced_ensemble_engine.py",
    "signature": "class OptimizationStrategy(str, Enum):",
    "docstring": ""
  },
  {
    "name": "OptimizationStrategy",
    "type": "class",
    "file": "backend/enhanced_ensemble_engine.py",
    "signature": "class OptimizationStrategy(str, Enum):",
    "docstring": ""
  },
  {
    "name": "QuantumEnsembleConfig",
    "type": "class",
    "file": "backend/enhanced_ensemble_engine.py",
    "signature": "class QuantumEnsembleConfig:",
    "docstring": ""
  },
  {
    "name": "QuantumEnsembleConfig",
    "type": "class",
    "file": "backend/enhanced_ensemble_engine.py",
    "signature": "class QuantumEnsembleConfig:",
    "docstring": ""
  },
  {
    "name": "MultiObjectiveConfig",
    "type": "class",
    "file": "backend/enhanced_ensemble_engine.py",
    "signature": "class MultiObjectiveConfig:",
    "docstring": ""
  },
  {
    "name": "MultiObjectiveConfig",
    "type": "class",
    "file": "backend/enhanced_ensemble_engine.py",
    "signature": "class MultiObjectiveConfig:",
    "docstring": ""
  },
  {
    "name": "QuantumInspiredOptimizer",
    "type": "class",
    "file": "backend/enhanced_ensemble_engine.py",
    "signature": "class QuantumInspiredOptimizer:",
    "docstring": ""
  },
  {
    "name": "QuantumInspiredOptimizer",
    "type": "class",
    "file": "backend/enhanced_ensemble_engine.py",
    "signature": "class QuantumInspiredOptimizer:",
    "docstring": ""
  },
  {
    "name": "MultiObjectiveOptimizer",
    "type": "class",
    "file": "backend/enhanced_ensemble_engine.py",
    "signature": "class MultiObjectiveOptimizer:",
    "docstring": ""
  },
  {
    "name": "MultiObjectiveOptimizer",
    "type": "class",
    "file": "backend/enhanced_ensemble_engine.py",
    "signature": "class MultiObjectiveOptimizer:",
    "docstring": ""
  },
  {
    "name": "EnhancedEnsembleEngine",
    "type": "class",
    "file": "backend/enhanced_ensemble_engine.py",
    "signature": "class EnhancedEnsembleEngine(UltraAdvancedEnsembleEngine):",
    "docstring": ""
  },
  {
    "name": "EnhancedEnsembleEngine",
    "type": "class",
    "file": "backend/enhanced_ensemble_engine.py",
    "signature": "class EnhancedEnsembleEngine(UltraAdvancedEnsembleEngine):",
    "docstring": ""
  },
  {
    "name": "FeatureEngineeringResult",
    "type": "class",
    "file": "backend/enhanced_feature_engineering.py",
    "signature": "class FeatureEngineeringResult:",
    "docstring": ""
  },
  {
    "name": "FeatureEngineeringResult",
    "type": "class",
    "file": "backend/enhanced_feature_engineering.py",
    "signature": "class FeatureEngineeringResult:",
    "docstring": ""
  },
  {
    "name": "WaveletTransformFeatures",
    "type": "class",
    "file": "backend/enhanced_feature_engineering.py",
    "signature": "class WaveletTransformFeatures:",
    "docstring": ""
  },
  {
    "name": "WaveletTransformFeatures",
    "type": "class",
    "file": "backend/enhanced_feature_engineering.py",
    "signature": "class WaveletTransformFeatures:",
    "docstring": ""
  },
  {
    "name": "ManifoldLearningFeatures",
    "type": "class",
    "file": "backend/enhanced_feature_engineering.py",
    "signature": "class ManifoldLearningFeatures:",
    "docstring": ""
  },
  {
    "name": "ManifoldLearningFeatures",
    "type": "class",
    "file": "backend/enhanced_feature_engineering.py",
    "signature": "class ManifoldLearningFeatures:",
    "docstring": ""
  },
  {
    "name": "InformationTheoreticFeatures",
    "type": "class",
    "file": "backend/enhanced_feature_engineering.py",
    "signature": "class InformationTheoreticFeatures:",
    "docstring": ""
  },
  {
    "name": "InformationTheoreticFeatures",
    "type": "class",
    "file": "backend/enhanced_feature_engineering.py",
    "signature": "class InformationTheoreticFeatures:",
    "docstring": ""
  },
  {
    "name": "GraphBasedFeatures",
    "type": "class",
    "file": "backend/enhanced_feature_engineering.py",
    "signature": "class GraphBasedFeatures:",
    "docstring": ""
  },
  {
    "name": "GraphBasedFeatures",
    "type": "class",
    "file": "backend/enhanced_feature_engineering.py",
    "signature": "class GraphBasedFeatures:",
    "docstring": ""
  },
  {
    "name": "EnhancedMathematicalFeatureEngineering",
    "type": "class",
    "file": "backend/enhanced_feature_engineering.py",
    "signature": "class EnhancedMathematicalFeatureEngineering:",
    "docstring": ""
  },
  {
    "name": "EnhancedMathematicalFeatureEngineering",
    "type": "class",
    "file": "backend/enhanced_feature_engineering.py",
    "signature": "class EnhancedMathematicalFeatureEngineering:",
    "docstring": ""
  },
  {
    "name": "ModelType",
    "type": "class",
    "file": "backend/enhanced_model_service.py",
    "signature": "class ModelType(Enum):",
    "docstring": ""
  },
  {
    "name": "ModelType",
    "type": "class",
    "file": "backend/enhanced_model_service.py",
    "signature": "class ModelType(Enum):",
    "docstring": ""
  },
  {
    "name": "ProcessingLevel",
    "type": "class",
    "file": "backend/enhanced_model_service.py",
    "signature": "class ProcessingLevel(Enum):",
    "docstring": ""
  },
  {
    "name": "ProcessingLevel",
    "type": "class",
    "file": "backend/enhanced_model_service.py",
    "signature": "class ProcessingLevel(Enum):",
    "docstring": ""
  },
  {
    "name": "UnifiedPredictionRequest",
    "type": "class",
    "file": "backend/enhanced_model_service.py",
    "signature": "class UnifiedPredictionRequest:",
    "docstring": ""
  },
  {
    "name": "UnifiedPredictionRequest",
    "type": "class",
    "file": "backend/enhanced_model_service.py",
    "signature": "class UnifiedPredictionRequest:",
    "docstring": ""
  },
  {
    "name": "UnifiedPredictionResult",
    "type": "class",
    "file": "backend/enhanced_model_service.py",
    "signature": "class UnifiedPredictionResult:",
    "docstring": ""
  },
  {
    "name": "UnifiedPredictionResult",
    "type": "class",
    "file": "backend/enhanced_model_service.py",
    "signature": "class UnifiedPredictionResult:",
    "docstring": ""
  },
  {
    "name": "EnhancedMathematicalModelService",
    "type": "class",
    "file": "backend/enhanced_model_service.py",
    "signature": "class EnhancedMathematicalModelService:",
    "docstring": ""
  },
  {
    "name": "EnhancedMathematicalModelService",
    "type": "class",
    "file": "backend/enhanced_model_service.py",
    "signature": "class EnhancedMathematicalModelService:",
    "docstring": ""
  },
  {
    "name": "get_service_status",
    "type": "function",
    "file": "backend/enhanced_model_service.py",
    "signature": "def get_service_status() -> Dict[str, Any]:",
    "docstring": ""
  },
  {
    "name": "BayesianPredictionResult",
    "type": "class",
    "file": "backend/enhanced_prediction_engine.py",
    "signature": "class BayesianPredictionResult:",
    "docstring": ""
  },
  {
    "name": "BayesianPredictionResult",
    "type": "class",
    "file": "backend/enhanced_prediction_engine.py",
    "signature": "class BayesianPredictionResult:",
    "docstring": ""
  },
  {
    "name": "BayesianNeuralNetwork",
    "type": "class",
    "file": "backend/enhanced_prediction_engine.py",
    "signature": "class BayesianNeuralNetwork(nn.Module):",
    "docstring": ""
  },
  {
    "name": "BayesianNeuralNetwork",
    "type": "class",
    "file": "backend/enhanced_prediction_engine.py",
    "signature": "class BayesianNeuralNetwork(nn.Module):",
    "docstring": ""
  },
  {
    "name": "InformationTheoreticPredictor",
    "type": "class",
    "file": "backend/enhanced_prediction_engine.py",
    "signature": "class InformationTheoreticPredictor:",
    "docstring": ""
  },
  {
    "name": "InformationTheoreticPredictor",
    "type": "class",
    "file": "backend/enhanced_prediction_engine.py",
    "signature": "class InformationTheoreticPredictor:",
    "docstring": ""
  },
  {
    "name": "StatisticalMechanicsPredictor",
    "type": "class",
    "file": "backend/enhanced_prediction_engine.py",
    "signature": "class StatisticalMechanicsPredictor:",
    "docstring": ""
  },
  {
    "name": "StatisticalMechanicsPredictor",
    "type": "class",
    "file": "backend/enhanced_prediction_engine.py",
    "signature": "class StatisticalMechanicsPredictor:",
    "docstring": ""
  },
  {
    "name": "AdvancedGaussianProcess",
    "type": "class",
    "file": "backend/enhanced_prediction_engine.py",
    "signature": "class AdvancedGaussianProcess:",
    "docstring": ""
  },
  {
    "name": "AdvancedGaussianProcess",
    "type": "class",
    "file": "backend/enhanced_prediction_engine.py",
    "signature": "class AdvancedGaussianProcess:",
    "docstring": ""
  },
  {
    "name": "NonparametricBayesianRegressor",
    "type": "class",
    "file": "backend/enhanced_prediction_engine.py",
    "signature": "class NonparametricBayesianRegressor:",
    "docstring": ""
  },
  {
    "name": "NonparametricBayesianRegressor",
    "type": "class",
    "file": "backend/enhanced_prediction_engine.py",
    "signature": "class NonparametricBayesianRegressor:",
    "docstring": ""
  },
  {
    "name": "EnhancedMathematicalPredictionEngine",
    "type": "class",
    "file": "backend/enhanced_prediction_engine.py",
    "signature": "class EnhancedMathematicalPredictionEngine:",
    "docstring": ""
  },
  {
    "name": "EnhancedMathematicalPredictionEngine",
    "type": "class",
    "file": "backend/enhanced_prediction_engine.py",
    "signature": "class EnhancedMathematicalPredictionEngine:",
    "docstring": ""
  },
  {
    "name": "ConversationContext",
    "type": "class",
    "file": "backend/enhanced_propollama_engine.py",
    "signature": "class ConversationContext:",
    "docstring": ""
  },
  {
    "name": "ConversationContext",
    "type": "class",
    "file": "backend/enhanced_propollama_engine.py",
    "signature": "class ConversationContext:",
    "docstring": ""
  },
  {
    "name": "SportsKnowledgeBase",
    "type": "class",
    "file": "backend/enhanced_propollama_engine.py",
    "signature": "class SportsKnowledgeBase:",
    "docstring": ""
  },
  {
    "name": "SportsKnowledgeBase",
    "type": "class",
    "file": "backend/enhanced_propollama_engine.py",
    "signature": "class SportsKnowledgeBase:",
    "docstring": ""
  },
  {
    "name": "EnhancedPropOllamaEngine",
    "type": "class",
    "file": "backend/enhanced_propollama_engine.py",
    "signature": "class EnhancedPropOllamaEngine:",
    "docstring": ""
  },
  {
    "name": "EnhancedPropOllamaEngine",
    "type": "class",
    "file": "backend/enhanced_propollama_engine.py",
    "signature": "class EnhancedPropOllamaEngine:",
    "docstring": ""
  },
  {
    "name": "StreamEventType",
    "type": "class",
    "file": "backend/enhanced_realtime_system.py",
    "signature": "class StreamEventType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "StreamEventType",
    "type": "class",
    "file": "backend/enhanced_realtime_system.py",
    "signature": "class StreamEventType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "DataSource",
    "type": "class",
    "file": "backend/enhanced_realtime_system.py",
    "signature": "class DataSource(str, Enum):",
    "docstring": ""
  },
  {
    "name": "DataSource",
    "type": "class",
    "file": "backend/enhanced_realtime_system.py",
    "signature": "class DataSource(str, Enum):",
    "docstring": ""
  },
  {
    "name": "StreamEvent",
    "type": "class",
    "file": "backend/enhanced_realtime_system.py",
    "signature": "class StreamEvent:",
    "docstring": ""
  },
  {
    "name": "StreamEvent",
    "type": "class",
    "file": "backend/enhanced_realtime_system.py",
    "signature": "class StreamEvent:",
    "docstring": ""
  },
  {
    "name": "DataQualityMetrics",
    "type": "class",
    "file": "backend/enhanced_realtime_system.py",
    "signature": "class DataQualityMetrics:",
    "docstring": ""
  },
  {
    "name": "DataQualityMetrics",
    "type": "class",
    "file": "backend/enhanced_realtime_system.py",
    "signature": "class DataQualityMetrics:",
    "docstring": ""
  },
  {
    "name": "RealTimeDataValidator",
    "type": "class",
    "file": "backend/enhanced_realtime_system.py",
    "signature": "class RealTimeDataValidator:",
    "docstring": ""
  },
  {
    "name": "RealTimeDataValidator",
    "type": "class",
    "file": "backend/enhanced_realtime_system.py",
    "signature": "class RealTimeDataValidator:",
    "docstring": ""
  },
  {
    "name": "HighFrequencyArbitrageScanner",
    "type": "class",
    "file": "backend/enhanced_realtime_system.py",
    "signature": "class HighFrequencyArbitrageScanner:",
    "docstring": ""
  },
  {
    "name": "HighFrequencyArbitrageScanner",
    "type": "class",
    "file": "backend/enhanced_realtime_system.py",
    "signature": "class HighFrequencyArbitrageScanner:",
    "docstring": ""
  },
  {
    "name": "EnhancedRealTimeEngine",
    "type": "class",
    "file": "backend/enhanced_realtime_system.py",
    "signature": "class EnhancedRealTimeEngine:",
    "docstring": ""
  },
  {
    "name": "EnhancedRealTimeEngine",
    "type": "class",
    "file": "backend/enhanced_realtime_system.py",
    "signature": "class EnhancedRealTimeEngine:",
    "docstring": ""
  },
  {
    "name": "EnhancedPredictionRequest",
    "type": "class",
    "file": "backend/enhanced_revolutionary_api.py",
    "signature": "class EnhancedPredictionRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "EnhancedPredictionRequest",
    "type": "class",
    "file": "backend/enhanced_revolutionary_api.py",
    "signature": "class EnhancedPredictionRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "EnhancedPredictionResponse",
    "type": "class",
    "file": "backend/enhanced_revolutionary_api.py",
    "signature": "class EnhancedPredictionResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "EnhancedPredictionResponse",
    "type": "class",
    "file": "backend/enhanced_revolutionary_api.py",
    "signature": "class EnhancedPredictionResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "MathematicalAnalysisRequest",
    "type": "class",
    "file": "backend/enhanced_revolutionary_api.py",
    "signature": "class MathematicalAnalysisRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "MathematicalAnalysisRequest",
    "type": "class",
    "file": "backend/enhanced_revolutionary_api.py",
    "signature": "class MathematicalAnalysisRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/predict/enhanced\", response_model=EnhancedPredictionResponse)",
    "type": "endpoint",
    "file": "backend/enhanced_revolutionary_api.py",
    "signature": "@router.post(\"/predict/enhanced\", response_model=EnhancedPredictionResponse)",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/analyze/mathematical-rigor\")",
    "type": "endpoint",
    "file": "backend/enhanced_revolutionary_api.py",
    "signature": "@router.post(\"/analyze/mathematical-rigor\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/research/mathematical-foundations\")",
    "type": "endpoint",
    "file": "backend/enhanced_revolutionary_api.py",
    "signature": "@router.get(\"/research/mathematical-foundations\")",
    "docstring": ""
  },
  {
    "name": "perform_convergence_analysis",
    "type": "function",
    "file": "backend/enhanced_revolutionary_api.py",
    "signature": "def perform_convergence_analysis(features: np.ndarray) -> Dict[str, Any]:",
    "docstring": ""
  },
  {
    "name": "perform_robustness_analysis",
    "type": "function",
    "file": "backend/enhanced_revolutionary_api.py",
    "signature": "def perform_robustness_analysis(features: np.ndarray) -> Dict[str, Any]:",
    "docstring": ""
  },
  {
    "name": "calculate_rigor_score",
    "type": "function",
    "file": "backend/enhanced_revolutionary_api.py",
    "signature": "def calculate_rigor_score(analysis_results: Dict[str, Any]) -> float:",
    "docstring": ""
  },
  {
    "name": "EnhancedRevolutionaryPrediction",
    "type": "class",
    "file": "backend/enhanced_revolutionary_engine.py",
    "signature": "class EnhancedRevolutionaryPrediction:",
    "docstring": ""
  },
  {
    "name": "EnhancedRevolutionaryPrediction",
    "type": "class",
    "file": "backend/enhanced_revolutionary_engine.py",
    "signature": "class EnhancedRevolutionaryPrediction:",
    "docstring": ""
  },
  {
    "name": "EnhancedNeuromorphicNetwork",
    "type": "class",
    "file": "backend/enhanced_revolutionary_engine.py",
    "signature": "class EnhancedNeuromorphicNetwork(nn.Module):",
    "docstring": ""
  },
  {
    "name": "EnhancedNeuromorphicNetwork",
    "type": "class",
    "file": "backend/enhanced_revolutionary_engine.py",
    "signature": "class EnhancedNeuromorphicNetwork(nn.Module):",
    "docstring": ""
  },
  {
    "name": "EnhancedMambaStateSpace",
    "type": "class",
    "file": "backend/enhanced_revolutionary_engine.py",
    "signature": "class EnhancedMambaStateSpace(nn.Module):",
    "docstring": ""
  },
  {
    "name": "EnhancedMambaStateSpace",
    "type": "class",
    "file": "backend/enhanced_revolutionary_engine.py",
    "signature": "class EnhancedMambaStateSpace(nn.Module):",
    "docstring": ""
  },
  {
    "name": "EnhancedCausalInference",
    "type": "class",
    "file": "backend/enhanced_revolutionary_engine.py",
    "signature": "class EnhancedCausalInference(nn.Module):",
    "docstring": ""
  },
  {
    "name": "EnhancedCausalInference",
    "type": "class",
    "file": "backend/enhanced_revolutionary_engine.py",
    "signature": "class EnhancedCausalInference(nn.Module):",
    "docstring": ""
  },
  {
    "name": "EnhancedTopologicalNetwork",
    "type": "class",
    "file": "backend/enhanced_revolutionary_engine.py",
    "signature": "class EnhancedTopologicalNetwork(nn.Module):",
    "docstring": ""
  },
  {
    "name": "EnhancedTopologicalNetwork",
    "type": "class",
    "file": "backend/enhanced_revolutionary_engine.py",
    "signature": "class EnhancedTopologicalNetwork(nn.Module):",
    "docstring": ""
  },
  {
    "name": "EnhancedRiemannianNetwork",
    "type": "class",
    "file": "backend/enhanced_revolutionary_engine.py",
    "signature": "class EnhancedRiemannianNetwork(nn.Module):",
    "docstring": ""
  },
  {
    "name": "EnhancedRiemannianNetwork",
    "type": "class",
    "file": "backend/enhanced_revolutionary_engine.py",
    "signature": "class EnhancedRiemannianNetwork(nn.Module):",
    "docstring": ""
  },
  {
    "name": "EnhancedRevolutionaryEngine",
    "type": "class",
    "file": "backend/enhanced_revolutionary_engine.py",
    "signature": "class EnhancedRevolutionaryEngine:",
    "docstring": ""
  },
  {
    "name": "EnhancedRevolutionaryEngine",
    "type": "class",
    "file": "backend/enhanced_revolutionary_engine.py",
    "signature": "class EnhancedRevolutionaryEngine:",
    "docstring": ""
  },
  {
    "name": "RiskMeasure",
    "type": "class",
    "file": "backend/enhanced_risk_management.py",
    "signature": "class RiskMeasure(Enum):",
    "docstring": ""
  },
  {
    "name": "RiskMeasure",
    "type": "class",
    "file": "backend/enhanced_risk_management.py",
    "signature": "class RiskMeasure(Enum):",
    "docstring": ""
  },
  {
    "name": "RiskAssessmentResult",
    "type": "class",
    "file": "backend/enhanced_risk_management.py",
    "signature": "class RiskAssessmentResult:",
    "docstring": ""
  },
  {
    "name": "RiskAssessmentResult",
    "type": "class",
    "file": "backend/enhanced_risk_management.py",
    "signature": "class RiskAssessmentResult:",
    "docstring": ""
  },
  {
    "name": "ExtremeValueTheory",
    "type": "class",
    "file": "backend/enhanced_risk_management.py",
    "signature": "class ExtremeValueTheory:",
    "docstring": ""
  },
  {
    "name": "ExtremeValueTheory",
    "type": "class",
    "file": "backend/enhanced_risk_management.py",
    "signature": "class ExtremeValueTheory:",
    "docstring": ""
  },
  {
    "name": "CopulaModeling",
    "type": "class",
    "file": "backend/enhanced_risk_management.py",
    "signature": "class CopulaModeling:",
    "docstring": ""
  },
  {
    "name": "CopulaModeling",
    "type": "class",
    "file": "backend/enhanced_risk_management.py",
    "signature": "class CopulaModeling:",
    "docstring": ""
  },
  {
    "name": "StochasticProcessModeling",
    "type": "class",
    "file": "backend/enhanced_risk_management.py",
    "signature": "class StochasticProcessModeling:",
    "docstring": ""
  },
  {
    "name": "StochasticProcessModeling",
    "type": "class",
    "file": "backend/enhanced_risk_management.py",
    "signature": "class StochasticProcessModeling:",
    "docstring": ""
  },
  {
    "name": "EnhancedRiskManagement",
    "type": "class",
    "file": "backend/enhanced_risk_management.py",
    "signature": "class EnhancedRiskManagement:",
    "docstring": ""
  },
  {
    "name": "EnhancedRiskManagement",
    "type": "class",
    "file": "backend/enhanced_risk_management.py",
    "signature": "class EnhancedRiskManagement:",
    "docstring": ""
  },
  {
    "name": "ModelType",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class ModelType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "ModelType",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class ModelType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "PredictionContext",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class PredictionContext(str, Enum):",
    "docstring": ""
  },
  {
    "name": "PredictionContext",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class PredictionContext(str, Enum):",
    "docstring": ""
  },
  {
    "name": "ModelMetrics",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class ModelMetrics:",
    "docstring": ""
  },
  {
    "name": "ModelMetrics",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class ModelMetrics:",
    "docstring": ""
  },
  {
    "name": "PredictionOutput",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class PredictionOutput:",
    "docstring": ""
  },
  {
    "name": "PredictionOutput",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class PredictionOutput:",
    "docstring": ""
  },
  {
    "name": "EnsembleConfiguration",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class EnsembleConfiguration:",
    "docstring": ""
  },
  {
    "name": "EnsembleConfiguration",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class EnsembleConfiguration:",
    "docstring": ""
  },
  {
    "name": "ModelRegistry",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class ModelRegistry:",
    "docstring": ""
  },
  {
    "name": "ModelRegistry",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class ModelRegistry:",
    "docstring": ""
  },
  {
    "name": "IntelligentModelSelector",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class IntelligentModelSelector:",
    "docstring": ""
  },
  {
    "name": "IntelligentModelSelector",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class IntelligentModelSelector:",
    "docstring": ""
  },
  {
    "name": "DynamicWeightingEngine",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class DynamicWeightingEngine:",
    "docstring": ""
  },
  {
    "name": "DynamicWeightingEngine",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class DynamicWeightingEngine:",
    "docstring": ""
  },
  {
    "name": "MetaLearningEngine",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class MetaLearningEngine:",
    "docstring": ""
  },
  {
    "name": "MetaLearningEngine",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class MetaLearningEngine:",
    "docstring": ""
  },
  {
    "name": "UltraAdvancedEnsembleEngine",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class UltraAdvancedEnsembleEngine:",
    "docstring": ""
  },
  {
    "name": "UltraAdvancedEnsembleEngine",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class UltraAdvancedEnsembleEngine:",
    "docstring": ""
  },
  {
    "name": "UltraEnsembleEngine",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class UltraEnsembleEngine:",
    "docstring": ""
  },
  {
    "name": "UltraEnsembleEngine",
    "type": "class",
    "file": "backend/ensemble_engine.py",
    "signature": "class UltraEnsembleEngine:",
    "docstring": ""
  },
  {
    "name": "EnsembleStrategy",
    "type": "class",
    "file": "backend/ensemble_optimizer.py",
    "signature": "class EnsembleStrategy(str, Enum):",
    "docstring": ""
  },
  {
    "name": "EnsembleStrategy",
    "type": "class",
    "file": "backend/ensemble_optimizer.py",
    "signature": "class EnsembleStrategy(str, Enum):",
    "docstring": ""
  },
  {
    "name": "WeightOptimizationMethod",
    "type": "class",
    "file": "backend/ensemble_optimizer.py",
    "signature": "class WeightOptimizationMethod(str, Enum):",
    "docstring": ""
  },
  {
    "name": "WeightOptimizationMethod",
    "type": "class",
    "file": "backend/ensemble_optimizer.py",
    "signature": "class WeightOptimizationMethod(str, Enum):",
    "docstring": ""
  },
  {
    "name": "ModelPerformanceMetrics",
    "type": "class",
    "file": "backend/ensemble_optimizer.py",
    "signature": "class ModelPerformanceMetrics:",
    "docstring": ""
  },
  {
    "name": "ModelPerformanceMetrics",
    "type": "class",
    "file": "backend/ensemble_optimizer.py",
    "signature": "class ModelPerformanceMetrics:",
    "docstring": ""
  },
  {
    "name": "EnsembleConfiguration",
    "type": "class",
    "file": "backend/ensemble_optimizer.py",
    "signature": "class EnsembleConfiguration:",
    "docstring": ""
  },
  {
    "name": "EnsembleConfiguration",
    "type": "class",
    "file": "backend/ensemble_optimizer.py",
    "signature": "class EnsembleConfiguration:",
    "docstring": ""
  },
  {
    "name": "EnsemblePrediction",
    "type": "class",
    "file": "backend/ensemble_optimizer.py",
    "signature": "class EnsemblePrediction:",
    "docstring": ""
  },
  {
    "name": "EnsemblePrediction",
    "type": "class",
    "file": "backend/ensemble_optimizer.py",
    "signature": "class EnsemblePrediction:",
    "docstring": ""
  },
  {
    "name": "AdvancedEnsembleOptimizer",
    "type": "class",
    "file": "backend/ensemble_optimizer.py",
    "signature": "class AdvancedEnsembleOptimizer:",
    "docstring": ""
  },
  {
    "name": "AdvancedEnsembleOptimizer",
    "type": "class",
    "file": "backend/ensemble_optimizer.py",
    "signature": "class AdvancedEnsembleOptimizer:",
    "docstring": ""
  },
  {
    "name": "FeatureCache",
    "type": "class",
    "file": "backend/feature_cache.py",
    "signature": "class FeatureCache:",
    "docstring": ""
  },
  {
    "name": "FeatureCache",
    "type": "class",
    "file": "backend/feature_cache.py",
    "signature": "class FeatureCache:",
    "docstring": ""
  },
  {
    "name": "FeatureEngineering",
    "type": "class",
    "file": "backend/feature_engineering.py",
    "signature": "class FeatureEngineering:",
    "docstring": ""
  },
  {
    "name": "FeatureEngineering",
    "type": "class",
    "file": "backend/feature_engineering.py",
    "signature": "class FeatureEngineering:",
    "docstring": ""
  },
  {
    "name": "Feature",
    "type": "class",
    "file": "backend/feature_flags.py",
    "signature": "class Feature:",
    "docstring": ""
  },
  {
    "name": "Feature",
    "type": "class",
    "file": "backend/feature_flags.py",
    "signature": "class Feature:",
    "docstring": ""
  },
  {
    "name": "ExperimentVariant",
    "type": "class",
    "file": "backend/feature_flags.py",
    "signature": "class ExperimentVariant:",
    "docstring": ""
  },
  {
    "name": "ExperimentVariant",
    "type": "class",
    "file": "backend/feature_flags.py",
    "signature": "class ExperimentVariant:",
    "docstring": ""
  },
  {
    "name": "Experiment",
    "type": "class",
    "file": "backend/feature_flags.py",
    "signature": "class Experiment:",
    "docstring": ""
  },
  {
    "name": "Experiment",
    "type": "class",
    "file": "backend/feature_flags.py",
    "signature": "class Experiment:",
    "docstring": ""
  },
  {
    "name": "UserContext",
    "type": "class",
    "file": "backend/feature_flags.py",
    "signature": "class UserContext:",
    "docstring": ""
  },
  {
    "name": "UserContext",
    "type": "class",
    "file": "backend/feature_flags.py",
    "signature": "class UserContext:",
    "docstring": ""
  },
  {
    "name": "FeatureFlags",
    "type": "class",
    "file": "backend/feature_flags.py",
    "signature": "class FeatureFlags:",
    "docstring": ""
  },
  {
    "name": "FeatureFlags",
    "type": "class",
    "file": "backend/feature_flags.py",
    "signature": "class FeatureFlags:",
    "docstring": ""
  },
  {
    "name": "FeatureLogger",
    "type": "class",
    "file": "backend/feature_logger.py",
    "signature": "class FeatureLogger:",
    "docstring": ""
  },
  {
    "name": "FeatureLogger",
    "type": "class",
    "file": "backend/feature_logger.py",
    "signature": "class FeatureLogger:",
    "docstring": ""
  },
  {
    "name": "FeatureMonitor",
    "type": "class",
    "file": "backend/feature_monitor.py",
    "signature": "class FeatureMonitor:",
    "docstring": ""
  },
  {
    "name": "FeatureMonitor",
    "type": "class",
    "file": "backend/feature_monitor.py",
    "signature": "class FeatureMonitor:",
    "docstring": ""
  },
  {
    "name": "FeatureRegistry",
    "type": "class",
    "file": "backend/feature_registry.py",
    "signature": "class FeatureRegistry:",
    "docstring": ""
  },
  {
    "name": "FeatureRegistry",
    "type": "class",
    "file": "backend/feature_registry.py",
    "signature": "class FeatureRegistry:",
    "docstring": ""
  },
  {
    "name": "FeatureSelector",
    "type": "class",
    "file": "backend/feature_selector.py",
    "signature": "class FeatureSelector:",
    "docstring": ""
  },
  {
    "name": "FeatureSelector",
    "type": "class",
    "file": "backend/feature_selector.py",
    "signature": "class FeatureSelector:",
    "docstring": ""
  },
  {
    "name": "FeatureTransformer",
    "type": "class",
    "file": "backend/feature_transformation.py",
    "signature": "class FeatureTransformer:",
    "docstring": ""
  },
  {
    "name": "FeatureTransformer",
    "type": "class",
    "file": "backend/feature_transformation.py",
    "signature": "class FeatureTransformer:",
    "docstring": ""
  },
  {
    "name": "FeatureValidator",
    "type": "class",
    "file": "backend/feature_validator.py",
    "signature": "class FeatureValidator:",
    "docstring": ""
  },
  {
    "name": "FeatureValidator",
    "type": "class",
    "file": "backend/feature_validator.py",
    "signature": "class FeatureValidator:",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/predict/filtered\", response_model=PredictionResponse)",
    "type": "endpoint",
    "file": "backend/filtered_prediction_api.py",
    "signature": "@router.post(\"/predict/filtered\", response_model=PredictionResponse)",
    "docstring": ""
  },
  {
    "name": "fix_metrics_class",
    "type": "function",
    "file": "backend/fix_metrics.py",
    "signature": "def fix_metrics_class():",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health\")",
    "type": "endpoint",
    "file": "backend/health_api.py",
    "signature": "@app.get(\"/api/health\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health/data-sources\")",
    "type": "endpoint",
    "file": "backend/health_api.py",
    "signature": "@app.get(\"/api/health/data-sources\")",
    "docstring": ""
  },
  {
    "name": "HealthCheckStatus",
    "type": "class",
    "file": "backend/health_monitor.py",
    "signature": "class HealthCheckStatus:",
    "docstring": ""
  },
  {
    "name": "HealthCheckStatus",
    "type": "class",
    "file": "backend/health_monitor.py",
    "signature": "class HealthCheckStatus:",
    "docstring": ""
  },
  {
    "name": "HealthChecker",
    "type": "class",
    "file": "backend/health_monitor.py",
    "signature": "class HealthChecker:",
    "docstring": ""
  },
  {
    "name": "HealthChecker",
    "type": "class",
    "file": "backend/health_monitor.py",
    "signature": "class HealthChecker:",
    "docstring": ""
  },
  {
    "name": "install_package",
    "type": "function",
    "file": "backend/install_all_dependencies.py",
    "signature": "def install_package(package):",
    "docstring": ""
  },
  {
    "name": "main",
    "type": "function",
    "file": "backend/install_all_dependencies.py",
    "signature": "def main():",
    "docstring": ""
  },
  {
    "name": "MetaLearningIntegrationTester",
    "type": "class",
    "file": "backend/integration_test_meta_learning.py",
    "signature": "class MetaLearningIntegrationTester:",
    "docstring": ""
  },
  {
    "name": "MetaLearningIntegrationTester",
    "type": "class",
    "file": "backend/integration_test_meta_learning.py",
    "signature": "class MetaLearningIntegrationTester:",
    "docstring": ""
  },
  {
    "name": "main",
    "type": "function",
    "file": "backend/integration_test_meta_learning.py",
    "signature": "def main():",
    "docstring": ""
  },
  {
    "name": "NASIntegrationTester",
    "type": "class",
    "file": "backend/integration_test_nas.py",
    "signature": "class NASIntegrationTester:",
    "docstring": ""
  },
  {
    "name": "NASIntegrationTester",
    "type": "class",
    "file": "backend/integration_test_nas.py",
    "signature": "class NASIntegrationTester:",
    "docstring": ""
  },
  {
    "name": "main",
    "type": "function",
    "file": "backend/integration_test_nas.py",
    "signature": "def main():",
    "docstring": ""
  },
  {
    "name": "IntegrationTester",
    "type": "class",
    "file": "backend/integration_test_quantum.py",
    "signature": "class IntegrationTester:",
    "docstring": ""
  },
  {
    "name": "IntegrationTester",
    "type": "class",
    "file": "backend/integration_test_quantum.py",
    "signature": "class IntegrationTester:",
    "docstring": ""
  },
  {
    "name": "main",
    "type": "function",
    "file": "backend/integration_test_quantum.py",
    "signature": "def main():",
    "docstring": ""
  },
  {
    "name": "RealMetricsIntegrationTester",
    "type": "class",
    "file": "backend/integration_test_real_metrics.py",
    "signature": "class RealMetricsIntegrationTester:",
    "docstring": ""
  },
  {
    "name": "RealMetricsIntegrationTester",
    "type": "class",
    "file": "backend/integration_test_real_metrics.py",
    "signature": "class RealMetricsIntegrationTester:",
    "docstring": ""
  },
  {
    "name": "llm_endpoint",
    "type": "function",
    "file": "backend/llm_routes.py",
    "signature": "def llm_endpoint(endpoint_name: str, timeout: float = 30.0, retries: int = 1):",
    "docstring": ""
  },
  {
    "name": "EmbedRequest",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class EmbedRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "EmbedRequest",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class EmbedRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "EmbedResponse",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class EmbedResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "EmbedResponse",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class EmbedResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/embed\", response_model=EmbedResponse)",
    "type": "endpoint",
    "file": "backend/llm_routes.py",
    "signature": "@router.post(\"/embed\", response_model=EmbedResponse)",
    "docstring": ""
  },
  {
    "name": "GenerateRequest",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class GenerateRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "GenerateRequest",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class GenerateRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "GenerateResponse",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class GenerateResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "GenerateResponse",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class GenerateResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/generate\", response_model=GenerateResponse)",
    "type": "endpoint",
    "file": "backend/llm_routes.py",
    "signature": "@router.post(\"/generate\", response_model=GenerateResponse)",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/stream_generate\")",
    "type": "endpoint",
    "file": "backend/llm_routes.py",
    "signature": "@router.post(\"/stream_generate\")",
    "docstring": ""
  },
  {
    "name": "ExplainBetRequest",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class ExplainBetRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ExplainBetRequest",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class ExplainBetRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ExplainBetResponse",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class ExplainBetResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ExplainBetResponse",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class ExplainBetResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/explain_bet\", response_model=ExplainBetResponse)",
    "type": "endpoint",
    "file": "backend/llm_routes.py",
    "signature": "@router.post(\"/explain_bet\", response_model=ExplainBetResponse)",
    "docstring": ""
  },
  {
    "name": "ScenarioRequest",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class ScenarioRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ScenarioRequest",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class ScenarioRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ScenarioResponse",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class ScenarioResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ScenarioResponse",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class ScenarioResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/generate_scenarios\", response_model=ScenarioResponse)",
    "type": "endpoint",
    "file": "backend/llm_routes.py",
    "signature": "@router.post(\"/generate_scenarios\", response_model=ScenarioResponse)",
    "docstring": ""
  },
  {
    "name": "DefaultModelResponse",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class DefaultModelResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "DefaultModelResponse",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class DefaultModelResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/models\", response_model=List[str])",
    "type": "endpoint",
    "file": "backend/llm_routes.py",
    "signature": "@router.get(\"/models\", response_model=List[str])",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/models/default\", response_model=DefaultModelResponse)",
    "type": "endpoint",
    "file": "backend/llm_routes.py",
    "signature": "@router.get(\"/models/default\", response_model=DefaultModelResponse)",
    "docstring": ""
  },
  {
    "name": "SetDefaultModelRequest",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class SetDefaultModelRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "SetDefaultModelRequest",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class SetDefaultModelRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@router.put(\"/models/default\", response_model=DefaultModelResponse)",
    "type": "endpoint",
    "file": "backend/llm_routes.py",
    "signature": "@router.put(\"/models/default\", response_model=DefaultModelResponse)",
    "docstring": ""
  },
  {
    "name": "SentimentRequest",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class SentimentRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "SentimentRequest",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class SentimentRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "SentimentResponse",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class SentimentResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "SentimentResponse",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class SentimentResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/sentiment\", response_model=SentimentResponse)",
    "type": "endpoint",
    "file": "backend/llm_routes.py",
    "signature": "@router.post(\"/sentiment\", response_model=SentimentResponse)",
    "docstring": ""
  },
  {
    "name": "LLMHealthResponse",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class LLMHealthResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "LLMHealthResponse",
    "type": "class",
    "file": "backend/llm_routes.py",
    "signature": "class LLMHealthResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/health\", response_model=LLMHealthResponse)",
    "type": "endpoint",
    "file": "backend/llm_routes.py",
    "signature": "@router.get(\"/health\", response_model=LLMHealthResponse)",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/metrics\")",
    "type": "endpoint",
    "file": "backend/llm_routes.py",
    "signature": "@router.get(\"/metrics\")",
    "docstring": ""
  },
  {
    "name": "AppConfig",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class AppConfig(BaseSettings):",
    "docstring": ""
  },
  {
    "name": "AppConfig",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class AppConfig(BaseSettings):",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/prizepicks/props\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/prizepicks/props\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health/status\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/health/status\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/health\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/health\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/health\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/betting-opportunities\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/betting-opportunities\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/arbitrage-opportunities\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/arbitrage-opportunities\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/predictions/prizepicks\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/predictions/prizepicks\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/prizepicks/props/simple\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/prizepicks/props/simple\")",
    "docstring": ""
  },
  {
    "name": "FeatureRequest",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class FeatureRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "FeatureRequest",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class FeatureRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "FeatureResponse",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class FeatureResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "FeatureResponse",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class FeatureResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PredictionResponse",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class PredictionResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PredictionResponse",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class PredictionResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/features\", response_model=FeatureResponse)",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.post(\"/features\", response_model=FeatureResponse)",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/predict\", response_model=PredictionResponse)",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.post(\"/predict\", response_model=PredictionResponse)",
    "docstring": ""
  },
  {
    "name": "UnifiedFeed",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class UnifiedFeed(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UnifiedFeed",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class UnifiedFeed(BaseModel):",
    "docstring": ""
  },
  {
    "name": "HistoricalGameResult",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class HistoricalGameResult(BaseModel):",
    "docstring": ""
  },
  {
    "name": "HistoricalGameResult",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class HistoricalGameResult(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TeamSimple",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class TeamSimple(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TeamSimple",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class TeamSimple(BaseModel):",
    "docstring": ""
  },
  {
    "name": "GameDataModel",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class GameDataModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "GameDataModel",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class GameDataModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "OddOutcome",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class OddOutcome(BaseModel):",
    "docstring": ""
  },
  {
    "name": "OddOutcome",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class OddOutcome(BaseModel):",
    "docstring": ""
  },
  {
    "name": "OddsDataModel",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class OddsDataModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "OddsDataModel",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class OddsDataModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v1/unified-data\", response_model=UnifiedFeed)",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/v1/unified-data\", response_model=UnifiedFeed)",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v1/sr/games\", response_model=List[GameDataModel])",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/v1/sr/games\", response_model=List[GameDataModel])",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v1/odds/{event_id}\", response_model=List[OddsDataModel])",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/v1/odds/{event_id}\", response_model=List[OddsDataModel])",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v4/predict/ultra-accuracy\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/v4/predict/ultra-accuracy\")",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/api/v4/predict/ultra-accuracy\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.post(\"/api/v4/predict/ultra-accuracy\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/prizepicks/comprehensive-projections\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/prizepicks/comprehensive-projections\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/autonomous/status\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/autonomous/status\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/autonomous/health\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/autonomous/health\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/autonomous/metrics\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/autonomous/metrics\")",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/api/autonomous/heal\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.post(\"/api/autonomous/heal\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/autonomous/capabilities\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/autonomous/capabilities\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health/comprehensive\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/health/comprehensive\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health/database\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/health/database\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health/database/summary\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/health/database/summary\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health/database/history\")",
    "type": "endpoint",
    "file": "backend/main.py",
    "signature": "@app.get(\"/api/health/database/history\")",
    "docstring": ""
  },
  {
    "name": "PropOllamaRequest",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class PropOllamaRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PropOllamaRequest",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class PropOllamaRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PropOllamaResponse",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class PropOllamaResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PropOllamaResponse",
    "type": "class",
    "file": "backend/main.py",
    "signature": "class PropOllamaResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\")",
    "type": "endpoint",
    "file": "backend/main_backup.py",
    "signature": "@app.get(\"/\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health/status\")",
    "type": "endpoint",
    "file": "backend/main_backup.py",
    "signature": "@app.get(\"/api/health/status\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/prizepicks/props\")",
    "type": "endpoint",
    "file": "backend/main_backup.py",
    "signature": "@app.get(\"/api/prizepicks/props\")",
    "docstring": ""
  },
  {
    "name": "FeatureRequest",
    "type": "class",
    "file": "backend/main_backup.py",
    "signature": "class FeatureRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "FeatureRequest",
    "type": "class",
    "file": "backend/main_backup.py",
    "signature": "class FeatureRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "FeatureResponse",
    "type": "class",
    "file": "backend/main_backup.py",
    "signature": "class FeatureResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "FeatureResponse",
    "type": "class",
    "file": "backend/main_backup.py",
    "signature": "class FeatureResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PredictionResponse",
    "type": "class",
    "file": "backend/main_backup.py",
    "signature": "class PredictionResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PredictionResponse",
    "type": "class",
    "file": "backend/main_backup.py",
    "signature": "class PredictionResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/features\", response_model=FeatureResponse)",
    "type": "endpoint",
    "file": "backend/main_backup.py",
    "signature": "@app.post(\"/features\", response_model=FeatureResponse)",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/predict\", response_model=PredictionResponse)",
    "type": "endpoint",
    "file": "backend/main_backup.py",
    "signature": "@app.post(\"/predict\", response_model=PredictionResponse)",
    "docstring": ""
  },
  {
    "name": "UnifiedFeed",
    "type": "class",
    "file": "backend/main_backup.py",
    "signature": "class UnifiedFeed(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UnifiedFeed",
    "type": "class",
    "file": "backend/main_backup.py",
    "signature": "class UnifiedFeed(BaseModel):",
    "docstring": ""
  },
  {
    "name": "HistoricalGameResult",
    "type": "class",
    "file": "backend/main_backup.py",
    "signature": "class HistoricalGameResult(BaseModel):",
    "docstring": ""
  },
  {
    "name": "HistoricalGameResult",
    "type": "class",
    "file": "backend/main_backup.py",
    "signature": "class HistoricalGameResult(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TeamSimple",
    "type": "class",
    "file": "backend/main_backup.py",
    "signature": "class TeamSimple(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TeamSimple",
    "type": "class",
    "file": "backend/main_backup.py",
    "signature": "class TeamSimple(BaseModel):",
    "docstring": ""
  },
  {
    "name": "GameDataModel",
    "type": "class",
    "file": "backend/main_backup.py",
    "signature": "class GameDataModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "GameDataModel",
    "type": "class",
    "file": "backend/main_backup.py",
    "signature": "class GameDataModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "OddOutcome",
    "type": "class",
    "file": "backend/main_backup.py",
    "signature": "class OddOutcome(BaseModel):",
    "docstring": ""
  },
  {
    "name": "OddOutcome",
    "type": "class",
    "file": "backend/main_backup.py",
    "signature": "class OddOutcome(BaseModel):",
    "docstring": ""
  },
  {
    "name": "OddsDataModel",
    "type": "class",
    "file": "backend/main_backup.py",
    "signature": "class OddsDataModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "OddsDataModel",
    "type": "class",
    "file": "backend/main_backup.py",
    "signature": "class OddsDataModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v1/unified-data\", response_model=UnifiedFeed)",
    "type": "endpoint",
    "file": "backend/main_backup.py",
    "signature": "@app.get(\"/api/v1/unified-data\", response_model=UnifiedFeed)",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v1/sr/games\", response_model=List[GameDataModel])",
    "type": "endpoint",
    "file": "backend/main_backup.py",
    "signature": "@app.get(\"/api/v1/sr/games\", response_model=List[GameDataModel])",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v1/odds/{event_id}\", response_model=List[OddsDataModel])",
    "type": "endpoint",
    "file": "backend/main_backup.py",
    "signature": "@app.get(\"/api/v1/odds/{event_id}\", response_model=List[OddsDataModel])",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v4/predict/ultra-accuracy\")",
    "type": "endpoint",
    "file": "backend/main_backup.py",
    "signature": "@app.get(\"/api/v4/predict/ultra-accuracy\")",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/api/v4/predict/ultra-accuracy\")",
    "type": "endpoint",
    "file": "backend/main_backup.py",
    "signature": "@app.post(\"/api/v4/predict/ultra-accuracy\")",
    "docstring": ""
  },
  {
    "name": "is_season_active",
    "type": "function",
    "file": "backend/main_complete.py",
    "signature": "def is_season_active(sport: str) -> bool:",
    "docstring": ""
  },
  {
    "name": "check_prizepicks_api_status",
    "type": "function",
    "file": "backend/main_complete.py",
    "signature": "def check_prizepicks_api_status() -> Dict[str, Any]:",
    "docstring": ""
  },
  {
    "name": "ModelStatus",
    "type": "class",
    "file": "backend/main_complete.py",
    "signature": "class ModelStatus(Enum):",
    "docstring": ""
  },
  {
    "name": "ModelStatus",
    "type": "class",
    "file": "backend/main_complete.py",
    "signature": "class ModelStatus(Enum):",
    "docstring": ""
  },
  {
    "name": "TrainingProgress",
    "type": "class",
    "file": "backend/main_complete.py",
    "signature": "class TrainingProgress(TypedDict):",
    "docstring": ""
  },
  {
    "name": "TrainingProgress",
    "type": "class",
    "file": "backend/main_complete.py",
    "signature": "class TrainingProgress(TypedDict):",
    "docstring": ""
  },
  {
    "name": "ModelInfo",
    "type": "class",
    "file": "backend/main_complete.py",
    "signature": "class ModelInfo(TypedDict):",
    "docstring": ""
  },
  {
    "name": "ModelInfo",
    "type": "class",
    "file": "backend/main_complete.py",
    "signature": "class ModelInfo(TypedDict):",
    "docstring": ""
  },
  {
    "name": "ModelManager",
    "type": "class",
    "file": "backend/main_complete.py",
    "signature": "class ModelManager:",
    "docstring": ""
  },
  {
    "name": "ModelManager",
    "type": "class",
    "file": "backend/main_complete.py",
    "signature": "class ModelManager:",
    "docstring": ""
  },
  {
    "name": "PropOllamaRequest",
    "type": "class",
    "file": "backend/main_complete.py",
    "signature": "class PropOllamaRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PropOllamaRequest",
    "type": "class",
    "file": "backend/main_complete.py",
    "signature": "class PropOllamaRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PropOllamaResponse",
    "type": "class",
    "file": "backend/main_complete.py",
    "signature": "class PropOllamaResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PropOllamaResponse",
    "type": "class",
    "file": "backend/main_complete.py",
    "signature": "class PropOllamaResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "EnhancedPrediction",
    "type": "class",
    "file": "backend/main_complete.py",
    "signature": "class EnhancedPrediction(BaseModel):",
    "docstring": ""
  },
  {
    "name": "EnhancedPrediction",
    "type": "class",
    "file": "backend/main_complete.py",
    "signature": "class EnhancedPrediction(BaseModel):",
    "docstring": ""
  },
  {
    "name": "AIExplainabilityEngine",
    "type": "class",
    "file": "backend/main_complete.py",
    "signature": "class AIExplainabilityEngine:",
    "docstring": ""
  },
  {
    "name": "AIExplainabilityEngine",
    "type": "class",
    "file": "backend/main_complete.py",
    "signature": "class AIExplainabilityEngine:",
    "docstring": ""
  },
  {
    "name": "PropOllamaEngine",
    "type": "class",
    "file": "backend/main_complete.py",
    "signature": "class PropOllamaEngine:",
    "docstring": ""
  },
  {
    "name": "PropOllamaEngine",
    "type": "class",
    "file": "backend/main_complete.py",
    "signature": "class PropOllamaEngine:",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\")",
    "type": "endpoint",
    "file": "backend/main_complete.py",
    "signature": "@app.get(\"/\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/health\")",
    "type": "endpoint",
    "file": "backend/main_complete.py",
    "signature": "@app.get(\"/health\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/status/training\")",
    "type": "endpoint",
    "file": "backend/main_complete.py",
    "signature": "@app.get(\"/status/training\")",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/api/propollama/chat\", response_model=PropOllamaResponse)",
    "type": "endpoint",
    "file": "backend/main_complete.py",
    "signature": "@app.post(\"/api/propollama/chat\", response_model=PropOllamaResponse)",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/propollama/status\")",
    "type": "endpoint",
    "file": "backend/main_complete.py",
    "signature": "@app.get(\"/api/propollama/status\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/prizepicks/projections\")",
    "type": "endpoint",
    "file": "backend/main_complete.py",
    "signature": "@app.get(\"/api/prizepicks/projections\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/prizepicks/leagues\")",
    "type": "endpoint",
    "file": "backend/main_complete.py",
    "signature": "@app.get(\"/api/prizepicks/leagues\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/prizepicks/status\")",
    "type": "endpoint",
    "file": "backend/main_complete.py",
    "signature": "@app.get(\"/api/prizepicks/status\")",
    "docstring": ""
  },
  {
    "name": "find_available_port",
    "type": "function",
    "file": "backend/main_complete.py",
    "signature": "def find_available_port(start_port: int = 8000, end_port: int = 8010) -> Optional[int]:",
    "docstring": ""
  },
  {
    "name": "SimpleCache",
    "type": "class",
    "file": "backend/main_enhanced_prod.py",
    "signature": "class SimpleCache:",
    "docstring": ""
  },
  {
    "name": "SimpleCache",
    "type": "class",
    "file": "backend/main_enhanced_prod.py",
    "signature": "class SimpleCache:",
    "docstring": ""
  },
  {
    "name": "HealthResponse",
    "type": "class",
    "file": "backend/main_enhanced_prod.py",
    "signature": "class HealthResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "HealthResponse",
    "type": "class",
    "file": "backend/main_enhanced_prod.py",
    "signature": "class HealthResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "BettingOpportunity",
    "type": "class",
    "file": "backend/main_enhanced_prod.py",
    "signature": "class BettingOpportunity(BaseModel):",
    "docstring": ""
  },
  {
    "name": "BettingOpportunity",
    "type": "class",
    "file": "backend/main_enhanced_prod.py",
    "signature": "class BettingOpportunity(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PredictionRequest",
    "type": "class",
    "file": "backend/main_enhanced_prod.py",
    "signature": "class PredictionRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PredictionRequest",
    "type": "class",
    "file": "backend/main_enhanced_prod.py",
    "signature": "class PredictionRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PredictionResponse",
    "type": "class",
    "file": "backend/main_enhanced_prod.py",
    "signature": "class PredictionResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PredictionResponse",
    "type": "class",
    "file": "backend/main_enhanced_prod.py",
    "signature": "class PredictionResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "rate_limit",
    "type": "function",
    "file": "backend/main_enhanced_prod.py",
    "signature": "def rate_limit(max_calls: int = 10, window_seconds: int = 60):",
    "docstring": ""
  },
  {
    "name": "calculate_kelly_criterion",
    "type": "function",
    "file": "backend/main_enhanced_prod.py",
    "signature": "def calculate_kelly_criterion(probability: float, odds: float) -> float:",
    "docstring": ""
  },
  {
    "name": "calculate_expected_value",
    "type": "function",
    "file": "backend/main_enhanced_prod.py",
    "signature": "def calculate_expected_value(probability: float, odds: float) -> float:",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/health\", response_model=Dict[str, Any])",
    "type": "endpoint",
    "file": "backend/main_enhanced_prod.py",
    "signature": "@app.get(\"/health\", response_model=Dict[str, Any])",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/health/detailed\", response_model=Dict[str, Any])",
    "type": "endpoint",
    "file": "backend/main_enhanced_prod.py",
    "signature": "@app.get(\"/health/detailed\", response_model=Dict[str, Any])",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v1/health\", response_model=HealthResponse)",
    "type": "endpoint",
    "file": "backend/main_enhanced_prod.py",
    "signature": "@app.get(\"/api/v1/health\", response_model=HealthResponse)",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v1/betting-opportunities\")",
    "type": "endpoint",
    "file": "backend/main_enhanced_prod.py",
    "signature": "@app.get(\"/api/v1/betting-opportunities\")",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/api/v1/predictions\", response_model=PredictionResponse)",
    "type": "endpoint",
    "file": "backend/main_enhanced_prod.py",
    "signature": "@app.post(\"/api/v1/predictions\", response_model=PredictionResponse)",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v1/predictions/{prediction_id}\")",
    "type": "endpoint",
    "file": "backend/main_enhanced_prod.py",
    "signature": "@app.get(\"/api/v1/predictions/{prediction_id}\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v1/sports\")",
    "type": "endpoint",
    "file": "backend/main_enhanced_prod.py",
    "signature": "@app.get(\"/api/v1/sports\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v1/analytics/performance\")",
    "type": "endpoint",
    "file": "backend/main_enhanced_prod.py",
    "signature": "@app.get(\"/api/v1/analytics/performance\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v1/news\")",
    "type": "endpoint",
    "file": "backend/main_enhanced_prod.py",
    "signature": "@app.get(\"/api/v1/news\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v1/live-games\")",
    "type": "endpoint",
    "file": "backend/main_enhanced_prod.py",
    "signature": "@app.get(\"/api/v1/live-games\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v1/data/unified-games/{sport}\")",
    "type": "endpoint",
    "file": "backend/main_enhanced_prod.py",
    "signature": "@app.get(\"/api/v1/data/unified-games/{sport}\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v1/data/player-props/{sport}\")",
    "type": "endpoint",
    "file": "backend/main_enhanced_prod.py",
    "signature": "@app.get(\"/api/v1/data/player-props/{sport}\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v1/data/unified-odds/{sport}\")",
    "type": "endpoint",
    "file": "backend/main_enhanced_prod.py",
    "signature": "@app.get(\"/api/v1/data/unified-odds/{sport}\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v1/data/player-stats/{game_id}\")",
    "type": "endpoint",
    "file": "backend/main_enhanced_prod.py",
    "signature": "@app.get(\"/api/v1/data/player-stats/{game_id}\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/v1/data/sports-news/{sport}\")",
    "type": "endpoint",
    "file": "backend/main_enhanced_prod.py",
    "signature": "@app.get(\"/api/v1/data/sports-news/{sport}\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/health\")",
    "type": "endpoint",
    "file": "backend/main_integrated.py",
    "signature": "@app.get(\"/health\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health\")",
    "type": "endpoint",
    "file": "backend/main_integrated.py",
    "signature": "@app.get(\"/api/health\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\")",
    "type": "endpoint",
    "file": "backend/main_integrated.py",
    "signature": "@app.get(\"/\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health/status\")",
    "type": "endpoint",
    "file": "backend/main_simple.py",
    "signature": "@app.get(\"/api/health/status\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/status\")",
    "type": "endpoint",
    "file": "backend/main_simple.py",
    "signature": "@app.get(\"/api/status\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\")",
    "type": "endpoint",
    "file": "backend/main_simple.py",
    "signature": "@app.get(\"/\")",
    "docstring": ""
  },
  {
    "name": "parse_memory_bank",
    "type": "function",
    "file": "backend/memory_bank.py",
    "signature": "def parse_memory_bank() -> Dict[str, List[str]]:",
    "docstring": ""
  },
  {
    "name": "update_progress",
    "type": "function",
    "file": "backend/memory_bank.py",
    "signature": "def update_progress(msg: str) -> None:",
    "docstring": ""
  },
  {
    "name": "log_action",
    "type": "function",
    "file": "backend/memory_bank.py",
    "signature": "def log_action(action: str, detail: Any = None) -> None:",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\")",
    "type": "endpoint",
    "file": "backend/minimal_backend.py",
    "signature": "@app.get(\"/\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/health\")",
    "type": "endpoint",
    "file": "backend/minimal_test.py",
    "signature": "@app.get(\"/health\")",
    "docstring": ""
  },
  {
    "name": "ModelServiceConfig",
    "type": "class",
    "file": "backend/model_service.py",
    "signature": "class ModelServiceConfig(BaseSettings):",
    "docstring": ""
  },
  {
    "name": "ModelServiceConfig",
    "type": "class",
    "file": "backend/model_service.py",
    "signature": "class ModelServiceConfig(BaseSettings):",
    "docstring": ""
  },
  {
    "name": "ModelMetadata",
    "type": "class",
    "file": "backend/model_service.py",
    "signature": "class ModelMetadata:",
    "docstring": ""
  },
  {
    "name": "ModelMetadata",
    "type": "class",
    "file": "backend/model_service.py",
    "signature": "class ModelMetadata:",
    "docstring": ""
  },
  {
    "name": "PredictionRequest",
    "type": "class",
    "file": "backend/model_service.py",
    "signature": "class PredictionRequest:",
    "docstring": ""
  },
  {
    "name": "PredictionRequest",
    "type": "class",
    "file": "backend/model_service.py",
    "signature": "class PredictionRequest:",
    "docstring": ""
  },
  {
    "name": "ModelPrediction",
    "type": "class",
    "file": "backend/model_service.py",
    "signature": "class ModelPrediction:",
    "docstring": ""
  },
  {
    "name": "ModelPrediction",
    "type": "class",
    "file": "backend/model_service.py",
    "signature": "class ModelPrediction:",
    "docstring": ""
  },
  {
    "name": "EnsemblePrediction",
    "type": "class",
    "file": "backend/model_service.py",
    "signature": "class EnsemblePrediction:",
    "docstring": ""
  },
  {
    "name": "EnsemblePrediction",
    "type": "class",
    "file": "backend/model_service.py",
    "signature": "class EnsemblePrediction:",
    "docstring": ""
  },
  {
    "name": "ModelLoader",
    "type": "class",
    "file": "backend/model_service.py",
    "signature": "class ModelLoader:",
    "docstring": ""
  },
  {
    "name": "ModelLoader",
    "type": "class",
    "file": "backend/model_service.py",
    "signature": "class ModelLoader:",
    "docstring": ""
  },
  {
    "name": "ModelInferenceEngine",
    "type": "class",
    "file": "backend/model_service.py",
    "signature": "class ModelInferenceEngine:",
    "docstring": ""
  },
  {
    "name": "ModelInferenceEngine",
    "type": "class",
    "file": "backend/model_service.py",
    "signature": "class ModelInferenceEngine:",
    "docstring": ""
  },
  {
    "name": "ModelService",
    "type": "class",
    "file": "backend/model_service.py",
    "signature": "class ModelService:",
    "docstring": ""
  },
  {
    "name": "ModelService",
    "type": "class",
    "file": "backend/model_service.py",
    "signature": "class ModelService:",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/health\")",
    "type": "endpoint",
    "file": "backend/model_service.py",
    "signature": "@app.get(\"/health\")",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/predict\")",
    "type": "endpoint",
    "file": "backend/model_service.py",
    "signature": "@app.post(\"/predict\")",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/analyze-prop\")",
    "type": "endpoint",
    "file": "backend/model_service.py",
    "signature": "@app.post(\"/analyze-prop\")",
    "docstring": ""
  },
  {
    "name": "AsyncDatabaseInterface",
    "type": "class",
    "file": "backend/monitoring_service.py",
    "signature": "class AsyncDatabaseInterface:",
    "docstring": ""
  },
  {
    "name": "AsyncDatabaseInterface",
    "type": "class",
    "file": "backend/monitoring_service.py",
    "signature": "class AsyncDatabaseInterface:",
    "docstring": ""
  },
  {
    "name": "PerformanceData",
    "type": "class",
    "file": "backend/monitoring_service.py",
    "signature": "class PerformanceData(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PerformanceData",
    "type": "class",
    "file": "backend/monitoring_service.py",
    "signature": "class PerformanceData(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PerformanceAlert",
    "type": "class",
    "file": "backend/monitoring_service.py",
    "signature": "class PerformanceAlert(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PerformanceAlert",
    "type": "class",
    "file": "backend/monitoring_service.py",
    "signature": "class PerformanceAlert(BaseModel):",
    "docstring": ""
  },
  {
    "name": "MonitoringService",
    "type": "class",
    "file": "backend/monitoring_service.py",
    "signature": "class MonitoringService:",
    "docstring": ""
  },
  {
    "name": "MonitoringService",
    "type": "class",
    "file": "backend/monitoring_service.py",
    "signature": "class MonitoringService:",
    "docstring": ""
  },
  {
    "name": "MetaLearningPerformanceTester",
    "type": "class",
    "file": "backend/performance_test_meta_learning.py",
    "signature": "class MetaLearningPerformanceTester:",
    "docstring": ""
  },
  {
    "name": "MetaLearningPerformanceTester",
    "type": "class",
    "file": "backend/performance_test_meta_learning.py",
    "signature": "class MetaLearningPerformanceTester:",
    "docstring": ""
  },
  {
    "name": "main",
    "type": "function",
    "file": "backend/performance_test_meta_learning.py",
    "signature": "def main():",
    "docstring": ""
  },
  {
    "name": "NASPerformanceTester",
    "type": "class",
    "file": "backend/performance_test_nas.py",
    "signature": "class NASPerformanceTester:",
    "docstring": ""
  },
  {
    "name": "NASPerformanceTester",
    "type": "class",
    "file": "backend/performance_test_nas.py",
    "signature": "class NASPerformanceTester:",
    "docstring": ""
  },
  {
    "name": "main",
    "type": "function",
    "file": "backend/performance_test_nas.py",
    "signature": "def main():",
    "docstring": ""
  },
  {
    "name": "PerformanceTester",
    "type": "class",
    "file": "backend/performance_test_quantum.py",
    "signature": "class PerformanceTester:",
    "docstring": ""
  },
  {
    "name": "PerformanceTester",
    "type": "class",
    "file": "backend/performance_test_quantum.py",
    "signature": "class PerformanceTester:",
    "docstring": ""
  },
  {
    "name": "main",
    "type": "function",
    "file": "backend/performance_test_quantum.py",
    "signature": "def main():",
    "docstring": ""
  },
  {
    "name": "RealMetricsPerformanceTester",
    "type": "class",
    "file": "backend/performance_test_real_metrics.py",
    "signature": "class RealMetricsPerformanceTester:",
    "docstring": ""
  },
  {
    "name": "RealMetricsPerformanceTester",
    "type": "class",
    "file": "backend/performance_test_real_metrics.py",
    "signature": "class RealMetricsPerformanceTester:",
    "docstring": ""
  },
  {
    "name": "SystemStatus",
    "type": "class",
    "file": "backend/phase8_integration_manager.py",
    "signature": "class SystemStatus(str, Enum):",
    "docstring": ""
  },
  {
    "name": "SystemStatus",
    "type": "class",
    "file": "backend/phase8_integration_manager.py",
    "signature": "class SystemStatus(str, Enum):",
    "docstring": ""
  },
  {
    "name": "SystemHealthMetrics",
    "type": "class",
    "file": "backend/phase8_integration_manager.py",
    "signature": "class SystemHealthMetrics:",
    "docstring": ""
  },
  {
    "name": "SystemHealthMetrics",
    "type": "class",
    "file": "backend/phase8_integration_manager.py",
    "signature": "class SystemHealthMetrics:",
    "docstring": ""
  },
  {
    "name": "Phase8IntegrationManager",
    "type": "class",
    "file": "backend/phase8_integration_manager.py",
    "signature": "class Phase8IntegrationManager:",
    "docstring": ""
  },
  {
    "name": "Phase8IntegrationManager",
    "type": "class",
    "file": "backend/phase8_integration_manager.py",
    "signature": "class Phase8IntegrationManager:",
    "docstring": ""
  },
  {
    "name": "generate_phase9_completion_report",
    "type": "function",
    "file": "backend/phase9_completion_report.py",
    "signature": "def generate_phase9_completion_report() -> Dict[str, Any]:",
    "docstring": ""
  },
  {
    "name": "main",
    "type": "function",
    "file": "backend/phase9_completion_report.py",
    "signature": "def main():",
    "docstring": ""
  },
  {
    "name": "Phase6IntegrationTester",
    "type": "class",
    "file": "backend/phase_6_integration_test.py",
    "signature": "class Phase6IntegrationTester:",
    "docstring": ""
  },
  {
    "name": "Phase6IntegrationTester",
    "type": "class",
    "file": "backend/phase_6_integration_test.py",
    "signature": "class Phase6IntegrationTester:",
    "docstring": ""
  },
  {
    "name": "SupervisorCoordinationSystem",
    "type": "class",
    "file": "backend/phase_7_production_launch.py",
    "signature": "class SupervisorCoordinationSystem:",
    "docstring": ""
  },
  {
    "name": "SupervisorCoordinationSystem",
    "type": "class",
    "file": "backend/phase_7_production_launch.py",
    "signature": "class SupervisorCoordinationSystem:",
    "docstring": ""
  },
  {
    "name": "Phase7ProductionLauncher",
    "type": "class",
    "file": "backend/phase_7_production_launch.py",
    "signature": "class Phase7ProductionLauncher:",
    "docstring": ""
  },
  {
    "name": "Phase7ProductionLauncher",
    "type": "class",
    "file": "backend/phase_7_production_launch.py",
    "signature": "class Phase7ProductionLauncher:",
    "docstring": ""
  },
  {
    "name": "PredictionResponse",
    "type": "class",
    "file": "backend/prediction_api.py",
    "signature": "class PredictionResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PredictionResponse",
    "type": "class",
    "file": "backend/prediction_api.py",
    "signature": "class PredictionResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "SystemHealthResponse",
    "type": "class",
    "file": "backend/prediction_api.py",
    "signature": "class SystemHealthResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "SystemHealthResponse",
    "type": "class",
    "file": "backend/prediction_api.py",
    "signature": "class SystemHealthResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PredictionRequest",
    "type": "class",
    "file": "backend/prediction_api.py",
    "signature": "class PredictionRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PredictionRequest",
    "type": "class",
    "file": "backend/prediction_api.py",
    "signature": "class PredictionRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\")",
    "type": "endpoint",
    "file": "backend/prediction_api.py",
    "signature": "@app.get(\"/\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/health\")",
    "type": "endpoint",
    "file": "backend/prediction_api.py",
    "signature": "@app.get(\"/health\")",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/api/predictions/prizepicks/live\", response_model=List[PredictionResponse])",
    "type": "endpoint",
    "file": "backend/prediction_api.py",
    "signature": "@app.post(\"/api/predictions/prizepicks/live\", response_model=List[PredictionResponse])",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/predictions/prizepicks/live\", response_model=List[PredictionResponse])",
    "type": "endpoint",
    "file": "backend/prediction_api.py",
    "signature": "@app.get(\"/api/predictions/prizepicks/live\", response_model=List[PredictionResponse])",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/predictions/prizepicks/health\", response_model=SystemHealthResponse)",
    "type": "endpoint",
    "file": "backend/prediction_api.py",
    "signature": "@app.get(\"/api/predictions/prizepicks/health\", response_model=SystemHealthResponse)",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/predictions/prizepicks/explain/{prop_id}\")",
    "type": "endpoint",
    "file": "backend/prediction_api.py",
    "signature": "@app.get(\"/api/predictions/prizepicks/explain/{prop_id}\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/predictions/prizepicks/models\")",
    "type": "endpoint",
    "file": "backend/prediction_api.py",
    "signature": "@app.get(\"/api/predictions/prizepicks/models\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/predictions/prizepicks/stats\")",
    "type": "endpoint",
    "file": "backend/prediction_api.py",
    "signature": "@app.get(\"/api/predictions/prizepicks/stats\")",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/api/predictions/prizepicks/train\")",
    "type": "endpoint",
    "file": "backend/prediction_api.py",
    "signature": "@app.post(\"/api/predictions/prizepicks/train\")",
    "docstring": ""
  },
  {
    "name": "UnifiedPredictionResponse",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class UnifiedPredictionResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UnifiedPredictionResponse",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class UnifiedPredictionResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PredictionRequest",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class PredictionRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PredictionRequest",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class PredictionRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ModelPrediction",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class ModelPrediction(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ModelPrediction",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class ModelPrediction(BaseModel):",
    "docstring": ""
  },
  {
    "name": "RiskAssessment",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class RiskAssessment(BaseModel):",
    "docstring": ""
  },
  {
    "name": "RiskAssessment",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class RiskAssessment(BaseModel):",
    "docstring": ""
  },
  {
    "name": "MarketAnalysis",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class MarketAnalysis(BaseModel):",
    "docstring": ""
  },
  {
    "name": "MarketAnalysis",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class MarketAnalysis(BaseModel):",
    "docstring": ""
  },
  {
    "name": "EnhancedMLModel",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class EnhancedMLModel:",
    "docstring": ""
  },
  {
    "name": "EnhancedMLModel",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class EnhancedMLModel:",
    "docstring": ""
  },
  {
    "name": "XGBoostModel",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class XGBoostModel(EnhancedMLModel):",
    "docstring": ""
  },
  {
    "name": "XGBoostModel",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class XGBoostModel(EnhancedMLModel):",
    "docstring": ""
  },
  {
    "name": "NeuralNetworkModel",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class NeuralNetworkModel(EnhancedMLModel):",
    "docstring": ""
  },
  {
    "name": "NeuralNetworkModel",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class NeuralNetworkModel(EnhancedMLModel):",
    "docstring": ""
  },
  {
    "name": "RandomForestModel",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class RandomForestModel(EnhancedMLModel):",
    "docstring": ""
  },
  {
    "name": "RandomForestModel",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class RandomForestModel(EnhancedMLModel):",
    "docstring": ""
  },
  {
    "name": "GradientBoostingModel",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class GradientBoostingModel(EnhancedMLModel):",
    "docstring": ""
  },
  {
    "name": "GradientBoostingModel",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class GradientBoostingModel(EnhancedMLModel):",
    "docstring": ""
  },
  {
    "name": "UltraEnhancedPredictionEngine",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class UltraEnhancedPredictionEngine:",
    "docstring": ""
  },
  {
    "name": "UltraEnhancedPredictionEngine",
    "type": "class",
    "file": "backend/prediction_engine.py",
    "signature": "class UltraEnhancedPredictionEngine:",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/predict\", response_model=UnifiedPredictionResponse)",
    "type": "endpoint",
    "file": "backend/prediction_engine.py",
    "signature": "@router.post(\"/predict\", response_model=UnifiedPredictionResponse)",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/models/status\")",
    "type": "endpoint",
    "file": "backend/prediction_engine.py",
    "signature": "@router.get(\"/models/status\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/health\")",
    "type": "endpoint",
    "file": "backend/prediction_engine.py",
    "signature": "@router.get(\"/health\")",
    "docstring": ""
  },
  {
    "name": "LazyMLLoader",
    "type": "class",
    "file": "backend/production_fix.py",
    "signature": "class LazyMLLoader:",
    "docstring": ""
  },
  {
    "name": "LazyMLLoader",
    "type": "class",
    "file": "backend/production_fix.py",
    "signature": "class LazyMLLoader:",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health/status\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/health/status\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/health\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/prizepicks/props\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/prizepicks/props\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/ml/status\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/ml/status\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/status\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/status\")",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/api/ml/start-loading\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.post(\"/api/ml/start-loading\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/ml/models/{model_name}\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/ml/models/{model_name}\")",
    "docstring": ""
  },
  {
    "name": "PrizePicksDataService",
    "type": "class",
    "file": "backend/production_fix.py",
    "signature": "class PrizePicksDataService:",
    "docstring": ""
  },
  {
    "name": "PrizePicksDataService",
    "type": "class",
    "file": "backend/production_fix.py",
    "signature": "class PrizePicksDataService:",
    "docstring": ""
  },
  {
    "name": "MLPredictionEngine",
    "type": "class",
    "file": "backend/production_fix.py",
    "signature": "class MLPredictionEngine:",
    "docstring": ""
  },
  {
    "name": "MLPredictionEngine",
    "type": "class",
    "file": "backend/production_fix.py",
    "signature": "class MLPredictionEngine:",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/players/{player_id}/stats\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/players/{player_id}/stats\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/players/sport/{sport}\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/players/sport/{sport}\")",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/api/predictions/generate\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.post(\"/api/predictions/generate\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/predictions/batch/{sport}\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/predictions/batch/{sport}\")",
    "docstring": ""
  },
  {
    "name": "CoreMLEngine",
    "type": "class",
    "file": "backend/production_fix.py",
    "signature": "class CoreMLEngine:",
    "docstring": ""
  },
  {
    "name": "CoreMLEngine",
    "type": "class",
    "file": "backend/production_fix.py",
    "signature": "class CoreMLEngine:",
    "docstring": ""
  },
  {
    "name": "BettingAnalyzer",
    "type": "class",
    "file": "backend/production_fix.py",
    "signature": "class BettingAnalyzer:",
    "docstring": ""
  },
  {
    "name": "BettingAnalyzer",
    "type": "class",
    "file": "backend/production_fix.py",
    "signature": "class BettingAnalyzer:",
    "docstring": ""
  },
  {
    "name": "RiskManager",
    "type": "class",
    "file": "backend/production_fix.py",
    "signature": "class RiskManager:",
    "docstring": ""
  },
  {
    "name": "RiskManager",
    "type": "class",
    "file": "backend/production_fix.py",
    "signature": "class RiskManager:",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/betting/recommendations\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/betting/recommendations\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/betting/quick-picks\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/betting/quick-picks\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/betting/analysis/{player_id}\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/betting/analysis/{player_id}\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/betting/portfolio\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/betting/portfolio\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/betting/opportunities\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/betting/opportunities\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/betting/metrics\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/betting/metrics\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/betting/history\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/betting/history\")",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/api/betting/place\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.post(\"/api/betting/place\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/players\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/players\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/projections\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/projections\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/prizepicks/props/enhanced\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/prizepicks/props/enhanced\")",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/api/propollama/chat\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.post(\"/api/propollama/chat\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/propollama/status\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/propollama/status\")",
    "docstring": ""
  },
  {
    "name": "UltimateBettingAnalyzer",
    "type": "class",
    "file": "backend/production_fix.py",
    "signature": "class UltimateBettingAnalyzer:",
    "docstring": ""
  },
  {
    "name": "UltimateBettingAnalyzer",
    "type": "class",
    "file": "backend/production_fix.py",
    "signature": "class UltimateBettingAnalyzer:",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/betting/ultimate-analysis\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/betting/ultimate-analysis\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/betting/real-time-props\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/betting/real-time-props\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/betting/best-bets-now\")",
    "type": "endpoint",
    "file": "backend/production_fix.py",
    "signature": "@app.get(\"/api/betting/best-bets-now\")",
    "docstring": ""
  },
  {
    "name": "ProductionSupervisorCoordinator",
    "type": "class",
    "file": "backend/production_operation_manager.py",
    "signature": "class ProductionSupervisorCoordinator:",
    "docstring": ""
  },
  {
    "name": "ProductionSupervisorCoordinator",
    "type": "class",
    "file": "backend/production_operation_manager.py",
    "signature": "class ProductionSupervisorCoordinator:",
    "docstring": ""
  },
  {
    "name": "ProductionOperationManager",
    "type": "class",
    "file": "backend/production_operation_manager.py",
    "signature": "class ProductionOperationManager:",
    "docstring": ""
  },
  {
    "name": "ProductionOperationManager",
    "type": "class",
    "file": "backend/production_operation_manager.py",
    "signature": "class ProductionOperationManager:",
    "docstring": ""
  },
  {
    "name": "QuantumEnhancedCoordinator",
    "type": "class",
    "file": "backend/quantum_enhanced_coordinator.py",
    "signature": "class QuantumEnhancedCoordinator:",
    "docstring": ""
  },
  {
    "name": "QuantumEnhancedCoordinator",
    "type": "class",
    "file": "backend/quantum_enhanced_coordinator.py",
    "signature": "class QuantumEnhancedCoordinator:",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\")",
    "type": "endpoint",
    "file": "backend/quick_backend.py",
    "signature": "@app.get(\"/\")",
    "docstring": ""
  },
  {
    "name": "root",
    "type": "function",
    "file": "backend/quick_backend.py",
    "signature": "def root():",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/health\")",
    "type": "endpoint",
    "file": "backend/quick_backend.py",
    "signature": "@app.get(\"/health\")",
    "docstring": ""
  },
  {
    "name": "health",
    "type": "function",
    "file": "backend/quick_backend.py",
    "signature": "def health():",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health\")",
    "type": "endpoint",
    "file": "backend/quick_backend.py",
    "signature": "@app.get(\"/api/health\")",
    "docstring": ""
  },
  {
    "name": "api_health",
    "type": "function",
    "file": "backend/quick_backend.py",
    "signature": "def api_health():",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health/status\")",
    "type": "endpoint",
    "file": "backend/quick_backend.py",
    "signature": "@app.get(\"/api/health/status\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/prizepicks/props\")",
    "type": "endpoint",
    "file": "backend/quick_backend.py",
    "signature": "@app.get(\"/api/prizepicks/props\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/betting-opportunities\")",
    "type": "endpoint",
    "file": "backend/quick_backend.py",
    "signature": "@app.get(\"/api/betting-opportunities\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/predictions/prizepicks\")",
    "type": "endpoint",
    "file": "backend/quick_backend.py",
    "signature": "@app.get(\"/api/predictions/prizepicks\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/analytics/summary\")",
    "type": "endpoint",
    "file": "backend/quick_backend.py",
    "signature": "@app.get(\"/api/analytics/summary\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/ultra-accuracy/model-performance\")",
    "type": "endpoint",
    "file": "backend/quick_backend.py",
    "signature": "@app.get(\"/api/ultra-accuracy/model-performance\")",
    "docstring": ""
  },
  {
    "name": "model_performance",
    "type": "function",
    "file": "backend/quick_backend.py",
    "signature": "def model_performance():",
    "docstring": ""
  },
  {
    "name": "AccuracyThreshold",
    "type": "class",
    "file": "backend/realtime_accuracy_monitor.py",
    "signature": "class AccuracyThreshold(str, Enum):",
    "docstring": ""
  },
  {
    "name": "AccuracyThreshold",
    "type": "class",
    "file": "backend/realtime_accuracy_monitor.py",
    "signature": "class AccuracyThreshold(str, Enum):",
    "docstring": ""
  },
  {
    "name": "OptimizationTrigger",
    "type": "class",
    "file": "backend/realtime_accuracy_monitor.py",
    "signature": "class OptimizationTrigger(str, Enum):",
    "docstring": ""
  },
  {
    "name": "OptimizationTrigger",
    "type": "class",
    "file": "backend/realtime_accuracy_monitor.py",
    "signature": "class OptimizationTrigger(str, Enum):",
    "docstring": ""
  },
  {
    "name": "MonitoringMetric",
    "type": "class",
    "file": "backend/realtime_accuracy_monitor.py",
    "signature": "class MonitoringMetric(str, Enum):",
    "docstring": ""
  },
  {
    "name": "MonitoringMetric",
    "type": "class",
    "file": "backend/realtime_accuracy_monitor.py",
    "signature": "class MonitoringMetric(str, Enum):",
    "docstring": ""
  },
  {
    "name": "AccuracyAlert",
    "type": "class",
    "file": "backend/realtime_accuracy_monitor.py",
    "signature": "class AccuracyAlert:",
    "docstring": ""
  },
  {
    "name": "AccuracyAlert",
    "type": "class",
    "file": "backend/realtime_accuracy_monitor.py",
    "signature": "class AccuracyAlert:",
    "docstring": ""
  },
  {
    "name": "RealTimeAccuracyMetrics",
    "type": "class",
    "file": "backend/realtime_accuracy_monitor.py",
    "signature": "class RealTimeAccuracyMetrics:",
    "docstring": ""
  },
  {
    "name": "RealTimeAccuracyMetrics",
    "type": "class",
    "file": "backend/realtime_accuracy_monitor.py",
    "signature": "class RealTimeAccuracyMetrics:",
    "docstring": ""
  },
  {
    "name": "AccuracyOptimizationResult",
    "type": "class",
    "file": "backend/realtime_accuracy_monitor.py",
    "signature": "class AccuracyOptimizationResult:",
    "docstring": ""
  },
  {
    "name": "AccuracyOptimizationResult",
    "type": "class",
    "file": "backend/realtime_accuracy_monitor.py",
    "signature": "class AccuracyOptimizationResult:",
    "docstring": ""
  },
  {
    "name": "RealTimeAccuracyMonitor",
    "type": "class",
    "file": "backend/realtime_accuracy_monitor.py",
    "signature": "class RealTimeAccuracyMonitor:",
    "docstring": ""
  },
  {
    "name": "RealTimeAccuracyMonitor",
    "type": "class",
    "file": "backend/realtime_accuracy_monitor.py",
    "signature": "class RealTimeAccuracyMonitor:",
    "docstring": ""
  },
  {
    "name": "StreamType",
    "type": "class",
    "file": "backend/realtime_engine.py",
    "signature": "class StreamType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "StreamType",
    "type": "class",
    "file": "backend/realtime_engine.py",
    "signature": "class StreamType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "UpdatePriority",
    "type": "class",
    "file": "backend/realtime_engine.py",
    "signature": "class UpdatePriority(str, Enum):",
    "docstring": ""
  },
  {
    "name": "UpdatePriority",
    "type": "class",
    "file": "backend/realtime_engine.py",
    "signature": "class UpdatePriority(str, Enum):",
    "docstring": ""
  },
  {
    "name": "StreamMessage",
    "type": "class",
    "file": "backend/realtime_engine.py",
    "signature": "class StreamMessage:",
    "docstring": ""
  },
  {
    "name": "StreamMessage",
    "type": "class",
    "file": "backend/realtime_engine.py",
    "signature": "class StreamMessage:",
    "docstring": ""
  },
  {
    "name": "StreamSubscription",
    "type": "class",
    "file": "backend/realtime_engine.py",
    "signature": "class StreamSubscription:",
    "docstring": ""
  },
  {
    "name": "StreamSubscription",
    "type": "class",
    "file": "backend/realtime_engine.py",
    "signature": "class StreamSubscription:",
    "docstring": ""
  },
  {
    "name": "StreamAggregator",
    "type": "class",
    "file": "backend/realtime_engine.py",
    "signature": "class StreamAggregator:",
    "docstring": ""
  },
  {
    "name": "StreamAggregator",
    "type": "class",
    "file": "backend/realtime_engine.py",
    "signature": "class StreamAggregator:",
    "docstring": ""
  },
  {
    "name": "PredictionTriggerEngine",
    "type": "class",
    "file": "backend/realtime_engine.py",
    "signature": "class PredictionTriggerEngine:",
    "docstring": ""
  },
  {
    "name": "PredictionTriggerEngine",
    "type": "class",
    "file": "backend/realtime_engine.py",
    "signature": "class PredictionTriggerEngine:",
    "docstring": ""
  },
  {
    "name": "RealTimeStreamManager",
    "type": "class",
    "file": "backend/realtime_engine.py",
    "signature": "class RealTimeStreamManager:",
    "docstring": ""
  },
  {
    "name": "RealTimeStreamManager",
    "type": "class",
    "file": "backend/realtime_engine.py",
    "signature": "class RealTimeStreamManager:",
    "docstring": ""
  },
  {
    "name": "RecursiveIntelligenceFunction",
    "type": "class",
    "file": "backend/recursive_intelligence_coordinator.py",
    "signature": "class RecursiveIntelligenceFunction:",
    "docstring": ""
  },
  {
    "name": "RecursiveIntelligenceFunction",
    "type": "class",
    "file": "backend/recursive_intelligence_coordinator.py",
    "signature": "class RecursiveIntelligenceFunction:",
    "docstring": ""
  },
  {
    "name": "AdaptiveLearningCycle",
    "type": "class",
    "file": "backend/recursive_intelligence_coordinator.py",
    "signature": "class AdaptiveLearningCycle:",
    "docstring": ""
  },
  {
    "name": "AdaptiveLearningCycle",
    "type": "class",
    "file": "backend/recursive_intelligence_coordinator.py",
    "signature": "class AdaptiveLearningCycle:",
    "docstring": ""
  },
  {
    "name": "HumanAICognitiveSynchronization",
    "type": "class",
    "file": "backend/recursive_intelligence_coordinator.py",
    "signature": "class HumanAICognitiveSynchronization:",
    "docstring": ""
  },
  {
    "name": "HumanAICognitiveSynchronization",
    "type": "class",
    "file": "backend/recursive_intelligence_coordinator.py",
    "signature": "class HumanAICognitiveSynchronization:",
    "docstring": ""
  },
  {
    "name": "RecursiveIntelligenceCoordinator",
    "type": "class",
    "file": "backend/recursive_intelligence_coordinator.py",
    "signature": "class RecursiveIntelligenceCoordinator:",
    "docstring": ""
  },
  {
    "name": "RecursiveIntelligenceCoordinator",
    "type": "class",
    "file": "backend/recursive_intelligence_coordinator.py",
    "signature": "class RecursiveIntelligenceCoordinator:",
    "docstring": ""
  },
  {
    "name": "RevolutionaryStrategy",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class RevolutionaryStrategy(str, Enum):",
    "docstring": ""
  },
  {
    "name": "RevolutionaryStrategy",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class RevolutionaryStrategy(str, Enum):",
    "docstring": ""
  },
  {
    "name": "RevolutionaryPrediction",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class RevolutionaryPrediction:",
    "docstring": ""
  },
  {
    "name": "RevolutionaryPrediction",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class RevolutionaryPrediction:",
    "docstring": ""
  },
  {
    "name": "NeuromorphicSpikingNetwork",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class NeuromorphicSpikingNetwork(nn.Module):",
    "docstring": ""
  },
  {
    "name": "NeuromorphicSpikingNetwork",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class NeuromorphicSpikingNetwork(nn.Module):",
    "docstring": ""
  },
  {
    "name": "PhysicsInformedNeuralNetwork",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class PhysicsInformedNeuralNetwork(nn.Module):",
    "docstring": ""
  },
  {
    "name": "PhysicsInformedNeuralNetwork",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class PhysicsInformedNeuralNetwork(nn.Module):",
    "docstring": ""
  },
  {
    "name": "CausalInferenceModule",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class CausalInferenceModule(nn.Module):",
    "docstring": ""
  },
  {
    "name": "CausalInferenceModule",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class CausalInferenceModule(nn.Module):",
    "docstring": ""
  },
  {
    "name": "GeometricManifoldNetwork",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class GeometricManifoldNetwork(nn.Module):",
    "docstring": ""
  },
  {
    "name": "GeometricManifoldNetwork",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class GeometricManifoldNetwork(nn.Module):",
    "docstring": ""
  },
  {
    "name": "MambaStateSpaceModel",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class MambaStateSpaceModel(nn.Module):",
    "docstring": ""
  },
  {
    "name": "MambaStateSpaceModel",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class MambaStateSpaceModel(nn.Module):",
    "docstring": ""
  },
  {
    "name": "TopologicalPersistenceNetwork",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class TopologicalPersistenceNetwork(nn.Module):",
    "docstring": ""
  },
  {
    "name": "TopologicalPersistenceNetwork",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class TopologicalPersistenceNetwork(nn.Module):",
    "docstring": ""
  },
  {
    "name": "GraphTransformerAttention",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class GraphTransformerAttention(nn.Module):",
    "docstring": ""
  },
  {
    "name": "GraphTransformerAttention",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class GraphTransformerAttention(nn.Module):",
    "docstring": ""
  },
  {
    "name": "RevolutionaryAccuracyEngine",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class RevolutionaryAccuracyEngine:",
    "docstring": ""
  },
  {
    "name": "RevolutionaryAccuracyEngine",
    "type": "class",
    "file": "backend/revolutionary_accuracy_engine.py",
    "signature": "class RevolutionaryAccuracyEngine:",
    "docstring": ""
  },
  {
    "name": "RevolutionaryPredictionRequest",
    "type": "class",
    "file": "backend/revolutionary_api.py",
    "signature": "class RevolutionaryPredictionRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "RevolutionaryPredictionRequest",
    "type": "class",
    "file": "backend/revolutionary_api.py",
    "signature": "class RevolutionaryPredictionRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "RevolutionaryPredictionResponse",
    "type": "class",
    "file": "backend/revolutionary_api.py",
    "signature": "class RevolutionaryPredictionResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "RevolutionaryPredictionResponse",
    "type": "class",
    "file": "backend/revolutionary_api.py",
    "signature": "class RevolutionaryPredictionResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ModelAnalysisRequest",
    "type": "class",
    "file": "backend/revolutionary_api.py",
    "signature": "class ModelAnalysisRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ModelAnalysisRequest",
    "type": "class",
    "file": "backend/revolutionary_api.py",
    "signature": "class ModelAnalysisRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/predict/revolutionary\", response_model=RevolutionaryPredictionResponse)",
    "type": "endpoint",
    "file": "backend/revolutionary_api.py",
    "signature": "@router.post(\"/predict/revolutionary\", response_model=RevolutionaryPredictionResponse)",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/analyze/manifold-structure\")",
    "type": "endpoint",
    "file": "backend/revolutionary_api.py",
    "signature": "@router.post(\"/analyze/manifold-structure\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/analyze/causal-discovery\")",
    "type": "endpoint",
    "file": "backend/revolutionary_api.py",
    "signature": "@router.post(\"/analyze/causal-discovery\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/analyze/topological-features\")",
    "type": "endpoint",
    "file": "backend/revolutionary_api.py",
    "signature": "@router.post(\"/analyze/topological-features\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/research/breakthrough-summary\")",
    "type": "endpoint",
    "file": "backend/revolutionary_api.py",
    "signature": "@router.get(\"/research/breakthrough-summary\")",
    "docstring": ""
  },
  {
    "name": "estimate_intrinsic_dimensionality",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def estimate_intrinsic_dimensionality(X: np.ndarray) -> int:",
    "docstring": ""
  },
  {
    "name": "compute_manifold_curvature",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def compute_manifold_curvature(X: np.ndarray) -> np.ndarray:",
    "docstring": ""
  },
  {
    "name": "analyze_manifold_topology",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def analyze_manifold_topology(X: np.ndarray) -> Dict[str, Any]:",
    "docstring": ""
  },
  {
    "name": "assess_manifold_quality",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def assess_manifold_quality(X: np.ndarray) -> Dict[str, float]:",
    "docstring": ""
  },
  {
    "name": "generate_geometric_insights",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def generate_geometric_insights(X: np.ndarray, intrinsic_dim: int) -> List[str]:",
    "docstring": ""
  },
  {
    "name": "discover_causal_graph",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def discover_causal_graph(data: List[Dict]) -> Dict[str, Any]:",
    "docstring": ""
  },
  {
    "name": "estimate_causal_effects",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def estimate_causal_effects(data: List[Dict], graph: Dict) -> Dict[str, float]:",
    "docstring": ""
  },
  {
    "name": "identify_confounders",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def identify_confounders(graph: Dict) -> List[str]:",
    "docstring": ""
  },
  {
    "name": "identify_mediators",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def identify_mediators(graph: Dict) -> List[str]:",
    "docstring": ""
  },
  {
    "name": "analyze_causal_pathways",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def analyze_causal_pathways(graph: Dict) -> List[Dict[str, Any]]:",
    "docstring": ""
  },
  {
    "name": "generate_intervention_recommendations",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def generate_intervention_recommendations(graph: Dict, effects: Dict) -> List[str]:",
    "docstring": ""
  },
  {
    "name": "compute_causal_strength_matrix",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def compute_causal_strength_matrix(data: List[Dict]) -> List[List[float]]:",
    "docstring": ""
  },
  {
    "name": "check_backdoor_criteria",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def check_backdoor_criteria(graph: Dict) -> Dict[str, bool]:",
    "docstring": ""
  },
  {
    "name": "check_frontdoor_criteria",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def check_frontdoor_criteria(graph: Dict) -> Dict[str, bool]:",
    "docstring": ""
  },
  {
    "name": "compute_persistence_diagrams",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def compute_persistence_diagrams(X: np.ndarray) -> Dict[str, List]:",
    "docstring": ""
  },
  {
    "name": "compute_betti_numbers",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def compute_betti_numbers(diagrams: Dict) -> Dict[str, int]:",
    "docstring": ""
  },
  {
    "name": "extract_topological_features",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def extract_topological_features(diagrams: Dict) -> Dict[str, float]:",
    "docstring": ""
  },
  {
    "name": "compute_persistence_landscapes",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def compute_persistence_landscapes(diagrams: Dict) -> Dict[str, List]:",
    "docstring": ""
  },
  {
    "name": "compute_topological_entropy",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def compute_topological_entropy(diagrams: Dict) -> float:",
    "docstring": ""
  },
  {
    "name": "compute_bottleneck_distance",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def compute_bottleneck_distance(diagrams: Dict) -> float:",
    "docstring": ""
  },
  {
    "name": "compute_wasserstein_distance",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def compute_wasserstein_distance(diagrams: Dict) -> float:",
    "docstring": ""
  },
  {
    "name": "assess_topological_stability",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def assess_topological_stability(X: np.ndarray) -> Dict[str, float]:",
    "docstring": ""
  },
  {
    "name": "compute_topological_complexity",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def compute_topological_complexity(diagrams: Dict) -> float:",
    "docstring": ""
  },
  {
    "name": "identify_structural_patterns",
    "type": "function",
    "file": "backend/revolutionary_api.py",
    "signature": "def identify_structural_patterns(diagrams: Dict) -> List[str]:",
    "docstring": ""
  },
  {
    "name": "RecursiveIntelligenceCoordinator",
    "type": "class",
    "file": "backend/riai_coordinator.py",
    "signature": "class RecursiveIntelligenceCoordinator:",
    "docstring": ""
  },
  {
    "name": "RecursiveIntelligenceCoordinator",
    "type": "class",
    "file": "backend/riai_coordinator.py",
    "signature": "class RecursiveIntelligenceCoordinator:",
    "docstring": ""
  },
  {
    "name": "RiskLevel",
    "type": "class",
    "file": "backend/risk_management.py",
    "signature": "class RiskLevel(str, Enum):",
    "docstring": ""
  },
  {
    "name": "RiskLevel",
    "type": "class",
    "file": "backend/risk_management.py",
    "signature": "class RiskLevel(str, Enum):",
    "docstring": ""
  },
  {
    "name": "BettingStrategy",
    "type": "class",
    "file": "backend/risk_management.py",
    "signature": "class BettingStrategy(str, Enum):",
    "docstring": ""
  },
  {
    "name": "BettingStrategy",
    "type": "class",
    "file": "backend/risk_management.py",
    "signature": "class BettingStrategy(str, Enum):",
    "docstring": ""
  },
  {
    "name": "RiskMetrics",
    "type": "class",
    "file": "backend/risk_management.py",
    "signature": "class RiskMetrics:",
    "docstring": ""
  },
  {
    "name": "RiskMetrics",
    "type": "class",
    "file": "backend/risk_management.py",
    "signature": "class RiskMetrics:",
    "docstring": ""
  },
  {
    "name": "PositionSize",
    "type": "class",
    "file": "backend/risk_management.py",
    "signature": "class PositionSize:",
    "docstring": ""
  },
  {
    "name": "PositionSize",
    "type": "class",
    "file": "backend/risk_management.py",
    "signature": "class PositionSize:",
    "docstring": ""
  },
  {
    "name": "PortfolioOptimization",
    "type": "class",
    "file": "backend/risk_management.py",
    "signature": "class PortfolioOptimization:",
    "docstring": ""
  },
  {
    "name": "PortfolioOptimization",
    "type": "class",
    "file": "backend/risk_management.py",
    "signature": "class PortfolioOptimization:",
    "docstring": ""
  },
  {
    "name": "KellyCriterionEngine",
    "type": "class",
    "file": "backend/risk_management.py",
    "signature": "class KellyCriterionEngine:",
    "docstring": ""
  },
  {
    "name": "KellyCriterionEngine",
    "type": "class",
    "file": "backend/risk_management.py",
    "signature": "class KellyCriterionEngine:",
    "docstring": ""
  },
  {
    "name": "RiskAssessmentEngine",
    "type": "class",
    "file": "backend/risk_management.py",
    "signature": "class RiskAssessmentEngine:",
    "docstring": ""
  },
  {
    "name": "RiskAssessmentEngine",
    "type": "class",
    "file": "backend/risk_management.py",
    "signature": "class RiskAssessmentEngine:",
    "docstring": ""
  },
  {
    "name": "PortfolioOptimizer",
    "type": "class",
    "file": "backend/risk_management.py",
    "signature": "class PortfolioOptimizer:",
    "docstring": ""
  },
  {
    "name": "PortfolioOptimizer",
    "type": "class",
    "file": "backend/risk_management.py",
    "signature": "class PortfolioOptimizer:",
    "docstring": ""
  },
  {
    "name": "UltraRiskManagementEngine",
    "type": "class",
    "file": "backend/risk_management.py",
    "signature": "class UltraRiskManagementEngine:",
    "docstring": ""
  },
  {
    "name": "UltraRiskManagementEngine",
    "type": "class",
    "file": "backend/risk_management.py",
    "signature": "class UltraRiskManagementEngine:",
    "docstring": ""
  },
  {
    "name": "SecurityManager",
    "type": "class",
    "file": "backend/security_config.py",
    "signature": "class SecurityManager:",
    "docstring": ""
  },
  {
    "name": "SecurityManager",
    "type": "class",
    "file": "backend/security_config.py",
    "signature": "class SecurityManager:",
    "docstring": ""
  },
  {
    "name": "get_current_user",
    "type": "function",
    "file": "backend/security_config.py",
    "signature": "def get_current_user(credentials: HTTPAuthorizationCredentials = security):",
    "docstring": ""
  },
  {
    "name": "require_roles",
    "type": "function",
    "file": "backend/security_config.py",
    "signature": "def require_roles(roles: list):",
    "docstring": ""
  },
  {
    "name": "RateLimiter",
    "type": "class",
    "file": "backend/security_config.py",
    "signature": "class RateLimiter:",
    "docstring": ""
  },
  {
    "name": "RateLimiter",
    "type": "class",
    "file": "backend/security_config.py",
    "signature": "class RateLimiter:",
    "docstring": ""
  },
  {
    "name": "SecurityVulnerability",
    "type": "class",
    "file": "backend/security_hardening.py",
    "signature": "class SecurityVulnerability:",
    "docstring": ""
  },
  {
    "name": "SecurityVulnerability",
    "type": "class",
    "file": "backend/security_hardening.py",
    "signature": "class SecurityVulnerability:",
    "docstring": ""
  },
  {
    "name": "SecurityHardeningSystem",
    "type": "class",
    "file": "backend/security_hardening.py",
    "signature": "class SecurityHardeningSystem:",
    "docstring": ""
  },
  {
    "name": "SecurityHardeningSystem",
    "type": "class",
    "file": "backend/security_hardening.py",
    "signature": "class SecurityHardeningSystem:",
    "docstring": ""
  },
  {
    "name": "main",
    "type": "function",
    "file": "backend/security_hardening.py",
    "signature": "def main():",
    "docstring": ""
  },
  {
    "name": "scan_security_vulnerabilities",
    "type": "function",
    "file": "backend/security_scanner.py",
    "signature": "def scan_security_vulnerabilities():",
    "docstring": ""
  },
  {
    "name": "SelfModifyingCodeEngine",
    "type": "class",
    "file": "backend/self_modifying_engine.py",
    "signature": "class SelfModifyingCodeEngine:",
    "docstring": ""
  },
  {
    "name": "SelfModifyingCodeEngine",
    "type": "class",
    "file": "backend/self_modifying_engine.py",
    "signature": "class SelfModifyingCodeEngine:",
    "docstring": ""
  },
  {
    "name": "DummyModel",
    "type": "class",
    "file": "backend/shap_explainer.py",
    "signature": "class DummyModel:",
    "docstring": ""
  },
  {
    "name": "DummyModel",
    "type": "class",
    "file": "backend/shap_explainer.py",
    "signature": "class DummyModel:",
    "docstring": ""
  },
  {
    "name": "ShapExplainer",
    "type": "class",
    "file": "backend/shap_explainer.py",
    "signature": "class ShapExplainer:",
    "docstring": ""
  },
  {
    "name": "ShapExplainer",
    "type": "class",
    "file": "backend/shap_explainer.py",
    "signature": "class ShapExplainer:",
    "docstring": ""
  },
  {
    "name": "CircuitBreakerState",
    "type": "class",
    "file": "backend/simple_backend.py",
    "signature": "class CircuitBreakerState(Enum):",
    "docstring": ""
  },
  {
    "name": "CircuitBreakerState",
    "type": "class",
    "file": "backend/simple_backend.py",
    "signature": "class CircuitBreakerState(Enum):",
    "docstring": ""
  },
  {
    "name": "CircuitBreaker",
    "type": "class",
    "file": "backend/simple_backend.py",
    "signature": "class CircuitBreaker:",
    "docstring": ""
  },
  {
    "name": "CircuitBreaker",
    "type": "class",
    "file": "backend/simple_backend.py",
    "signature": "class CircuitBreaker:",
    "docstring": ""
  },
  {
    "name": "ApiRateLimiter",
    "type": "class",
    "file": "backend/simple_backend.py",
    "signature": "class ApiRateLimiter:",
    "docstring": ""
  },
  {
    "name": "ApiRateLimiter",
    "type": "class",
    "file": "backend/simple_backend.py",
    "signature": "class ApiRateLimiter:",
    "docstring": ""
  },
  {
    "name": "get_cached_data",
    "type": "function",
    "file": "backend/simple_backend.py",
    "signature": "def get_cached_data(cache_key: str) -> Optional[Dict[str, Any]]:",
    "docstring": ""
  },
  {
    "name": "set_cached_data",
    "type": "function",
    "file": "backend/simple_backend.py",
    "signature": "def set_cached_data(cache_key: str, data: Any):",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\")",
    "type": "endpoint",
    "file": "backend/simple_backend.py",
    "signature": "@app.get(\"/\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/health\")",
    "type": "endpoint",
    "file": "backend/simple_backend.py",
    "signature": "@app.get(\"/health\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health\")",
    "type": "endpoint",
    "file": "backend/simple_backend.py",
    "signature": "@app.get(\"/api/health\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health/status\")",
    "type": "endpoint",
    "file": "backend/simple_backend.py",
    "signature": "@app.get(\"/api/health/status\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/prizepicks/props\")",
    "type": "endpoint",
    "file": "backend/simple_backend.py",
    "signature": "@app.get(\"/api/prizepicks/props\")",
    "docstring": ""
  },
  {
    "name": "get_realistic_line",
    "type": "function",
    "file": "backend/simple_backend.py",
    "signature": "def get_realistic_line(stat_type: str, sport: str) -> float:",
    "docstring": ""
  },
  {
    "name": "get_opponent",
    "type": "function",
    "file": "backend/simple_backend.py",
    "signature": "def get_opponent(team: str) -> str:",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/prizepicks/props/enhanced\")",
    "type": "endpoint",
    "file": "backend/simple_backend.py",
    "signature": "@app.get(\"/api/prizepicks/props/enhanced\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/betting-opportunities\")",
    "type": "endpoint",
    "file": "backend/simple_backend.py",
    "signature": "@app.get(\"/api/betting-opportunities\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/arbitrage-opportunities\")",
    "type": "endpoint",
    "file": "backend/simple_backend.py",
    "signature": "@app.get(\"/api/arbitrage-opportunities\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/predictions/prizepicks\")",
    "type": "endpoint",
    "file": "backend/simple_backend.py",
    "signature": "@app.get(\"/api/predictions/prizepicks\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/ultra-accuracy/model-performance\")",
    "type": "endpoint",
    "file": "backend/simple_backend.py",
    "signature": "@app.get(\"/api/ultra-accuracy/model-performance\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/analytics/performance\")",
    "type": "endpoint",
    "file": "backend/simple_backend.py",
    "signature": "@app.get(\"/api/analytics/performance\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/analytics/summary\")",
    "type": "endpoint",
    "file": "backend/simple_backend.py",
    "signature": "@app.get(\"/api/analytics/summary\")",
    "docstring": ""
  },
  {
    "name": "sample_task",
    "type": "function",
    "file": "backend/simple_celery_worker.py",
    "signature": "def sample_task(message):",
    "docstring": ""
  },
  {
    "name": "ml_prediction_task",
    "type": "function",
    "file": "backend/simple_celery_worker.py",
    "signature": "def ml_prediction_task(data):",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\")",
    "type": "endpoint",
    "file": "backend/simple_healthy_backend.py",
    "signature": "@app.get(\"/\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/health\")",
    "type": "endpoint",
    "file": "backend/simple_healthy_backend.py",
    "signature": "@app.get(\"/health\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health\")",
    "type": "endpoint",
    "file": "backend/simple_healthy_backend.py",
    "signature": "@app.get(\"/api/health\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health/status\")",
    "type": "endpoint",
    "file": "backend/simple_healthy_backend.py",
    "signature": "@app.get(\"/api/health/status\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/predictions/prizepicks/health\")",
    "type": "endpoint",
    "file": "backend/simple_healthy_backend.py",
    "signature": "@app.get(\"/api/predictions/prizepicks/health\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/predictions/prizepicks\")",
    "type": "endpoint",
    "file": "backend/simple_healthy_backend.py",
    "signature": "@app.get(\"/api/predictions/prizepicks\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/status\")",
    "type": "endpoint",
    "file": "backend/simple_healthy_backend.py",
    "signature": "@app.get(\"/status\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/prizepicks/props\")",
    "type": "endpoint",
    "file": "backend/simple_healthy_backend.py",
    "signature": "@app.get(\"/api/prizepicks/props\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/prizepicks/recommendations\")",
    "type": "endpoint",
    "file": "backend/simple_healthy_backend.py",
    "signature": "@app.get(\"/api/prizepicks/recommendations\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/betting-opportunities\")",
    "type": "endpoint",
    "file": "backend/simple_healthy_backend.py",
    "signature": "@app.get(\"/api/betting-opportunities\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\")",
    "type": "endpoint",
    "file": "backend/simple_model_service.py",
    "signature": "@app.get(\"/\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/health\")",
    "type": "endpoint",
    "file": "backend/simple_model_service.py",
    "signature": "@app.get(\"/health\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/models/status\")",
    "type": "endpoint",
    "file": "backend/simple_model_service.py",
    "signature": "@app.get(\"/models/status\")",
    "docstring": ""
  },
  {
    "name": "PropOllamaRequest",
    "type": "class",
    "file": "backend/simple_propollama_backend.py",
    "signature": "class PropOllamaRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PropOllamaRequest",
    "type": "class",
    "file": "backend/simple_propollama_backend.py",
    "signature": "class PropOllamaRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PropOllamaResponse",
    "type": "class",
    "file": "backend/simple_propollama_backend.py",
    "signature": "class PropOllamaResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PropOllamaResponse",
    "type": "class",
    "file": "backend/simple_propollama_backend.py",
    "signature": "class PropOllamaResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "SimplePropOllamaEngine",
    "type": "class",
    "file": "backend/simple_propollama_backend.py",
    "signature": "class SimplePropOllamaEngine:",
    "docstring": ""
  },
  {
    "name": "SimplePropOllamaEngine",
    "type": "class",
    "file": "backend/simple_propollama_backend.py",
    "signature": "class SimplePropOllamaEngine:",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\")",
    "type": "endpoint",
    "file": "backend/simple_propollama_backend.py",
    "signature": "@app.get(\"/\")",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/api/propollama/chat\", response_model=PropOllamaResponse)",
    "type": "endpoint",
    "file": "backend/simple_propollama_backend.py",
    "signature": "@app.post(\"/api/propollama/chat\", response_model=PropOllamaResponse)",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/propollama/status\")",
    "type": "endpoint",
    "file": "backend/simple_propollama_backend.py",
    "signature": "@app.get(\"/api/propollama/status\")",
    "docstring": ""
  },
  {
    "name": "find_available_port",
    "type": "function",
    "file": "backend/simple_server.py",
    "signature": "def find_available_port(start_port: int = 8003, max_port: int = 8010) -> int:",
    "docstring": ""
  },
  {
    "name": "get_in_season_sports",
    "type": "function",
    "file": "backend/simple_server.py",
    "signature": "def get_in_season_sports(month: int) -> list[str]:",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\")",
    "type": "endpoint",
    "file": "backend/simple_server.py",
    "signature": "@app.get(\"/\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health/status\")",
    "type": "endpoint",
    "file": "backend/simple_server.py",
    "signature": "@app.get(\"/api/health/status\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/prizepicks/props/enhanced\")",
    "type": "endpoint",
    "file": "backend/simple_server.py",
    "signature": "@app.get(\"/api/prizepicks/props/enhanced\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/propollama/status\")",
    "type": "endpoint",
    "file": "backend/simple_server.py",
    "signature": "@app.get(\"/api/propollama/status\")",
    "docstring": ""
  },
  {
    "name": "find_available_port",
    "type": "function",
    "file": "backend/simple_server_backup.py",
    "signature": "def find_available_port(start_port: int = 8003, max_port: int = 8010) -> int:",
    "docstring": ""
  },
  {
    "name": "get_in_season_sports",
    "type": "function",
    "file": "backend/simple_server_backup.py",
    "signature": "def get_in_season_sports(month: int) -> list[str]:",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\")",
    "type": "endpoint",
    "file": "backend/simple_server_backup.py",
    "signature": "@app.get(\"/\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health/status\")",
    "type": "endpoint",
    "file": "backend/simple_server_backup.py",
    "signature": "@app.get(\"/api/health/status\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/prizepicks/props/enhanced\")",
    "type": "endpoint",
    "file": "backend/simple_server_backup.py",
    "signature": "@app.get(\"/api/prizepicks/props/enhanced\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/propollama/status\")",
    "type": "endpoint",
    "file": "backend/simple_server_backup.py",
    "signature": "@app.get(\"/api/propollama/status\")",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/api/propollama/chat\")",
    "type": "endpoint",
    "file": "backend/simple_server_backup.py",
    "signature": "@app.post(\"/api/propollama/chat\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/propollama/status\")",
    "type": "endpoint",
    "file": "backend/simple_server_backup.py",
    "signature": "@app.get(\"/api/propollama/status\")",
    "docstring": ""
  },
  {
    "name": "find_available_port",
    "type": "function",
    "file": "backend/simple_server_clean.py",
    "signature": "def find_available_port(start_port: int = 8003, max_port: int = 8010) -> int:",
    "docstring": ""
  },
  {
    "name": "get_in_season_sports",
    "type": "function",
    "file": "backend/simple_server_clean.py",
    "signature": "def get_in_season_sports(month: int) -> list[str]:",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\")",
    "type": "endpoint",
    "file": "backend/simple_server_clean.py",
    "signature": "@app.get(\"/\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health/status\")",
    "type": "endpoint",
    "file": "backend/simple_server_clean.py",
    "signature": "@app.get(\"/api/health/status\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/prizepicks/props/enhanced\")",
    "type": "endpoint",
    "file": "backend/simple_server_clean.py",
    "signature": "@app.get(\"/api/prizepicks/props/enhanced\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/propollama/status\")",
    "type": "endpoint",
    "file": "backend/simple_server_clean.py",
    "signature": "@app.get(\"/api/propollama/status\")",
    "docstring": ""
  },
  {
    "name": "SimpleCache",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class SimpleCache:",
    "docstring": ""
  },
  {
    "name": "SimpleCache",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class SimpleCache:",
    "docstring": ""
  },
  {
    "name": "SportingEvent",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class SportingEvent:",
    "docstring": ""
  },
  {
    "name": "SportingEvent",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class SportingEvent:",
    "docstring": ""
  },
  {
    "name": "PlayerStats",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class PlayerStats:",
    "docstring": ""
  },
  {
    "name": "PlayerStats",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class PlayerStats:",
    "docstring": ""
  },
  {
    "name": "BettingOdds",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class BettingOdds:",
    "docstring": ""
  },
  {
    "name": "BettingOdds",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class BettingOdds:",
    "docstring": ""
  },
  {
    "name": "PlayerProp",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class PlayerProp:",
    "docstring": ""
  },
  {
    "name": "PlayerProp",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class PlayerProp:",
    "docstring": ""
  },
  {
    "name": "SpecialistAPI",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class SpecialistAPI(ABC):",
    "docstring": ""
  },
  {
    "name": "SpecialistAPI",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class SpecialistAPI(ABC):",
    "docstring": ""
  },
  {
    "name": "SportradarAPI",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class SportradarAPI(SpecialistAPI):",
    "docstring": ""
  },
  {
    "name": "SportradarAPI",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class SportradarAPI(SpecialistAPI):",
    "docstring": ""
  },
  {
    "name": "PrizePicksAPI",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class PrizePicksAPI(SpecialistAPI):",
    "docstring": ""
  },
  {
    "name": "PrizePicksAPI",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class PrizePicksAPI(SpecialistAPI):",
    "docstring": ""
  },
  {
    "name": "ESPNAPI",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class ESPNAPI(SpecialistAPI):",
    "docstring": ""
  },
  {
    "name": "ESPNAPI",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class ESPNAPI(SpecialistAPI):",
    "docstring": ""
  },
  {
    "name": "TheOddsAPI",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class TheOddsAPI(SpecialistAPI):",
    "docstring": ""
  },
  {
    "name": "TheOddsAPI",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class TheOddsAPI(SpecialistAPI):",
    "docstring": ""
  },
  {
    "name": "SpecialistDataManager",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class SpecialistDataManager:",
    "docstring": ""
  },
  {
    "name": "SpecialistDataManager",
    "type": "class",
    "file": "backend/specialist_apis.py",
    "signature": "class SpecialistDataManager:",
    "docstring": ""
  },
  {
    "name": "ApiResponse",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class ApiResponse(Generic[T]):",
    "docstring": ""
  },
  {
    "name": "ApiResponse",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class ApiResponse(Generic[T]):",
    "docstring": ""
  },
  {
    "name": "ApiError",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class ApiError:",
    "docstring": ""
  },
  {
    "name": "ApiError",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class ApiError:",
    "docstring": ""
  },
  {
    "name": "LoginRequest",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class LoginRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "LoginRequest",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class LoginRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "RegisterRequest",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class RegisterRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "RegisterRequest",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class RegisterRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TokenResponse",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class TokenResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TokenResponse",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class TokenResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UserProfile",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class UserProfile(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UserProfile",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class UserProfile(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PlayerProp",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class PlayerProp(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PlayerProp",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class PlayerProp(BaseModel):",
    "docstring": ""
  },
  {
    "name": "SelectedPick",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class SelectedPick(BaseModel):",
    "docstring": ""
  },
  {
    "name": "SelectedPick",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class SelectedPick(BaseModel):",
    "docstring": ""
  },
  {
    "name": "LineupRequest",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class LineupRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "LineupRequest",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class LineupRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "LineupResponse",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class LineupResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "LineupResponse",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class LineupResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PredictionFactor",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class PredictionFactor(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PredictionFactor",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class PredictionFactor(BaseModel):",
    "docstring": ""
  },
  {
    "name": "LivePrediction",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class LivePrediction(BaseModel):",
    "docstring": ""
  },
  {
    "name": "LivePrediction",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class LivePrediction(BaseModel):",
    "docstring": ""
  },
  {
    "name": "AnalysisRequest",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class AnalysisRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "AnalysisRequest",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class AnalysisRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "AnalysisResponse",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class AnalysisResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "AnalysisResponse",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class AnalysisResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "hash_password",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def hash_password(password: str) -> str:",
    "docstring": ""
  },
  {
    "name": "verify_password",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def verify_password(plain_password: str, hashed_password: str) -> bool:",
    "docstring": ""
  },
  {
    "name": "create_access_token",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def create_access_token(data: TypingDict[str, Any]) -> str:",
    "docstring": ""
  },
  {
    "name": "api_response",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def api_response(data: Any, message: Optional[str] = None) -> TypingDict[str, Any]:",
    "docstring": ""
  },
  {
    "name": "api_error",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def api_error(code: str, message: str, details: Any = None) -> TypingDict[str, Any]:",
    "docstring": ""
  },
  {
    "name": "JobResult",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class JobResult(Protocol):",
    "docstring": ""
  },
  {
    "name": "JobResult",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class JobResult(Protocol):",
    "docstring": ""
  },
  {
    "name": "JobExecutionResult",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class JobExecutionResult:",
    "docstring": ""
  },
  {
    "name": "JobExecutionResult",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class JobExecutionResult:",
    "docstring": ""
  },
  {
    "name": "JobPriority",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class JobPriority(Enum):",
    "docstring": ""
  },
  {
    "name": "JobPriority",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class JobPriority(Enum):",
    "docstring": ""
  },
  {
    "name": "circuit_breaker",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def circuit_breaker(failure_threshold: int = 5, recovery_timeout: int = 300):",
    "docstring": ""
  },
  {
    "name": "performance_monitor",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def performance_monitor(cache_result: bool = False):",
    "docstring": ""
  },
  {
    "name": "job_execution_context",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def job_execution_context(job_name: str):",
    "docstring": ""
  },
  {
    "name": "graceful_shutdown_handler",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def graceful_shutdown_handler(signum, frame):",
    "docstring": ""
  },
  {
    "name": "background_data_ingest",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def background_data_ingest() -> None:",
    "docstring": ""
  },
  {
    "name": "background_model_refresh",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def background_model_refresh() -> None:",
    "docstring": ""
  },
  {
    "name": "background_backup_state",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def background_backup_state():",
    "docstring": ""
  },
  {
    "name": "background_rotate_logs",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def background_rotate_logs():",
    "docstring": ""
  },
  {
    "name": "background_healthcheck_alert",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def background_healthcheck_alert():",
    "docstring": ""
  },
  {
    "name": "background_generate_explainability",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def background_generate_explainability():",
    "docstring": ""
  },
  {
    "name": "background_active_learning",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def background_active_learning():",
    "docstring": ""
  },
  {
    "name": "background_cleanup_sessions",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def background_cleanup_sessions():",
    "docstring": ""
  },
  {
    "name": "background_model_drift_check",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def background_model_drift_check() -> None:",
    "docstring": ""
  },
  {
    "name": "background_data_quality_check",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def background_data_quality_check() -> None:",
    "docstring": ""
  },
  {
    "name": "background_feedback_volume_alert",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def background_feedback_volume_alert() -> None:",
    "docstring": ""
  },
  {
    "name": "background_backup_verification",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def background_backup_verification() -> None:",
    "docstring": ""
  },
  {
    "name": "background_usage_spike_detection",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def background_usage_spike_detection() -> None:",
    "docstring": ""
  },
  {
    "name": "start_scheduler",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def start_scheduler():",
    "docstring": ""
  },
  {
    "name": "set_app_for_scheduler",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def set_app_for_scheduler(fastapi_app: FastAPI):",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/automation/full-workflow\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/automation/full-workflow\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/automation/get-lineup\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/automation/get-lineup\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/automation/get-prop\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/automation/get-prop\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/automation/explain-bet\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/automation/explain-bet\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/automation/optimize-lineup\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/automation/optimize-lineup\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/automation/compliance-check\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/automation/compliance-check\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/automation/feedback-retrain\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/automation/feedback-retrain\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/automation/full-reset\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/automation/full-reset\")",
    "docstring": ""
  },
  {
    "name": "automation_full_reset",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def automation_full_reset():",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/automation/backup-state\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/automation/backup-state\")",
    "docstring": ""
  },
  {
    "name": "automation_backup_state",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def automation_backup_state():",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/automation/rotate-logs\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/automation/rotate-logs\")",
    "docstring": ""
  },
  {
    "name": "automation_rotate_logs",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def automation_rotate_logs():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/automation/check-updates\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/automation/check-updates\")",
    "docstring": ""
  },
  {
    "name": "automation_check_updates",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def automation_check_updates():",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/automation/generate-explainability\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/automation/generate-explainability\")",
    "docstring": ""
  },
  {
    "name": "automation_generate_explainability",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def automation_generate_explainability():",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/automation/active-learning\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/automation/active-learning\")",
    "docstring": ""
  },
  {
    "name": "automation_active_learning",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def automation_active_learning():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/automation/healthcheck-alert\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/automation/healthcheck-alert\")",
    "docstring": ""
  },
  {
    "name": "automation_healthcheck_alert",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def automation_healthcheck_alert():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/automation/endpoint-usage\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/automation/endpoint-usage\")",
    "docstring": ""
  },
  {
    "name": "automation_endpoint_usage",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def automation_endpoint_usage():",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/automation/log-admin-action\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/automation/log-admin-action\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/automation/cleanup-sessions\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/automation/cleanup-sessions\")",
    "docstring": ""
  },
  {
    "name": "automation_cleanup_sessions",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def automation_cleanup_sessions():",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/automation/scan-plugins\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/automation/scan-plugins\")",
    "docstring": ""
  },
  {
    "name": "automation_scan_plugins",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def automation_scan_plugins():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/sse/conversation\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/sse/conversation\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/export-state\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/export-state\")",
    "docstring": ""
  },
  {
    "name": "export_agent_state",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def export_agent_state():",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/import-state\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/import-state\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/logs/download\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/logs/download\")",
    "docstring": ""
  },
  {
    "name": "download_logs",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def download_logs():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/capabilities\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/capabilities\")",
    "docstring": ""
  },
  {
    "name": "list_capabilities",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def list_capabilities():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/openapi-schema\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/openapi-schema\")",
    "docstring": ""
  },
  {
    "name": "get_openapi_schema",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def get_openapi_schema(request: Request):",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/quickstart\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/quickstart\")",
    "docstring": ""
  },
  {
    "name": "get_quickstart",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def get_quickstart():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/plugins/summary\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/plugins/summary\")",
    "docstring": ""
  },
  {
    "name": "plugins_summary",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def plugins_summary():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/models/summary\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/models/summary\")",
    "docstring": ""
  },
  {
    "name": "models_summary",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def models_summary():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/feedback/summary\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/feedback/summary\")",
    "docstring": ""
  },
  {
    "name": "feedback_summary",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def feedback_summary():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/session-context/summary\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/session-context/summary\")",
    "docstring": ""
  },
  {
    "name": "session_context_summary",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def session_context_summary():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/logs/summary\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/logs/summary\")",
    "docstring": ""
  },
  {
    "name": "logs_summary",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def logs_summary():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/explainability/summary\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/explainability/summary\")",
    "docstring": ""
  },
  {
    "name": "explainability_summary",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def explainability_summary():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/admin/summary\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/admin/summary\")",
    "docstring": ""
  },
  {
    "name": "admin_summary",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def admin_summary():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/dependency-versions\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/dependency-versions\")",
    "docstring": ""
  },
  {
    "name": "dependency_versions",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def dependency_versions():",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/admin/reload\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/admin/reload\")",
    "docstring": ""
  },
  {
    "name": "admin_reload",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def admin_reload():",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/admin/shutdown\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/admin/shutdown\")",
    "docstring": ""
  },
  {
    "name": "admin_shutdown",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def admin_shutdown():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/endpoints\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/endpoints\")",
    "docstring": ""
  },
  {
    "name": "list_endpoints",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def list_endpoints(request: Request):",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/usage-analytics\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/usage-analytics\")",
    "docstring": ""
  },
  {
    "name": "usage_analytics",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def usage_analytics():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/session-analytics\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/session-analytics\")",
    "docstring": ""
  },
  {
    "name": "session_analytics",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def session_analytics():",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/plugins/reload\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/plugins/reload\")",
    "docstring": ""
  },
  {
    "name": "reload_plugins",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def reload_plugins():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/models/download\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/models/download\")",
    "docstring": ""
  },
  {
    "name": "download_model",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def download_model():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/explainability-report/download\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/explainability-report/download\")",
    "docstring": ""
  },
  {
    "name": "download_explainability_report",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def download_explainability_report():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/healthcheck/full\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/healthcheck/full\")",
    "docstring": ""
  },
  {
    "name": "full_healthcheck",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def full_healthcheck():",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/admin/broadcast\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/admin/broadcast\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/self-test\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/self-test\")",
    "docstring": ""
  },
  {
    "name": "agent_self_test",
    "type": "function",
    "file": "backend/sports_expert_api.py",
    "signature": "def agent_self_test():",
    "docstring": ""
  },
  {
    "name": "AgentInterface",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class AgentInterface(Protocol):",
    "docstring": ""
  },
  {
    "name": "AgentInterface",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class AgentInterface(Protocol):",
    "docstring": ""
  },
  {
    "name": "SafeAgentWrapper",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class SafeAgentWrapper:",
    "docstring": ""
  },
  {
    "name": "SafeAgentWrapper",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class SafeAgentWrapper:",
    "docstring": ""
  },
  {
    "name": "IntelligentJobScheduler",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class IntelligentJobScheduler:",
    "docstring": ""
  },
  {
    "name": "IntelligentJobScheduler",
    "type": "class",
    "file": "backend/sports_expert_api.py",
    "signature": "class IntelligentJobScheduler:",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/scheduler/status\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.get(\"/scheduler/status\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/scheduler/force-job\")",
    "type": "endpoint",
    "file": "backend/sports_expert_api.py",
    "signature": "@router.post(\"/scheduler/force-job\")",
    "docstring": ""
  },
  {
    "name": "check_dependencies",
    "type": "function",
    "file": "backend/start_cloud_integration.py",
    "signature": "def check_dependencies():",
    "docstring": ""
  },
  {
    "name": "check_port",
    "type": "function",
    "file": "backend/start_cloud_integration.py",
    "signature": "def check_port():",
    "docstring": ""
  },
  {
    "name": "start_backend",
    "type": "function",
    "file": "backend/start_cloud_integration.py",
    "signature": "def start_backend():",
    "docstring": ""
  },
  {
    "name": "test_connection",
    "type": "function",
    "file": "backend/start_cloud_integration.py",
    "signature": "def test_connection():",
    "docstring": ""
  },
  {
    "name": "AlertSeverity",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class AlertSeverity(IntEnum):",
    "docstring": ""
  },
  {
    "name": "AlertSeverity",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class AlertSeverity(IntEnum):",
    "docstring": ""
  },
  {
    "name": "MetricType",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class MetricType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "MetricType",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class MetricType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "HealthStatus",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class HealthStatus(str, Enum):",
    "docstring": ""
  },
  {
    "name": "HealthStatus",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class HealthStatus(str, Enum):",
    "docstring": ""
  },
  {
    "name": "SystemMetric",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class SystemMetric:",
    "docstring": ""
  },
  {
    "name": "SystemMetric",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class SystemMetric:",
    "docstring": ""
  },
  {
    "name": "Alert",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class Alert:",
    "docstring": ""
  },
  {
    "name": "Alert",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class Alert:",
    "docstring": ""
  },
  {
    "name": "HealthCheck",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class HealthCheck:",
    "docstring": ""
  },
  {
    "name": "HealthCheck",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class HealthCheck:",
    "docstring": ""
  },
  {
    "name": "MetricsCollector",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class MetricsCollector:",
    "docstring": ""
  },
  {
    "name": "MetricsCollector",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class MetricsCollector:",
    "docstring": ""
  },
  {
    "name": "AlertManager",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class AlertManager:",
    "docstring": ""
  },
  {
    "name": "AlertManager",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class AlertManager:",
    "docstring": ""
  },
  {
    "name": "HealthChecker",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class HealthChecker:",
    "docstring": ""
  },
  {
    "name": "HealthChecker",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class HealthChecker:",
    "docstring": ""
  },
  {
    "name": "UltraSystemMonitor",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class UltraSystemMonitor:",
    "docstring": ""
  },
  {
    "name": "UltraSystemMonitor",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class UltraSystemMonitor:",
    "docstring": ""
  },
  {
    "name": "AnomalyDetector",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class AnomalyDetector:",
    "docstring": ""
  },
  {
    "name": "AnomalyDetector",
    "type": "class",
    "file": "backend/system_monitor.py",
    "signature": "class AnomalyDetector:",
    "docstring": ""
  },
  {
    "name": "TaskPriority",
    "type": "class",
    "file": "backend/task_processor.py",
    "signature": "class TaskPriority(IntEnum):",
    "docstring": ""
  },
  {
    "name": "TaskPriority",
    "type": "class",
    "file": "backend/task_processor.py",
    "signature": "class TaskPriority(IntEnum):",
    "docstring": ""
  },
  {
    "name": "TaskStatus",
    "type": "class",
    "file": "backend/task_processor.py",
    "signature": "class TaskStatus(str, Enum):",
    "docstring": ""
  },
  {
    "name": "TaskStatus",
    "type": "class",
    "file": "backend/task_processor.py",
    "signature": "class TaskStatus(str, Enum):",
    "docstring": ""
  },
  {
    "name": "TaskType",
    "type": "class",
    "file": "backend/task_processor.py",
    "signature": "class TaskType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "TaskType",
    "type": "class",
    "file": "backend/task_processor.py",
    "signature": "class TaskType(str, Enum):",
    "docstring": ""
  },
  {
    "name": "TaskDefinition",
    "type": "class",
    "file": "backend/task_processor.py",
    "signature": "class TaskDefinition:",
    "docstring": ""
  },
  {
    "name": "TaskDefinition",
    "type": "class",
    "file": "backend/task_processor.py",
    "signature": "class TaskDefinition:",
    "docstring": ""
  },
  {
    "name": "TaskResult",
    "type": "class",
    "file": "backend/task_processor.py",
    "signature": "class TaskResult:",
    "docstring": ""
  },
  {
    "name": "TaskResult",
    "type": "class",
    "file": "backend/task_processor.py",
    "signature": "class TaskResult:",
    "docstring": ""
  },
  {
    "name": "TaskQueue",
    "type": "class",
    "file": "backend/task_processor.py",
    "signature": "class TaskQueue:",
    "docstring": ""
  },
  {
    "name": "TaskQueue",
    "type": "class",
    "file": "backend/task_processor.py",
    "signature": "class TaskQueue:",
    "docstring": ""
  },
  {
    "name": "TaskWorker",
    "type": "class",
    "file": "backend/task_processor.py",
    "signature": "class TaskWorker:",
    "docstring": ""
  },
  {
    "name": "TaskWorker",
    "type": "class",
    "file": "backend/task_processor.py",
    "signature": "class TaskWorker:",
    "docstring": ""
  },
  {
    "name": "TaskScheduler",
    "type": "class",
    "file": "backend/task_processor.py",
    "signature": "class TaskScheduler:",
    "docstring": ""
  },
  {
    "name": "TaskScheduler",
    "type": "class",
    "file": "backend/task_processor.py",
    "signature": "class TaskScheduler:",
    "docstring": ""
  },
  {
    "name": "UltraTaskProcessor",
    "type": "class",
    "file": "backend/task_processor.py",
    "signature": "class UltraTaskProcessor:",
    "docstring": ""
  },
  {
    "name": "UltraTaskProcessor",
    "type": "class",
    "file": "backend/task_processor.py",
    "signature": "class UltraTaskProcessor:",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\")",
    "type": "endpoint",
    "file": "backend/test_backend.py",
    "signature": "@app.get(\"/\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/health\")",
    "type": "endpoint",
    "file": "backend/test_backend.py",
    "signature": "@app.get(\"/health\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/health/status\")",
    "type": "endpoint",
    "file": "backend/test_backend.py",
    "signature": "@app.get(\"/api/health/status\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/ultra-accuracy/model-performance\")",
    "type": "endpoint",
    "file": "backend/test_backend.py",
    "signature": "@app.get(\"/api/ultra-accuracy/model-performance\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/analytics/summary\")",
    "type": "endpoint",
    "file": "backend/test_backend.py",
    "signature": "@app.get(\"/api/analytics/summary\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/active-bets\")",
    "type": "endpoint",
    "file": "backend/test_backend.py",
    "signature": "@app.get(\"/api/active-bets\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/transactions\")",
    "type": "endpoint",
    "file": "backend/test_backend.py",
    "signature": "@app.get(\"/api/transactions\")",
    "docstring": ""
  },
  {
    "name": "test_edge_cases",
    "type": "function",
    "file": "backend/test_edge_cases.py",
    "signature": "def test_edge_cases():",
    "docstring": ""
  },
  {
    "name": "MockModelManager",
    "type": "class",
    "file": "backend/test_enhanced_propollama.py",
    "signature": "class MockModelManager:",
    "docstring": ""
  },
  {
    "name": "MockModelManager",
    "type": "class",
    "file": "backend/test_enhanced_propollama.py",
    "signature": "class MockModelManager:",
    "docstring": ""
  },
  {
    "name": "MockRequest",
    "type": "class",
    "file": "backend/test_enhanced_propollama.py",
    "signature": "class MockRequest:",
    "docstring": ""
  },
  {
    "name": "MockRequest",
    "type": "class",
    "file": "backend/test_enhanced_propollama.py",
    "signature": "class MockRequest:",
    "docstring": ""
  },
  {
    "name": "EnhancedPropOllamaEngine",
    "type": "class",
    "file": "backend/test_enhanced_propollama.py",
    "signature": "class EnhancedPropOllamaEngine:",
    "docstring": ""
  },
  {
    "name": "EnhancedPropOllamaEngine",
    "type": "class",
    "file": "backend/test_enhanced_propollama.py",
    "signature": "class EnhancedPropOllamaEngine:",
    "docstring": ""
  },
  {
    "name": "props",
    "type": "function",
    "file": "backend/test_ensemble_simple.py",
    "signature": "def props():",
    "docstring": ""
  },
  {
    "name": "create_sample_props",
    "type": "function",
    "file": "backend/test_ensemble_simple.py",
    "signature": "def create_sample_props() -> List[Dict[str, Any]]:",
    "docstring": ""
  },
  {
    "name": "ModelStatus",
    "type": "class",
    "file": "backend/test_main.py",
    "signature": "class ModelStatus(Enum):",
    "docstring": ""
  },
  {
    "name": "ModelStatus",
    "type": "class",
    "file": "backend/test_main.py",
    "signature": "class ModelStatus(Enum):",
    "docstring": ""
  },
  {
    "name": "ModelManager",
    "type": "class",
    "file": "backend/test_main.py",
    "signature": "class ModelManager:",
    "docstring": ""
  },
  {
    "name": "ModelManager",
    "type": "class",
    "file": "backend/test_main.py",
    "signature": "class ModelManager:",
    "docstring": ""
  },
  {
    "name": "EnhancedPrediction",
    "type": "class",
    "file": "backend/test_main.py",
    "signature": "class EnhancedPrediction(BaseModel):",
    "docstring": ""
  },
  {
    "name": "EnhancedPrediction",
    "type": "class",
    "file": "backend/test_main.py",
    "signature": "class EnhancedPrediction(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ChatMessage",
    "type": "class",
    "file": "backend/test_main.py",
    "signature": "class ChatMessage(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ChatMessage",
    "type": "class",
    "file": "backend/test_main.py",
    "signature": "class ChatMessage(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ChatResponse",
    "type": "class",
    "file": "backend/test_main.py",
    "signature": "class ChatResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ChatResponse",
    "type": "class",
    "file": "backend/test_main.py",
    "signature": "class ChatResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/health\")",
    "type": "endpoint",
    "file": "backend/test_main.py",
    "signature": "@app.get(\"/health\")",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/status/training\")",
    "type": "endpoint",
    "file": "backend/test_main.py",
    "signature": "@app.get(\"/status/training\")",
    "docstring": ""
  },
  {
    "name": "@app.post(\"/api/propollama/chat\", response_model=ChatResponse)",
    "type": "endpoint",
    "file": "backend/test_main.py",
    "signature": "@app.post(\"/api/propollama/chat\", response_model=ChatResponse)",
    "docstring": ""
  },
  {
    "name": "RealDataIntegrationValidator",
    "type": "class",
    "file": "backend/test_real_integration.py",
    "signature": "class RealDataIntegrationValidator:",
    "docstring": ""
  },
  {
    "name": "RealDataIntegrationValidator",
    "type": "class",
    "file": "backend/test_real_integration.py",
    "signature": "class RealDataIntegrationValidator:",
    "docstring": ""
  },
  {
    "name": "test_seasonal_filtering",
    "type": "function",
    "file": "backend/test_seasonal_filtering.py",
    "signature": "def test_seasonal_filtering():",
    "docstring": ""
  },
  {
    "name": "generate_test_props",
    "type": "function",
    "file": "backend/test_simple_props.py",
    "signature": "def generate_test_props() -> List[Dict[str, Any]]:",
    "docstring": ""
  },
  {
    "name": "AccuracyOptimizationStrategy",
    "type": "class",
    "file": "backend/ultra_accuracy_engine.py",
    "signature": "class AccuracyOptimizationStrategy(str, Enum):",
    "docstring": ""
  },
  {
    "name": "AccuracyOptimizationStrategy",
    "type": "class",
    "file": "backend/ultra_accuracy_engine.py",
    "signature": "class AccuracyOptimizationStrategy(str, Enum):",
    "docstring": ""
  },
  {
    "name": "UncertaintyQuantificationMethod",
    "type": "class",
    "file": "backend/ultra_accuracy_engine.py",
    "signature": "class UncertaintyQuantificationMethod(str, Enum):",
    "docstring": ""
  },
  {
    "name": "UncertaintyQuantificationMethod",
    "type": "class",
    "file": "backend/ultra_accuracy_engine.py",
    "signature": "class UncertaintyQuantificationMethod(str, Enum):",
    "docstring": ""
  },
  {
    "name": "UltraAccuracyMetrics",
    "type": "class",
    "file": "backend/ultra_accuracy_engine.py",
    "signature": "class UltraAccuracyMetrics:",
    "docstring": ""
  },
  {
    "name": "UltraAccuracyMetrics",
    "type": "class",
    "file": "backend/ultra_accuracy_engine.py",
    "signature": "class UltraAccuracyMetrics:",
    "docstring": ""
  },
  {
    "name": "QuantumEnsemblePrediction",
    "type": "class",
    "file": "backend/ultra_accuracy_engine.py",
    "signature": "class QuantumEnsemblePrediction:",
    "docstring": ""
  },
  {
    "name": "QuantumEnsemblePrediction",
    "type": "class",
    "file": "backend/ultra_accuracy_engine.py",
    "signature": "class QuantumEnsemblePrediction:",
    "docstring": ""
  },
  {
    "name": "QuantumInspiredEnsemble",
    "type": "class",
    "file": "backend/ultra_accuracy_engine.py",
    "signature": "class QuantumInspiredEnsemble:",
    "docstring": ""
  },
  {
    "name": "QuantumInspiredEnsemble",
    "type": "class",
    "file": "backend/ultra_accuracy_engine.py",
    "signature": "class QuantumInspiredEnsemble:",
    "docstring": ""
  },
  {
    "name": "UltraAccuracyEngine",
    "type": "class",
    "file": "backend/ultra_accuracy_engine.py",
    "signature": "class UltraAccuracyEngine:",
    "docstring": ""
  },
  {
    "name": "UltraAccuracyEngine",
    "type": "class",
    "file": "backend/ultra_accuracy_engine.py",
    "signature": "class UltraAccuracyEngine:",
    "docstring": ""
  },
  {
    "name": "RealPerformanceMetrics",
    "type": "class",
    "file": "backend/ultra_accuracy_engine.py",
    "signature": "class RealPerformanceMetrics:",
    "docstring": ""
  },
  {
    "name": "RealPerformanceMetrics",
    "type": "class",
    "file": "backend/ultra_accuracy_engine.py",
    "signature": "class RealPerformanceMetrics:",
    "docstring": ""
  },
  {
    "name": "UltraHighAccuracyConfig",
    "type": "class",
    "file": "backend/ultra_accuracy_engine_simple.py",
    "signature": "class UltraHighAccuracyConfig:",
    "docstring": ""
  },
  {
    "name": "UltraHighAccuracyConfig",
    "type": "class",
    "file": "backend/ultra_accuracy_engine_simple.py",
    "signature": "class UltraHighAccuracyConfig:",
    "docstring": ""
  },
  {
    "name": "UltraAccuracyPrediction",
    "type": "class",
    "file": "backend/ultra_accuracy_engine_simple.py",
    "signature": "class UltraAccuracyPrediction:",
    "docstring": ""
  },
  {
    "name": "UltraAccuracyPrediction",
    "type": "class",
    "file": "backend/ultra_accuracy_engine_simple.py",
    "signature": "class UltraAccuracyPrediction:",
    "docstring": ""
  },
  {
    "name": "MarketEfficiencyAnalyzer",
    "type": "class",
    "file": "backend/ultra_accuracy_engine_simple.py",
    "signature": "class MarketEfficiencyAnalyzer:",
    "docstring": ""
  },
  {
    "name": "MarketEfficiencyAnalyzer",
    "type": "class",
    "file": "backend/ultra_accuracy_engine_simple.py",
    "signature": "class MarketEfficiencyAnalyzer:",
    "docstring": ""
  },
  {
    "name": "BehavioralPatternDetector",
    "type": "class",
    "file": "backend/ultra_accuracy_engine_simple.py",
    "signature": "class BehavioralPatternDetector:",
    "docstring": ""
  },
  {
    "name": "BehavioralPatternDetector",
    "type": "class",
    "file": "backend/ultra_accuracy_engine_simple.py",
    "signature": "class BehavioralPatternDetector:",
    "docstring": ""
  },
  {
    "name": "UltraHighAccuracyEngine",
    "type": "class",
    "file": "backend/ultra_accuracy_engine_simple.py",
    "signature": "class UltraHighAccuracyEngine:",
    "docstring": ""
  },
  {
    "name": "UltraHighAccuracyEngine",
    "type": "class",
    "file": "backend/ultra_accuracy_engine_simple.py",
    "signature": "class UltraHighAccuracyEngine:",
    "docstring": ""
  },
  {
    "name": "UltraAccuracyRequest",
    "type": "class",
    "file": "backend/ultra_accuracy_routes.py",
    "signature": "class UltraAccuracyRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UltraAccuracyRequest",
    "type": "class",
    "file": "backend/ultra_accuracy_routes.py",
    "signature": "class UltraAccuracyRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UltraAccuracyResponse",
    "type": "class",
    "file": "backend/ultra_accuracy_routes.py",
    "signature": "class UltraAccuracyResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UltraAccuracyResponse",
    "type": "class",
    "file": "backend/ultra_accuracy_routes.py",
    "signature": "class UltraAccuracyResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PerformanceUpdateRequest",
    "type": "class",
    "file": "backend/ultra_accuracy_routes.py",
    "signature": "class PerformanceUpdateRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PerformanceUpdateRequest",
    "type": "class",
    "file": "backend/ultra_accuracy_routes.py",
    "signature": "class PerformanceUpdateRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "MarketEfficiencyRequest",
    "type": "class",
    "file": "backend/ultra_accuracy_routes.py",
    "signature": "class MarketEfficiencyRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "MarketEfficiencyRequest",
    "type": "class",
    "file": "backend/ultra_accuracy_routes.py",
    "signature": "class MarketEfficiencyRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "BehavioralPatternsRequest",
    "type": "class",
    "file": "backend/ultra_accuracy_routes.py",
    "signature": "class BehavioralPatternsRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "BehavioralPatternsRequest",
    "type": "class",
    "file": "backend/ultra_accuracy_routes.py",
    "signature": "class BehavioralPatternsRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/predict\", response_model=UltraAccuracyResponse)",
    "type": "endpoint",
    "file": "backend/ultra_accuracy_routes.py",
    "signature": "@router.post(\"/predict\", response_model=UltraAccuracyResponse)",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/market-efficiency\")",
    "type": "endpoint",
    "file": "backend/ultra_accuracy_routes.py",
    "signature": "@router.post(\"/market-efficiency\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/behavioral-patterns\")",
    "type": "endpoint",
    "file": "backend/ultra_accuracy_routes.py",
    "signature": "@router.post(\"/behavioral-patterns\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/update-performance\")",
    "type": "endpoint",
    "file": "backend/ultra_accuracy_routes.py",
    "signature": "@router.post(\"/update-performance\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/performance-metrics\")",
    "type": "endpoint",
    "file": "backend/ultra_accuracy_routes.py",
    "signature": "@router.get(\"/performance-metrics\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/system-status\")",
    "type": "endpoint",
    "file": "backend/ultra_accuracy_routes.py",
    "signature": "@router.get(\"/system-status\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/health\")",
    "type": "endpoint",
    "file": "backend/ultra_accuracy_routes.py",
    "signature": "@router.get(\"/health\")",
    "docstring": ""
  },
  {
    "name": "UnifiedFeatureService",
    "type": "class",
    "file": "backend/unified_feature_service.py",
    "signature": "class UnifiedFeatureService:",
    "docstring": ""
  },
  {
    "name": "UnifiedFeatureService",
    "type": "class",
    "file": "backend/unified_feature_service.py",
    "signature": "class UnifiedFeatureService:",
    "docstring": ""
  },
  {
    "name": "User",
    "type": "class",
    "file": "backend/user_models.py",
    "signature": "class User(Base):",
    "docstring": ""
  },
  {
    "name": "User",
    "type": "class",
    "file": "backend/user_models.py",
    "signature": "class User(Base):",
    "docstring": ""
  },
  {
    "name": "UserSession",
    "type": "class",
    "file": "backend/user_models.py",
    "signature": "class UserSession(Base):",
    "docstring": ""
  },
  {
    "name": "UserSession",
    "type": "class",
    "file": "backend/user_models.py",
    "signature": "class UserSession(Base):",
    "docstring": ""
  },
  {
    "name": "UserBet",
    "type": "class",
    "file": "backend/user_models.py",
    "signature": "class UserBet(Base):",
    "docstring": ""
  },
  {
    "name": "UserBet",
    "type": "class",
    "file": "backend/user_models.py",
    "signature": "class UserBet(Base):",
    "docstring": ""
  },
  {
    "name": "UserTransaction",
    "type": "class",
    "file": "backend/user_models.py",
    "signature": "class UserTransaction(Base):",
    "docstring": ""
  },
  {
    "name": "UserTransaction",
    "type": "class",
    "file": "backend/user_models.py",
    "signature": "class UserTransaction(Base):",
    "docstring": ""
  },
  {
    "name": "UserPreference",
    "type": "class",
    "file": "backend/user_models.py",
    "signature": "class UserPreference(Base):",
    "docstring": ""
  },
  {
    "name": "UserPreference",
    "type": "class",
    "file": "backend/user_models.py",
    "signature": "class UserPreference(Base):",
    "docstring": ""
  },
  {
    "name": "IntegrationValidator",
    "type": "class",
    "file": "backend/validate_complete_integration.py",
    "signature": "class IntegrationValidator:",
    "docstring": ""
  },
  {
    "name": "IntegrationValidator",
    "type": "class",
    "file": "backend/validate_complete_integration.py",
    "signature": "class IntegrationValidator:",
    "docstring": ""
  },
  {
    "name": "validate_neuromorphic_network",
    "type": "function",
    "file": "backend/validate_enhanced_engine.py",
    "signature": "def validate_neuromorphic_network():",
    "docstring": ""
  },
  {
    "name": "validate_mamba_state_space",
    "type": "function",
    "file": "backend/validate_enhanced_engine.py",
    "signature": "def validate_mamba_state_space():",
    "docstring": ""
  },
  {
    "name": "validate_causal_inference",
    "type": "function",
    "file": "backend/validate_enhanced_engine.py",
    "signature": "def validate_causal_inference():",
    "docstring": ""
  },
  {
    "name": "validate_topological_network",
    "type": "function",
    "file": "backend/validate_enhanced_engine.py",
    "signature": "def validate_topological_network():",
    "docstring": ""
  },
  {
    "name": "validate_riemannian_network",
    "type": "function",
    "file": "backend/validate_enhanced_engine.py",
    "signature": "def validate_riemannian_network():",
    "docstring": ""
  },
  {
    "name": "validate_enhanced_engine",
    "type": "function",
    "file": "backend/validate_enhanced_engine.py",
    "signature": "def validate_enhanced_engine():",
    "docstring": ""
  },
  {
    "name": "run_performance_benchmark",
    "type": "function",
    "file": "backend/validate_enhanced_engine.py",
    "signature": "def run_performance_benchmark():",
    "docstring": ""
  },
  {
    "name": "main",
    "type": "function",
    "file": "backend/validate_enhanced_engine.py",
    "signature": "def main():",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/\")",
    "type": "endpoint",
    "file": "backend/working_backend.py",
    "signature": "@app.get(\"/\")",
    "docstring": ""
  },
  {
    "name": "root",
    "type": "function",
    "file": "backend/working_backend.py",
    "signature": "def root():",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/health\")",
    "type": "endpoint",
    "file": "backend/working_backend.py",
    "signature": "@app.get(\"/health\")",
    "docstring": ""
  },
  {
    "name": "health",
    "type": "function",
    "file": "backend/working_backend.py",
    "signature": "def health():",
    "docstring": ""
  },
  {
    "name": "@app.get(\"/api/prizepicks/props\")",
    "type": "endpoint",
    "file": "backend/working_backend.py",
    "signature": "@app.get(\"/api/prizepicks/props\")",
    "docstring": ""
  },
  {
    "name": "get_props",
    "type": "function",
    "file": "backend/working_backend.py",
    "signature": "def get_props():",
    "docstring": ""
  },
  {
    "name": "ConnectionManager",
    "type": "class",
    "file": "backend/ws.py",
    "signature": "class ConnectionManager:",
    "docstring": ""
  },
  {
    "name": "ConnectionManager",
    "type": "class",
    "file": "backend/ws.py",
    "signature": "class ConnectionManager:",
    "docstring": ""
  },
  {
    "name": "TokenData",
    "type": "class",
    "file": "backend/auth/security.py",
    "signature": "class TokenData(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TokenData",
    "type": "class",
    "file": "backend/auth/security.py",
    "signature": "class TokenData(BaseModel):",
    "docstring": ""
  },
  {
    "name": "SecurityManager",
    "type": "class",
    "file": "backend/auth/security.py",
    "signature": "class SecurityManager:",
    "docstring": ""
  },
  {
    "name": "SecurityManager",
    "type": "class",
    "file": "backend/auth/security.py",
    "signature": "class SecurityManager:",
    "docstring": ""
  },
  {
    "name": "get_password_hash",
    "type": "function",
    "file": "backend/auth/security.py",
    "signature": "def get_password_hash(password: str) -> str:",
    "docstring": ""
  },
  {
    "name": "verify_password",
    "type": "function",
    "file": "backend/auth/security.py",
    "signature": "def verify_password(plain_password: str, hashed_password: str) -> bool:",
    "docstring": ""
  },
  {
    "name": "create_access_token",
    "type": "function",
    "file": "backend/auth/security.py",
    "signature": "def create_access_token(data: Dict[str, Any], expires_delta: Optional[timedelta] = None) -> str:",
    "docstring": ""
  },
  {
    "name": "create_refresh_token",
    "type": "function",
    "file": "backend/auth/security.py",
    "signature": "def create_refresh_token(data: Dict[str, Any], expires_delta: Optional[timedelta] = None) -> str:",
    "docstring": ""
  },
  {
    "name": "verify_token",
    "type": "function",
    "file": "backend/auth/security.py",
    "signature": "def verify_token(token: str, token_type: str = \"access\") -> Dict[str, Any]:",
    "docstring": ""
  },
  {
    "name": "extract_user_from_token",
    "type": "function",
    "file": "backend/auth/security.py",
    "signature": "def extract_user_from_token(token: str) -> TokenData:",
    "docstring": ""
  },
  {
    "name": "User",
    "type": "class",
    "file": "backend/auth/user_service.py",
    "signature": "class User(Base):",
    "docstring": ""
  },
  {
    "name": "User",
    "type": "class",
    "file": "backend/auth/user_service.py",
    "signature": "class User(Base):",
    "docstring": ""
  },
  {
    "name": "UserProfile",
    "type": "class",
    "file": "backend/auth/user_service.py",
    "signature": "class UserProfile:",
    "docstring": ""
  },
  {
    "name": "UserProfile",
    "type": "class",
    "file": "backend/auth/user_service.py",
    "signature": "class UserProfile:",
    "docstring": ""
  },
  {
    "name": "UserService",
    "type": "class",
    "file": "backend/auth/user_service.py",
    "signature": "class UserService:",
    "docstring": ""
  },
  {
    "name": "UserService",
    "type": "class",
    "file": "backend/auth/user_service.py",
    "signature": "class UserService:",
    "docstring": ""
  },
  {
    "name": "RateLimitStrategy",
    "type": "class",
    "file": "backend/middleware/advanced_rate_limiting.py",
    "signature": "class RateLimitStrategy(Enum):",
    "docstring": ""
  },
  {
    "name": "RateLimitStrategy",
    "type": "class",
    "file": "backend/middleware/advanced_rate_limiting.py",
    "signature": "class RateLimitStrategy(Enum):",
    "docstring": ""
  },
  {
    "name": "RateLimit",
    "type": "class",
    "file": "backend/middleware/advanced_rate_limiting.py",
    "signature": "class RateLimit:",
    "docstring": ""
  },
  {
    "name": "RateLimit",
    "type": "class",
    "file": "backend/middleware/advanced_rate_limiting.py",
    "signature": "class RateLimit:",
    "docstring": ""
  },
  {
    "name": "RateLimitResult",
    "type": "class",
    "file": "backend/middleware/advanced_rate_limiting.py",
    "signature": "class RateLimitResult:",
    "docstring": ""
  },
  {
    "name": "RateLimitResult",
    "type": "class",
    "file": "backend/middleware/advanced_rate_limiting.py",
    "signature": "class RateLimitResult:",
    "docstring": ""
  },
  {
    "name": "AdvancedRateLimiter",
    "type": "class",
    "file": "backend/middleware/advanced_rate_limiting.py",
    "signature": "class AdvancedRateLimiter:",
    "docstring": ""
  },
  {
    "name": "AdvancedRateLimiter",
    "type": "class",
    "file": "backend/middleware/advanced_rate_limiting.py",
    "signature": "class AdvancedRateLimiter:",
    "docstring": ""
  },
  {
    "name": "main",
    "type": "function",
    "file": "backend/middleware/advanced_rate_limiting.py",
    "signature": "def main():",
    "docstring": ""
  },
  {
    "name": "TTLCache",
    "type": "class",
    "file": "backend/middleware/caching.py",
    "signature": "class TTLCache:",
    "docstring": ""
  },
  {
    "name": "TTLCache",
    "type": "class",
    "file": "backend/middleware/caching.py",
    "signature": "class TTLCache:",
    "docstring": ""
  },
  {
    "name": "MetricsMiddleware",
    "type": "class",
    "file": "backend/middleware/metrics_middleware.py",
    "signature": "class MetricsMiddleware(BaseHTTPMiddleware):",
    "docstring": ""
  },
  {
    "name": "MetricsMiddleware",
    "type": "class",
    "file": "backend/middleware/metrics_middleware.py",
    "signature": "class MetricsMiddleware(BaseHTTPMiddleware):",
    "docstring": ""
  },
  {
    "name": "RateLimitMiddleware",
    "type": "class",
    "file": "backend/middleware/rate_limit.py",
    "signature": "class RateLimitMiddleware:",
    "docstring": ""
  },
  {
    "name": "RateLimitMiddleware",
    "type": "class",
    "file": "backend/middleware/rate_limit.py",
    "signature": "class RateLimitMiddleware:",
    "docstring": ""
  },
  {
    "name": "HealthCheckResponse",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class HealthCheckResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "HealthCheckResponse",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class HealthCheckResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "BettingOpportunity",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class BettingOpportunity(BaseModel):",
    "docstring": ""
  },
  {
    "name": "BettingOpportunity",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class BettingOpportunity(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ArbitrageOpportunity",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class ArbitrageOpportunity(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ArbitrageOpportunity",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class ArbitrageOpportunity(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PerformanceStats",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class PerformanceStats(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PerformanceStats",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class PerformanceStats(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TransactionModel",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class TransactionModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TransactionModel",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class TransactionModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TransactionsResponse",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class TransactionsResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TransactionsResponse",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class TransactionsResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ActiveBetModel",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class ActiveBetModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ActiveBetModel",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class ActiveBetModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ActiveBetsResponse",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class ActiveBetsResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ActiveBetsResponse",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class ActiveBetsResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "RiskProfileModel",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class RiskProfileModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "RiskProfileModel",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class RiskProfileModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "RiskProfilesResponse",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class RiskProfilesResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "RiskProfilesResponse",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class RiskProfilesResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UserProfileResponse",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class UserProfileResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UserProfileResponse",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class UserProfileResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UserRegistration",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class UserRegistration(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UserRegistration",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class UserRegistration(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UserLogin",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class UserLogin(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UserLogin",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class UserLogin(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TokenResponse",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class TokenResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TokenResponse",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class TokenResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "HistoricalGameResult",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class HistoricalGameResult(BaseModel):",
    "docstring": ""
  },
  {
    "name": "HistoricalGameResult",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class HistoricalGameResult(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UnifiedFeed",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class UnifiedFeed(BaseModel):",
    "docstring": ""
  },
  {
    "name": "UnifiedFeed",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class UnifiedFeed(BaseModel):",
    "docstring": ""
  },
  {
    "name": "MatchPredictionRequest",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class MatchPredictionRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "MatchPredictionRequest",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class MatchPredictionRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "RecommendedBet",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class RecommendedBet(BaseModel):",
    "docstring": ""
  },
  {
    "name": "RecommendedBet",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class RecommendedBet(BaseModel):",
    "docstring": ""
  },
  {
    "name": "Insights",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class Insights(BaseModel):",
    "docstring": ""
  },
  {
    "name": "Insights",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class Insights(BaseModel):",
    "docstring": ""
  },
  {
    "name": "MatchPredictionResponse",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class MatchPredictionResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "MatchPredictionResponse",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class MatchPredictionResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "InputData",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class InputData(BaseModel):",
    "docstring": ""
  },
  {
    "name": "InputData",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class InputData(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TeamSimple",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class TeamSimple(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TeamSimple",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class TeamSimple(BaseModel):",
    "docstring": ""
  },
  {
    "name": "GameDataModel",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class GameDataModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "GameDataModel",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class GameDataModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "OddOutcome",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class OddOutcome(BaseModel):",
    "docstring": ""
  },
  {
    "name": "OddOutcome",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class OddOutcome(BaseModel):",
    "docstring": ""
  },
  {
    "name": "OddsDataModel",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class OddsDataModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "OddsDataModel",
    "type": "class",
    "file": "backend/models/api_models.py",
    "signature": "class OddsDataModel(BaseModel):",
    "docstring": ""
  },
  {
    "name": "Bet",
    "type": "class",
    "file": "backend/models/bet.py",
    "signature": "class Bet(Base):",
    "docstring": ""
  },
  {
    "name": "Bet",
    "type": "class",
    "file": "backend/models/bet.py",
    "signature": "class Bet(Base):",
    "docstring": ""
  },
  {
    "name": "Match",
    "type": "class",
    "file": "backend/models/match.py",
    "signature": "class Match(Base):",
    "docstring": ""
  },
  {
    "name": "Match",
    "type": "class",
    "file": "backend/models/match.py",
    "signature": "class Match(Base):",
    "docstring": ""
  },
  {
    "name": "ModelPerformance",
    "type": "class",
    "file": "backend/models/model_performance.py",
    "signature": "class ModelPerformance(Base):",
    "docstring": ""
  },
  {
    "name": "ModelPerformance",
    "type": "class",
    "file": "backend/models/model_performance.py",
    "signature": "class ModelPerformance(Base):",
    "docstring": ""
  },
  {
    "name": "Prediction",
    "type": "class",
    "file": "backend/models/prediction.py",
    "signature": "class Prediction(Base):",
    "docstring": ""
  },
  {
    "name": "Prediction",
    "type": "class",
    "file": "backend/models/prediction.py",
    "signature": "class Prediction(Base):",
    "docstring": ""
  },
  {
    "name": "User",
    "type": "class",
    "file": "backend/models/user.py",
    "signature": "class User(Base):",
    "docstring": ""
  },
  {
    "name": "User",
    "type": "class",
    "file": "backend/models/user.py",
    "signature": "class User(Base):",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/v1/match-prediction\", response_model=MatchPredictionResponse)",
    "type": "endpoint",
    "file": "backend/routes/analytics.py",
    "signature": "@router.post(\"/v1/match-prediction\", response_model=MatchPredictionResponse)",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/features\")",
    "type": "endpoint",
    "file": "backend/routes/analytics.py",
    "signature": "@router.post(\"/features\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/predict\")",
    "type": "endpoint",
    "file": "backend/routes/analytics.py",
    "signature": "@router.post(\"/predict\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/analytics/advanced\")",
    "type": "endpoint",
    "file": "backend/routes/analytics.py",
    "signature": "@router.get(\"/analytics/advanced\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/predictions\")",
    "type": "endpoint",
    "file": "backend/routes/analytics.py",
    "signature": "@router.get(\"/predictions\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/commands/summary\", tags=[\"Commands\"])",
    "type": "endpoint",
    "file": "backend/routes/analytics.py",
    "signature": "@router.post(\"/commands/summary\", tags=[\"Commands\"])",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/commands/summary\", tags=[\"Commands\"])",
    "type": "endpoint",
    "file": "backend/routes/analytics.py",
    "signature": "@router.get(\"/commands/summary\", tags=[\"Commands\"])",
    "docstring": ""
  },
  {
    "name": "get_command_summary",
    "type": "function",
    "file": "backend/routes/analytics.py",
    "signature": "def get_command_summary():",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/overview\")",
    "type": "endpoint",
    "file": "backend/routes/analytics_api.py",
    "signature": "@router.get(\"/overview\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/ml-models\")",
    "type": "endpoint",
    "file": "backend/routes/analytics_api.py",
    "signature": "@router.get(\"/ml-models\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/quantum-metrics\")",
    "type": "endpoint",
    "file": "backend/routes/analytics_api.py",
    "signature": "@router.get(\"/quantum-metrics\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/system-health\")",
    "type": "endpoint",
    "file": "backend/routes/analytics_api.py",
    "signature": "@router.get(\"/system-health\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/insights\")",
    "type": "endpoint",
    "file": "backend/routes/analytics_api.py",
    "signature": "@router.get(\"/insights\")",
    "docstring": ""
  },
  {
    "name": "_get_health_recommendations",
    "type": "function",
    "file": "backend/routes/analytics_api.py",
    "signature": "def _get_health_recommendations(health_metrics: Dict[str, Any]) -> List[str]:",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/register\", response_model=TokenResponse)",
    "type": "endpoint",
    "file": "backend/routes/auth.py",
    "signature": "@router.post(\"/register\", response_model=TokenResponse)",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/login\", response_model=TokenResponse)",
    "type": "endpoint",
    "file": "backend/routes/auth.py",
    "signature": "@router.post(\"/login\", response_model=TokenResponse)",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/refresh\")",
    "type": "endpoint",
    "file": "backend/routes/auth.py",
    "signature": "@router.post(\"/refresh\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/me\")",
    "type": "endpoint",
    "file": "backend/routes/auth.py",
    "signature": "@router.get(\"/me\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/api/user/profile\", response_model=UserProfileResponse)",
    "type": "endpoint",
    "file": "backend/routes/auth.py",
    "signature": "@router.get(\"/api/user/profile\", response_model=UserProfileResponse)",
    "docstring": ""
  },
  {
    "name": "@router.put(\"/api/user/profile\", response_model=UserProfileResponse)",
    "type": "endpoint",
    "file": "backend/routes/auth.py",
    "signature": "@router.put(\"/api/user/profile\", response_model=UserProfileResponse)",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/change-password\")",
    "type": "endpoint",
    "file": "backend/routes/auth.py",
    "signature": "@router.post(\"/change-password\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/logout\")",
    "type": "endpoint",
    "file": "backend/routes/auth.py",
    "signature": "@router.post(\"/logout\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/betting-opportunities\", response_model=List[BettingOpportunity])",
    "type": "endpoint",
    "file": "backend/routes/betting.py",
    "signature": "@router.get(\"/betting-opportunities\", response_model=List[BettingOpportunity])",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/arbitrage-opportunities\", response_model=List[ArbitrageOpportunity])",
    "type": "endpoint",
    "file": "backend/routes/betting.py",
    "signature": "@router.get(\"/arbitrage-opportunities\", response_model=List[ArbitrageOpportunity])",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/risk-profiles\", response_model=RiskProfilesResponse)",
    "type": "endpoint",
    "file": "backend/routes/betting.py",
    "signature": "@router.get(\"/risk-profiles\", response_model=RiskProfilesResponse)",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/circuit-breaker/ollama\")",
    "type": "endpoint",
    "file": "backend/routes/diagnostics.py",
    "signature": "@router.get(\"/circuit-breaker/ollama\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/system\")",
    "type": "endpoint",
    "file": "backend/routes/diagnostics.py",
    "signature": "@router.get(\"/system\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/lockedbets\")",
    "type": "endpoint",
    "file": "backend/routes/fanduel.py",
    "signature": "@router.get(\"/lockedbets\")",
    "docstring": ""
  },
  {
    "name": "FeedbackRequest",
    "type": "class",
    "file": "backend/routes/feedback.py",
    "signature": "class FeedbackRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "FeedbackRequest",
    "type": "class",
    "file": "backend/routes/feedback.py",
    "signature": "class FeedbackRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "FeedbackResponse",
    "type": "class",
    "file": "backend/routes/feedback.py",
    "signature": "class FeedbackResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "FeedbackResponse",
    "type": "class",
    "file": "backend/routes/feedback.py",
    "signature": "class FeedbackResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "send_feedback_email",
    "type": "function",
    "file": "backend/routes/feedback.py",
    "signature": "def send_feedback_email(feedback: FeedbackRequest) -> bool:",
    "docstring": ""
  },
  {
    "name": "save_feedback_to_file",
    "type": "function",
    "file": "backend/routes/feedback.py",
    "signature": "def save_feedback_to_file(feedback: FeedbackRequest) -> str:",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/feedback\", response_model=FeedbackResponse)",
    "type": "endpoint",
    "file": "backend/routes/feedback.py",
    "signature": "@router.post(\"/feedback\", response_model=FeedbackResponse)",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/feedback/stats\")",
    "type": "endpoint",
    "file": "backend/routes/feedback.py",
    "signature": "@router.get(\"/feedback/stats\")",
    "docstring": ""
  },
  {
    "name": "HealthResponse",
    "type": "class",
    "file": "backend/routes/health.py",
    "signature": "class HealthResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "HealthResponse",
    "type": "class",
    "file": "backend/routes/health.py",
    "signature": "class HealthResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/status\", response_model=HealthResponse)",
    "type": "endpoint",
    "file": "backend/routes/health.py",
    "signature": "@router.get(\"/status\", response_model=HealthResponse)",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/model/{model_name}/health\")",
    "type": "endpoint",
    "file": "backend/routes/health.py",
    "signature": "@router.get(\"/model/{model_name}/health\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/queue/status\")",
    "type": "endpoint",
    "file": "backend/routes/health.py",
    "signature": "@router.get(\"/queue/status\")",
    "docstring": ""
  },
  {
    "name": "EndpointStats",
    "type": "class",
    "file": "backend/routes/metrics.py",
    "signature": "class EndpointStats(BaseModel):",
    "docstring": ""
  },
  {
    "name": "EndpointStats",
    "type": "class",
    "file": "backend/routes/metrics.py",
    "signature": "class EndpointStats(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ModelStats",
    "type": "class",
    "file": "backend/routes/metrics.py",
    "signature": "class ModelStats(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ModelStats",
    "type": "class",
    "file": "backend/routes/metrics.py",
    "signature": "class ModelStats(BaseModel):",
    "docstring": ""
  },
  {
    "name": "SystemStats",
    "type": "class",
    "file": "backend/routes/metrics.py",
    "signature": "class SystemStats(BaseModel):",
    "docstring": ""
  },
  {
    "name": "SystemStats",
    "type": "class",
    "file": "backend/routes/metrics.py",
    "signature": "class SystemStats(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/stats/system\", response_model=SystemStats)",
    "type": "endpoint",
    "file": "backend/routes/metrics.py",
    "signature": "@router.get(\"/stats/system\", response_model=SystemStats)",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/stats/endpoint/{endpoint}\", response_model=EndpointStats)",
    "type": "endpoint",
    "file": "backend/routes/metrics.py",
    "signature": "@router.get(\"/stats/endpoint/{endpoint}\", response_model=EndpointStats)",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/stats/models\")",
    "type": "endpoint",
    "file": "backend/routes/metrics.py",
    "signature": "@router.get(\"/stats/models\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/stats/endpoints\")",
    "type": "endpoint",
    "file": "backend/routes/metrics.py",
    "signature": "@router.get(\"/stats/endpoints\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/v1/performance-stats\", response_model=PerformanceStats)",
    "type": "endpoint",
    "file": "backend/routes/performance.py",
    "signature": "@router.get(\"/v1/performance-stats\", response_model=PerformanceStats)",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/transactions\", response_model=TransactionsResponse)",
    "type": "endpoint",
    "file": "backend/routes/performance.py",
    "signature": "@router.get(\"/transactions\", response_model=TransactionsResponse)",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/active-bets\", response_model=ActiveBetsResponse)",
    "type": "endpoint",
    "file": "backend/routes/performance.py",
    "signature": "@router.get(\"/active-bets\", response_model=ActiveBetsResponse)",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/props\")",
    "type": "endpoint",
    "file": "backend/routes/prizepicks.py",
    "signature": "@router.get(\"/props\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/recommendations\")",
    "type": "endpoint",
    "file": "backend/routes/prizepicks.py",
    "signature": "@router.get(\"/recommendations\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/comprehensive-projections\")",
    "type": "endpoint",
    "file": "backend/routes/prizepicks.py",
    "signature": "@router.get(\"/comprehensive-projections\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/lineup/optimize\")",
    "type": "endpoint",
    "file": "backend/routes/prizepicks.py",
    "signature": "@router.post(\"/lineup/optimize\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/lineup/optimal\")",
    "type": "endpoint",
    "file": "backend/routes/prizepicks.py",
    "signature": "@router.get(\"/lineup/optimal\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/lineup/analysis\")",
    "type": "endpoint",
    "file": "backend/routes/prizepicks.py",
    "signature": "@router.get(\"/lineup/analysis\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/trends\")",
    "type": "endpoint",
    "file": "backend/routes/prizepicks.py",
    "signature": "@router.get(\"/trends\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/props/{prop_id}/explain\")",
    "type": "endpoint",
    "file": "backend/routes/prizepicks.py",
    "signature": "@router.post(\"/props/{prop_id}/explain\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/props/enhanced\")",
    "type": "endpoint",
    "file": "backend/routes/prizepicks.py",
    "signature": "@router.get(\"/props/enhanced\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/props/legacy\")",
    "type": "endpoint",
    "file": "backend/routes/prizepicks.py",
    "signature": "@router.get(\"/props/legacy\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/health\")",
    "type": "endpoint",
    "file": "backend/routes/prizepicks.py",
    "signature": "@router.get(\"/health\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/heal\")",
    "type": "endpoint",
    "file": "backend/routes/prizepicks.py",
    "signature": "@router.post(\"/heal\")",
    "docstring": ""
  },
  {
    "name": "# @router.get(\"/props\")",
    "type": "endpoint",
    "file": "backend/routes/prizepicks_simple.py",
    "signature": "# @router.get(\"/props\")",
    "docstring": ""
  },
  {
    "name": "# @router.get(\"/recommendations\")",
    "type": "endpoint",
    "file": "backend/routes/prizepicks_simple.py",
    "signature": "# @router.get(\"/recommendations\")",
    "docstring": ""
  },
  {
    "name": "# @router.get(\"/status\")",
    "type": "endpoint",
    "file": "backend/routes/prizepicks_simple.py",
    "signature": "# @router.get(\"/status\")",
    "docstring": ""
  },
  {
    "name": "BetAnalysisRequest",
    "type": "class",
    "file": "backend/routes/propollama.py",
    "signature": "class BetAnalysisRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "BetAnalysisRequest",
    "type": "class",
    "file": "backend/routes/propollama.py",
    "signature": "class BetAnalysisRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "BetAnalysisResponse",
    "type": "class",
    "file": "backend/routes/propollama.py",
    "signature": "class BetAnalysisResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "BetAnalysisResponse",
    "type": "class",
    "file": "backend/routes/propollama.py",
    "signature": "class BetAnalysisResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "get_cache_key",
    "type": "function",
    "file": "backend/routes/propollama.py",
    "signature": "def get_cache_key(request: BetAnalysisRequest) -> str:",
    "docstring": ""
  },
  {
    "name": "is_cache_valid",
    "type": "function",
    "file": "backend/routes/propollama.py",
    "signature": "def is_cache_valid(cache_key: str) -> bool:",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/best-bets-unified\", response_model=BetAnalysisResponse)",
    "type": "endpoint",
    "file": "backend/routes/propollama.py",
    "signature": "@router.post(\"/best-bets-unified\", response_model=BetAnalysisResponse)",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/cache/stats\")",
    "type": "endpoint",
    "file": "backend/routes/propollama.py",
    "signature": "@router.get(\"/cache/stats\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/cache/clear\")",
    "type": "endpoint",
    "file": "backend/routes/propollama.py",
    "signature": "@router.post(\"/cache/clear\")",
    "docstring": ""
  },
  {
    "name": "AnalysisRequest",
    "type": "class",
    "file": "backend/routes/real_time_analysis.py",
    "signature": "class AnalysisRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "AnalysisRequest",
    "type": "class",
    "file": "backend/routes/real_time_analysis.py",
    "signature": "class AnalysisRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "AnalysisResponse",
    "type": "class",
    "file": "backend/routes/real_time_analysis.py",
    "signature": "class AnalysisResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "AnalysisResponse",
    "type": "class",
    "file": "backend/routes/real_time_analysis.py",
    "signature": "class AnalysisResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ProgressResponse",
    "type": "class",
    "file": "backend/routes/real_time_analysis.py",
    "signature": "class ProgressResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ProgressResponse",
    "type": "class",
    "file": "backend/routes/real_time_analysis.py",
    "signature": "class ProgressResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "BetOpportunity",
    "type": "class",
    "file": "backend/routes/real_time_analysis.py",
    "signature": "class BetOpportunity(BaseModel):",
    "docstring": ""
  },
  {
    "name": "BetOpportunity",
    "type": "class",
    "file": "backend/routes/real_time_analysis.py",
    "signature": "class BetOpportunity(BaseModel):",
    "docstring": ""
  },
  {
    "name": "OptimalLineupResponse",
    "type": "class",
    "file": "backend/routes/real_time_analysis.py",
    "signature": "class OptimalLineupResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "OptimalLineupResponse",
    "type": "class",
    "file": "backend/routes/real_time_analysis.py",
    "signature": "class OptimalLineupResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/start\", response_model=AnalysisResponse)",
    "type": "endpoint",
    "file": "backend/routes/real_time_analysis.py",
    "signature": "@router.post(\"/start\", response_model=AnalysisResponse)",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/progress/{analysis_id}\", response_model=ProgressResponse)",
    "type": "endpoint",
    "file": "backend/routes/real_time_analysis.py",
    "signature": "@router.get(\"/progress/{analysis_id}\", response_model=ProgressResponse)",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/results/{analysis_id}/opportunities\", response_model=List[BetOpportunity])",
    "type": "endpoint",
    "file": "backend/routes/real_time_analysis.py",
    "signature": "@router.get(\"/results/{analysis_id}/opportunities\", response_model=List[BetOpportunity])",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/results/{analysis_id}/lineups\", response_model=List[OptimalLineupResponse])",
    "type": "endpoint",
    "file": "backend/routes/real_time_analysis.py",
    "signature": "@router.get(\"/results/{analysis_id}/lineups\", response_model=List[OptimalLineupResponse])",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/sports\", response_model=List[str])",
    "type": "endpoint",
    "file": "backend/routes/real_time_analysis.py",
    "signature": "@router.get(\"/sports\", response_model=List[str])",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/status\")",
    "type": "endpoint",
    "file": "backend/routes/real_time_analysis.py",
    "signature": "@router.get(\"/status\")",
    "docstring": ""
  },
  {
    "name": "ShapExplanationRequest",
    "type": "class",
    "file": "backend/routes/shap.py",
    "signature": "class ShapExplanationRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ShapExplanationRequest",
    "type": "class",
    "file": "backend/routes/shap.py",
    "signature": "class ShapExplanationRequest(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ShapExplanationResponse",
    "type": "class",
    "file": "backend/routes/shap.py",
    "signature": "class ShapExplanationResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "ShapExplanationResponse",
    "type": "class",
    "file": "backend/routes/shap.py",
    "signature": "class ShapExplanationResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/explain\", response_model=ShapExplanationResponse)",
    "type": "endpoint",
    "file": "backend/routes/shap.py",
    "signature": "@router.post(\"/explain\", response_model=ShapExplanationResponse)",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/features\")",
    "type": "endpoint",
    "file": "backend/routes/shap.py",
    "signature": "@router.get(\"/features\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/batch-explain\")",
    "type": "endpoint",
    "file": "backend/routes/shap.py",
    "signature": "@router.post(\"/batch-explain\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/enhanced-bets\")",
    "type": "endpoint",
    "file": "backend/routes/unified_api.py",
    "signature": "@router.get(\"/enhanced-bets\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/portfolio-optimization\")",
    "type": "endpoint",
    "file": "backend/routes/unified_api.py",
    "signature": "@router.get(\"/portfolio-optimization\")",
    "docstring": ""
  },
  {
    "name": "@router.post(\"/portfolio/analyze\")",
    "type": "endpoint",
    "file": "backend/routes/unified_api.py",
    "signature": "@router.post(\"/portfolio/analyze\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/ai-insights\")",
    "type": "endpoint",
    "file": "backend/routes/unified_api.py",
    "signature": "@router.get(\"/ai-insights\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/live-context/{game_id}\")",
    "type": "endpoint",
    "file": "backend/routes/unified_api.py",
    "signature": "@router.get(\"/live-context/{game_id}\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/multi-platform\")",
    "type": "endpoint",
    "file": "backend/routes/unified_api.py",
    "signature": "@router.get(\"/multi-platform\")",
    "docstring": ""
  },
  {
    "name": "@router.get(\"/health\")",
    "type": "endpoint",
    "file": "backend/routes/unified_api.py",
    "signature": "@router.get(\"/health\")",
    "docstring": ""
  },
  {
    "name": "SportType",
    "type": "class",
    "file": "backend/services/advanced_ensemble_service.py",
    "signature": "class SportType(Enum):",
    "docstring": ""
  },
  {
    "name": "SportType",
    "type": "class",
    "file": "backend/services/advanced_ensemble_service.py",
    "signature": "class SportType(Enum):",
    "docstring": ""
  },
  {
    "name": "PropType",
    "type": "class",
    "file": "backend/services/advanced_ensemble_service.py",
    "signature": "class PropType(Enum):",
    "docstring": ""
  },
  {
    "name": "PropType",
    "type": "class",
    "file": "backend/services/advanced_ensemble_service.py",
    "signature": "class PropType(Enum):",
    "docstring": ""
  },
  {
    "name": "EnsemblePrediction",
    "type": "class",
    "file": "backend/services/advanced_ensemble_service.py",
    "signature": "class EnsemblePrediction:",
    "docstring": ""
  },
  {
    "name": "EnsemblePrediction",
    "type": "class",
    "file": "backend/services/advanced_ensemble_service.py",
    "signature": "class EnsemblePrediction:",
    "docstring": ""
  },
  {
    "name": "ModelPerformance",
    "type": "class",
    "file": "backend/services/advanced_ensemble_service.py",
    "signature": "class ModelPerformance:",
    "docstring": ""
  },
  {
    "name": "ModelPerformance",
    "type": "class",
    "file": "backend/services/advanced_ensemble_service.py",
    "signature": "class ModelPerformance:",
    "docstring": ""
  },
  {
    "name": "AdvancedEnsembleService",
    "type": "class",
    "file": "backend/services/advanced_ensemble_service.py",
    "signature": "class AdvancedEnsembleService:",
    "docstring": ""
  },
  {
    "name": "AdvancedEnsembleService",
    "type": "class",
    "file": "backend/services/advanced_ensemble_service.py",
    "signature": "class AdvancedEnsembleService:",
    "docstring": ""
  },
  {
    "name": "PredictionResult",
    "type": "class",
    "file": "backend/services/advanced_ml_service.py",
    "signature": "class PredictionResult:",
    "docstring": ""
  },
  {
    "name": "PredictionResult",
    "type": "class",
    "file": "backend/services/advanced_ml_service.py",
    "signature": "class PredictionResult:",
    "docstring": ""
  },
  {
    "name": "ModelPerformance",
    "type": "class",
    "file": "backend/services/advanced_ml_service.py",
    "signature": "class ModelPerformance:",
    "docstring": ""
  },
  {
    "name": "ModelPerformance",
    "type": "class",
    "file": "backend/services/advanced_ml_service.py",
    "signature": "class ModelPerformance:",
    "docstring": ""
  },
  {
    "name": "BaseMLModel",
    "type": "class",
    "file": "backend/services/advanced_ml_service.py",
    "signature": "class BaseMLModel(ABC):",
    "docstring": ""
  },
  {
    "name": "BaseMLModel",
    "type": "class",
    "file": "backend/services/advanced_ml_service.py",
    "signature": "class BaseMLModel(ABC):",
    "docstring": ""
  },
  {
    "name": "NeuralEnsembleModel",
    "type": "class",
    "file": "backend/services/advanced_ml_service.py",
    "signature": "class NeuralEnsembleModel(BaseMLModel):",
    "docstring": ""
  },
  {
    "name": "NeuralEnsembleModel",
    "type": "class",
    "file": "backend/services/advanced_ml_service.py",
    "signature": "class NeuralEnsembleModel(BaseMLModel):",
    "docstring": ""
  },
  {
    "name": "XGBoostModel",
    "type": "class",
    "file": "backend/services/advanced_ml_service.py",
    "signature": "class XGBoostModel(BaseMLModel):",
    "docstring": ""
  },
  {
    "name": "XGBoostModel",
    "type": "class",
    "file": "backend/services/advanced_ml_service.py",
    "signature": "class XGBoostModel(BaseMLModel):",
    "docstring": ""
  },
  {
    "name": "LightGBMModel",
    "type": "class",
    "file": "backend/services/advanced_ml_service.py",
    "signature": "class LightGBMModel(BaseMLModel):",
    "docstring": ""
  },
  {
    "name": "LightGBMModel",
    "type": "class",
    "file": "backend/services/advanced_ml_service.py",
    "signature": "class LightGBMModel(BaseMLModel):",
    "docstring": ""
  },
  {
    "name": "TransformerModel",
    "type": "class",
    "file": "backend/services/advanced_ml_service.py",
    "signature": "class TransformerModel(BaseMLModel):",
    "docstring": ""
  },
  {
    "name": "TransformerModel",
    "type": "class",
    "file": "backend/services/advanced_ml_service.py",
    "signature": "class TransformerModel(BaseMLModel):",
    "docstring": ""
  },
  {
    "name": "AdvancedMLEnsemble",
    "type": "class",
    "file": "backend/services/advanced_ml_service.py",
    "signature": "class AdvancedMLEnsemble:",
    "docstring": ""
  },
  {
    "name": "AdvancedMLEnsemble",
    "type": "class",
    "file": "backend/services/advanced_ml_service.py",
    "signature": "class AdvancedMLEnsemble:",
    "docstring": ""
  },
  {
    "name": "AsyncPerformanceMetrics",
    "type": "class",
    "file": "backend/services/async_performance_optimizer.py",
    "signature": "class AsyncPerformanceMetrics:",
    "docstring": ""
  },
  {
    "name": "AsyncPerformanceMetrics",
    "type": "class",
    "file": "backend/services/async_performance_optimizer.py",
    "signature": "class AsyncPerformanceMetrics:",
    "docstring": ""
  },
  {
    "name": "AsyncPerformanceOptimizer",
    "type": "class",
    "file": "backend/services/async_performance_optimizer.py",
    "signature": "class AsyncPerformanceOptimizer:",
    "docstring": ""
  },
  {
    "name": "AsyncPerformanceOptimizer",
    "type": "class",
    "file": "backend/services/async_performance_optimizer.py",
    "signature": "class AsyncPerformanceOptimizer:",
    "docstring": ""
  },
  {
    "name": "APICache",
    "type": "class",
    "file": "backend/services/cache_manager.py",
    "signature": "class APICache:",
    "docstring": ""
  },
  {
    "name": "APICache",
    "type": "class",
    "file": "backend/services/cache_manager.py",
    "signature": "class APICache:",
    "docstring": ""
  },
  {
    "name": "FeatureCategory",
    "type": "class",
    "file": "backend/services/comprehensive_feature_engine.py",
    "signature": "class FeatureCategory(Enum):",
    "docstring": ""
  },
  {
    "name": "FeatureCategory",
    "type": "class",
    "file": "backend/services/comprehensive_feature_engine.py",
    "signature": "class FeatureCategory(Enum):",
    "docstring": ""
  },
  {
    "name": "FeatureSet",
    "type": "class",
    "file": "backend/services/comprehensive_feature_engine.py",
    "signature": "class FeatureSet:",
    "docstring": ""
  },
  {
    "name": "FeatureSet",
    "type": "class",
    "file": "backend/services/comprehensive_feature_engine.py",
    "signature": "class FeatureSet:",
    "docstring": ""
  },
  {
    "name": "ComprehensiveFeatureEngine",
    "type": "class",
    "file": "backend/services/comprehensive_feature_engine.py",
    "signature": "class ComprehensiveFeatureEngine:",
    "docstring": ""
  },
  {
    "name": "ComprehensiveFeatureEngine",
    "type": "class",
    "file": "backend/services/comprehensive_feature_engine.py",
    "signature": "class ComprehensiveFeatureEngine:",
    "docstring": ""
  },
  {
    "name": "ComprehensivePrizePicksService",
    "type": "class",
    "file": "backend/services/comprehensive_prizepicks_service.py",
    "signature": "class ComprehensivePrizePicksService:",
    "docstring": ""
  },
  {
    "name": "ComprehensivePrizePicksService",
    "type": "class",
    "file": "backend/services/comprehensive_prizepicks_service.py",
    "signature": "class ComprehensivePrizePicksService:",
    "docstring": ""
  },
  {
    "name": "SportsbookProvider",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class SportsbookProvider(Enum):",
    "docstring": ""
  },
  {
    "name": "SportsbookProvider",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class SportsbookProvider(Enum):",
    "docstring": ""
  },
  {
    "name": "SportsbookOdds",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class SportsbookOdds:",
    "docstring": ""
  },
  {
    "name": "SportsbookOdds",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class SportsbookOdds:",
    "docstring": ""
  },
  {
    "name": "MarketComparison",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class MarketComparison:",
    "docstring": ""
  },
  {
    "name": "MarketComparison",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class MarketComparison:",
    "docstring": ""
  },
  {
    "name": "WeatherData",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class WeatherData:",
    "docstring": ""
  },
  {
    "name": "WeatherData",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class WeatherData:",
    "docstring": ""
  },
  {
    "name": "InjuryReport",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class InjuryReport:",
    "docstring": ""
  },
  {
    "name": "InjuryReport",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class InjuryReport:",
    "docstring": ""
  },
  {
    "name": "ComprehensiveSportsbookIntegration",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class ComprehensiveSportsbookIntegration:",
    "docstring": ""
  },
  {
    "name": "ComprehensiveSportsbookIntegration",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class ComprehensiveSportsbookIntegration:",
    "docstring": ""
  },
  {
    "name": "TheOddsAPIProvider",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class TheOddsAPIProvider:",
    "docstring": ""
  },
  {
    "name": "TheOddsAPIProvider",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class TheOddsAPIProvider:",
    "docstring": ""
  },
  {
    "name": "ESPNProvider",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class ESPNProvider:",
    "docstring": ""
  },
  {
    "name": "ESPNProvider",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class ESPNProvider:",
    "docstring": ""
  },
  {
    "name": "NBAAPIProvider",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class NBAAPIProvider:",
    "docstring": ""
  },
  {
    "name": "NBAAPIProvider",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class NBAAPIProvider:",
    "docstring": ""
  },
  {
    "name": "NFLAPIProvider",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class NFLAPIProvider:",
    "docstring": ""
  },
  {
    "name": "NFLAPIProvider",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class NFLAPIProvider:",
    "docstring": ""
  },
  {
    "name": "MLBAPIProvider",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class MLBAPIProvider:",
    "docstring": ""
  },
  {
    "name": "MLBAPIProvider",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class MLBAPIProvider:",
    "docstring": ""
  },
  {
    "name": "WeatherAPIProvider",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class WeatherAPIProvider:",
    "docstring": ""
  },
  {
    "name": "WeatherAPIProvider",
    "type": "class",
    "file": "backend/services/comprehensive_sportsbook_integration.py",
    "signature": "class WeatherAPIProvider:",
    "docstring": ""
  },
  {
    "name": "EnhancedPrizePicksDataFetcher",
    "type": "class",
    "file": "backend/services/data_fetchers_enhanced.py",
    "signature": "class EnhancedPrizePicksDataFetcher:",
    "docstring": ""
  },
  {
    "name": "EnhancedPrizePicksDataFetcher",
    "type": "class",
    "file": "backend/services/data_fetchers_enhanced.py",
    "signature": "class EnhancedPrizePicksDataFetcher:",
    "docstring": ""
  },
  {
    "name": "User",
    "type": "class",
    "file": "backend/services/database_service.py",
    "signature": "class User(Base):",
    "docstring": ""
  },
  {
    "name": "User",
    "type": "class",
    "file": "backend/services/database_service.py",
    "signature": "class User(Base):",
    "docstring": ""
  },
  {
    "name": "Match",
    "type": "class",
    "file": "backend/services/database_service.py",
    "signature": "class Match(Base):",
    "docstring": ""
  },
  {
    "name": "Match",
    "type": "class",
    "file": "backend/services/database_service.py",
    "signature": "class Match(Base):",
    "docstring": ""
  },
  {
    "name": "Bet",
    "type": "class",
    "file": "backend/services/database_service.py",
    "signature": "class Bet(Base):",
    "docstring": ""
  },
  {
    "name": "Bet",
    "type": "class",
    "file": "backend/services/database_service.py",
    "signature": "class Bet(Base):",
    "docstring": ""
  },
  {
    "name": "DatabaseService",
    "type": "class",
    "file": "backend/services/database_service.py",
    "signature": "class DatabaseService:",
    "docstring": ""
  },
  {
    "name": "DatabaseService",
    "type": "class",
    "file": "backend/services/database_service.py",
    "signature": "class DatabaseService:",
    "docstring": ""
  },
  {
    "name": "create_tables",
    "type": "function",
    "file": "backend/services/database_service.py",
    "signature": "def create_tables():",
    "docstring": ""
  },
  {
    "name": "get_db_session",
    "type": "function",
    "file": "backend/services/database_service.py",
    "signature": "def get_db_session():",
    "docstring": ""
  },
  {
    "name": "EnhancedPrediction",
    "type": "class",
    "file": "backend/services/enhanced_ml_ensemble_service.py",
    "signature": "class EnhancedPrediction:",
    "docstring": ""
  },
  {
    "name": "EnhancedPrediction",
    "type": "class",
    "file": "backend/services/enhanced_ml_ensemble_service.py",
    "signature": "class EnhancedPrediction:",
    "docstring": ""
  },
  {
    "name": "EnhancedMLEnsembleService",
    "type": "class",
    "file": "backend/services/enhanced_ml_ensemble_service.py",
    "signature": "class EnhancedMLEnsembleService:",
    "docstring": ""
  },
  {
    "name": "EnhancedMLEnsembleService",
    "type": "class",
    "file": "backend/services/enhanced_ml_ensemble_service.py",
    "signature": "class EnhancedMLEnsembleService:",
    "docstring": ""
  },
  {
    "name": "PrizePicksProp",
    "type": "class",
    "file": "backend/services/enhanced_prizepicks_service.py",
    "signature": "class PrizePicksProp(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PrizePicksProp",
    "type": "class",
    "file": "backend/services/enhanced_prizepicks_service.py",
    "signature": "class PrizePicksProp(BaseModel):",
    "docstring": ""
  },
  {
    "name": "EnhancedPrizePicksService",
    "type": "class",
    "file": "backend/services/enhanced_prizepicks_service.py",
    "signature": "class EnhancedPrizePicksService:",
    "docstring": ""
  },
  {
    "name": "EnhancedPrizePicksService",
    "type": "class",
    "file": "backend/services/enhanced_prizepicks_service.py",
    "signature": "class EnhancedPrizePicksService:",
    "docstring": ""
  },
  {
    "name": "PrizePicksProp",
    "type": "class",
    "file": "backend/services/enhanced_prizepicks_service_v2.py",
    "signature": "class PrizePicksProp(BaseModel):",
    "docstring": ""
  },
  {
    "name": "PrizePicksProp",
    "type": "class",
    "file": "backend/services/enhanced_prizepicks_service_v2.py",
    "signature": "class PrizePicksProp(BaseModel):",
    "docstring": ""
  },
  {
    "name": "EnhancedPrizePicksService",
    "type": "class",
    "file": "backend/services/enhanced_prizepicks_service_v2.py",
    "signature": "class EnhancedPrizePicksService:",
    "docstring": ""
  },
  {
    "name": "EnhancedPrizePicksService",
    "type": "class",
    "file": "backend/services/enhanced_prizepicks_service_v2.py",
    "signature": "class EnhancedPrizePicksService:",
    "docstring": ""
  },
  {
    "name": "DataSourceType",
    "type": "class",
    "file": "backend/services/enterprise_data_pipeline.py",
    "signature": "class DataSourceType(Enum):",
    "docstring": ""
  },
  {
    "name": "DataSourceType",
    "type": "class",
    "file": "backend/services/enterprise_data_pipeline.py",
    "signature": "class DataSourceType(Enum):",
    "docstring": ""
  },
  {
    "name": "DataQuality",
    "type": "class",
    "file": "backend/services/enterprise_data_pipeline.py",
    "signature": "class DataQuality(Enum):",
    "docstring": ""
  },
  {
    "name": "DataQuality",
    "type": "class",
    "file": "backend/services/enterprise_data_pipeline.py",
    "signature": "class DataQuality(Enum):",
    "docstring": ""
  },
  {
    "name": "DataPoint",
    "type": "class",
    "file": "backend/services/enterprise_data_pipeline.py",
    "signature": "class DataPoint:",
    "docstring": ""
  },
  {
    "name": "DataPoint",
    "type": "class",
    "file": "backend/services/enterprise_data_pipeline.py",
    "signature": "class DataPoint:",
    "docstring": ""
  },
  {
    "name": "DataValidationRule",
    "type": "class",
    "file": "backend/services/enterprise_data_pipeline.py",
    "signature": "class DataValidationRule:",
    "docstring": ""
  },
  {
    "name": "DataValidationRule",
    "type": "class",
    "file": "backend/services/enterprise_data_pipeline.py",
    "signature": "class DataValidationRule:",
    "docstring": ""
  },
  {
    "name": "DataPipelineMetrics",
    "type": "class",
    "file": "backend/services/enterprise_data_pipeline.py",
    "signature": "class DataPipelineMetrics:",
    "docstring": ""
  },
  {
    "name": "DataPipelineMetrics",
    "type": "class",
    "file": "backend/services/enterprise_data_pipeline.py",
    "signature": "class DataPipelineMetrics:",
    "docstring": ""
  },
  {
    "name": "DataIngestionLog",
    "type": "class",
    "file": "backend/services/enterprise_data_pipeline.py",
    "signature": "class DataIngestionLog(Base):",
    "docstring": ""
  },
  {
    "name": "DataIngestionLog",
    "type": "class",
    "file": "backend/services/enterprise_data_pipeline.py",
    "signature": "class DataIngestionLog(Base):",
    "docstring": ""
  },
  {
    "name": "DataQualityMetrics",
    "type": "class",
    "file": "backend/services/enterprise_data_pipeline.py",
    "signature": "class DataQualityMetrics(Base):",
    "docstring": ""
  },
  {
    "name": "DataQualityMetrics",
    "type": "class",
    "file": "backend/services/enterprise_data_pipeline.py",
    "signature": "class DataQualityMetrics(Base):",
    "docstring": ""
  },
  {
    "name": "EnterpriseDataPipeline",
    "type": "class",
    "file": "backend/services/enterprise_data_pipeline.py",
    "signature": "class EnterpriseDataPipeline:",
    "docstring": ""
  },
  {
    "name": "EnterpriseDataPipeline",
    "type": "class",
    "file": "backend/services/enterprise_data_pipeline.py",
    "signature": "class EnterpriseDataPipeline:",
    "docstring": ""
  },
  {
    "name": "EnsemblePrediction",
    "type": "class",
    "file": "backend/services/intelligent_ensemble_system.py",
    "signature": "class EnsemblePrediction:",
    "docstring": ""
  },
  {
    "name": "EnsemblePrediction",
    "type": "class",
    "file": "backend/services/intelligent_ensemble_system.py",
    "signature": "class EnsemblePrediction:",
    "docstring": ""
  },
  {
    "name": "PredictionCacheEntry",
    "type": "class",
    "file": "backend/services/intelligent_ensemble_system.py",
    "signature": "class PredictionCacheEntry:",
    "docstring": ""
  },
  {
    "name": "PredictionCacheEntry",
    "type": "class",
    "file": "backend/services/intelligent_ensemble_system.py",
    "signature": "class PredictionCacheEntry:",
    "docstring": ""
  },
  {
    "name": "IntelligentEnsembleSystem",
    "type": "class",
    "file": "backend/services/intelligent_ensemble_system.py",
    "signature": "class IntelligentEnsembleSystem:",
    "docstring": ""
  },
  {
    "name": "IntelligentEnsembleSystem",
    "type": "class",
    "file": "backend/services/intelligent_ensemble_system.py",
    "signature": "class IntelligentEnsembleSystem:",
    "docstring": ""
  },
  {
    "name": "PropOllamaIntelligenceService",
    "type": "class",
    "file": "backend/services/propollama_intelligence_service.py",
    "signature": "class PropOllamaIntelligenceService:",
    "docstring": ""
  },
  {
    "name": "PropOllamaIntelligenceService",
    "type": "class",
    "file": "backend/services/propollama_intelligence_service.py",
    "signature": "class PropOllamaIntelligenceService:",
    "docstring": ""
  },
  {
    "name": "QuantumState",
    "type": "class",
    "file": "backend/services/quantum_optimization_service.py",
    "signature": "class QuantumState:",
    "docstring": ""
  },
  {
    "name": "QuantumState",
    "type": "class",
    "file": "backend/services/quantum_optimization_service.py",
    "signature": "class QuantumState:",
    "docstring": ""
  },
  {
    "name": "OptimizationResult",
    "type": "class",
    "file": "backend/services/quantum_optimization_service.py",
    "signature": "class OptimizationResult:",
    "docstring": ""
  },
  {
    "name": "OptimizationResult",
    "type": "class",
    "file": "backend/services/quantum_optimization_service.py",
    "signature": "class OptimizationResult:",
    "docstring": ""
  },
  {
    "name": "QuantumInspiredOptimizer",
    "type": "class",
    "file": "backend/services/quantum_optimization_service.py",
    "signature": "class QuantumInspiredOptimizer:",
    "docstring": ""
  },
  {
    "name": "QuantumInspiredOptimizer",
    "type": "class",
    "file": "backend/services/quantum_optimization_service.py",
    "signature": "class QuantumInspiredOptimizer:",
    "docstring": ""
  },
  {
    "name": "QuantumPortfolioManager",
    "type": "class",
    "file": "backend/services/quantum_optimization_service.py",
    "signature": "class QuantumPortfolioManager:",
    "docstring": ""
  },
  {
    "name": "QuantumPortfolioManager",
    "type": "class",
    "file": "backend/services/quantum_optimization_service.py",
    "signature": "class QuantumPortfolioManager:",
    "docstring": ""
  },
  {
    "name": "OddsData",
    "type": "class",
    "file": "backend/services/real_data_service.py",
    "signature": "class OddsData:",
    "docstring": ""
  },
  {
    "name": "OddsData",
    "type": "class",
    "file": "backend/services/real_data_service.py",
    "signature": "class OddsData:",
    "docstring": ""
  },
  {
    "name": "PropData",
    "type": "class",
    "file": "backend/services/real_data_service.py",
    "signature": "class PropData:",
    "docstring": ""
  },
  {
    "name": "PropData",
    "type": "class",
    "file": "backend/services/real_data_service.py",
    "signature": "class PropData:",
    "docstring": ""
  },
  {
    "name": "RealDataService",
    "type": "class",
    "file": "backend/services/real_data_service.py",
    "signature": "class RealDataService:",
    "docstring": ""
  },
  {
    "name": "RealDataService",
    "type": "class",
    "file": "backend/services/real_data_service.py",
    "signature": "class RealDataService:",
    "docstring": ""
  },
  {
    "name": "RealMLModels",
    "type": "class",
    "file": "backend/services/real_ml_service.py",
    "signature": "class RealMLModels:",
    "docstring": ""
  },
  {
    "name": "RealMLModels",
    "type": "class",
    "file": "backend/services/real_ml_service.py",
    "signature": "class RealMLModels:",
    "docstring": ""
  },
  {
    "name": "RealModelMetrics",
    "type": "class",
    "file": "backend/services/real_ml_training_service.py",
    "signature": "class RealModelMetrics:",
    "docstring": ""
  },
  {
    "name": "RealModelMetrics",
    "type": "class",
    "file": "backend/services/real_ml_training_service.py",
    "signature": "class RealModelMetrics:",
    "docstring": ""
  },
  {
    "name": "RealTrainingData",
    "type": "class",
    "file": "backend/services/real_ml_training_service.py",
    "signature": "class RealTrainingData:",
    "docstring": ""
  },
  {
    "name": "RealTrainingData",
    "type": "class",
    "file": "backend/services/real_ml_training_service.py",
    "signature": "class RealTrainingData:",
    "docstring": ""
  },
  {
    "name": "RealMLTrainingService",
    "type": "class",
    "file": "backend/services/real_ml_training_service.py",
    "signature": "class RealMLTrainingService:",
    "docstring": ""
  },
  {
    "name": "RealMLTrainingService",
    "type": "class",
    "file": "backend/services/real_ml_training_service.py",
    "signature": "class RealMLTrainingService:",
    "docstring": ""
  },
  {
    "name": "RealPrizePicksProp",
    "type": "class",
    "file": "backend/services/real_prizepicks_service.py",
    "signature": "class RealPrizePicksProp:",
    "docstring": ""
  },
  {
    "name": "RealPrizePicksProp",
    "type": "class",
    "file": "backend/services/real_prizepicks_service.py",
    "signature": "class RealPrizePicksProp:",
    "docstring": ""
  },
  {
    "name": "RealPrizePicksService",
    "type": "class",
    "file": "backend/services/real_prizepicks_service.py",
    "signature": "class RealPrizePicksService:",
    "docstring": ""
  },
  {
    "name": "RealPrizePicksService",
    "type": "class",
    "file": "backend/services/real_prizepicks_service.py",
    "signature": "class RealPrizePicksService:",
    "docstring": ""
  },
  {
    "name": "RealSHAPExplanation",
    "type": "class",
    "file": "backend/services/real_shap_service.py",
    "signature": "class RealSHAPExplanation:",
    "docstring": ""
  },
  {
    "name": "RealSHAPExplanation",
    "type": "class",
    "file": "backend/services/real_shap_service.py",
    "signature": "class RealSHAPExplanation:",
    "docstring": ""
  },
  {
    "name": "RealFeatureImportance",
    "type": "class",
    "file": "backend/services/real_shap_service.py",
    "signature": "class RealFeatureImportance:",
    "docstring": ""
  },
  {
    "name": "RealFeatureImportance",
    "type": "class",
    "file": "backend/services/real_shap_service.py",
    "signature": "class RealFeatureImportance:",
    "docstring": ""
  },
  {
    "name": "RealSHAPService",
    "type": "class",
    "file": "backend/services/real_shap_service.py",
    "signature": "class RealSHAPService:",
    "docstring": ""
  },
  {
    "name": "RealSHAPService",
    "type": "class",
    "file": "backend/services/real_shap_service.py",
    "signature": "class RealSHAPService:",
    "docstring": ""
  },
  {
    "name": "SportCategory",
    "type": "class",
    "file": "backend/services/real_time_analysis_engine.py",
    "signature": "class SportCategory(Enum):",
    "docstring": ""
  },
  {
    "name": "SportCategory",
    "type": "class",
    "file": "backend/services/real_time_analysis_engine.py",
    "signature": "class SportCategory(Enum):",
    "docstring": ""
  },
  {
    "name": "BetType",
    "type": "class",
    "file": "backend/services/real_time_analysis_engine.py",
    "signature": "class BetType(Enum):",
    "docstring": ""
  },
  {
    "name": "BetType",
    "type": "class",
    "file": "backend/services/real_time_analysis_engine.py",
    "signature": "class BetType(Enum):",
    "docstring": ""
  },
  {
    "name": "RealTimeBet",
    "type": "class",
    "file": "backend/services/real_time_analysis_engine.py",
    "signature": "class RealTimeBet:",
    "docstring": ""
  },
  {
    "name": "RealTimeBet",
    "type": "class",
    "file": "backend/services/real_time_analysis_engine.py",
    "signature": "class RealTimeBet:",
    "docstring": ""
  },
  {
    "name": "AnalysisProgress",
    "type": "class",
    "file": "backend/services/real_time_analysis_engine.py",
    "signature": "class AnalysisProgress:",
    "docstring": ""
  },
  {
    "name": "AnalysisProgress",
    "type": "class",
    "file": "backend/services/real_time_analysis_engine.py",
    "signature": "class AnalysisProgress:",
    "docstring": ""
  },
  {
    "name": "OptimalLineup",
    "type": "class",
    "file": "backend/services/real_time_analysis_engine.py",
    "signature": "class OptimalLineup:",
    "docstring": ""
  },
  {
    "name": "OptimalLineup",
    "type": "class",
    "file": "backend/services/real_time_analysis_engine.py",
    "signature": "class OptimalLineup:",
    "docstring": ""
  },
  {
    "name": "RealTimeAnalysisEngine",
    "type": "class",
    "file": "backend/services/real_time_analysis_engine.py",
    "signature": "class RealTimeAnalysisEngine:",
    "docstring": ""
  },
  {
    "name": "RealTimeAnalysisEngine",
    "type": "class",
    "file": "backend/services/real_time_analysis_engine.py",
    "signature": "class RealTimeAnalysisEngine:",
    "docstring": ""
  },
  {
    "name": "PerformanceMetric",
    "type": "class",
    "file": "backend/services/real_time_performance_metrics.py",
    "signature": "class PerformanceMetric:",
    "docstring": ""
  },
  {
    "name": "PerformanceMetric",
    "type": "class",
    "file": "backend/services/real_time_performance_metrics.py",
    "signature": "class PerformanceMetric:",
    "docstring": ""
  },
  {
    "name": "SystemSnapshot",
    "type": "class",
    "file": "backend/services/real_time_performance_metrics.py",
    "signature": "class SystemSnapshot:",
    "docstring": ""
  },
  {
    "name": "SystemSnapshot",
    "type": "class",
    "file": "backend/services/real_time_performance_metrics.py",
    "signature": "class SystemSnapshot:",
    "docstring": ""
  },
  {
    "name": "RealTimePerformanceMetrics",
    "type": "class",
    "file": "backend/services/real_time_performance_metrics.py",
    "signature": "class RealTimePerformanceMetrics:",
    "docstring": ""
  },
  {
    "name": "RealTimePerformanceMetrics",
    "type": "class",
    "file": "backend/services/real_time_performance_metrics.py",
    "signature": "class RealTimePerformanceMetrics:",
    "docstring": ""
  },
  {
    "name": "main",
    "type": "function",
    "file": "backend/services/real_time_performance_metrics.py",
    "signature": "def main():",
    "docstring": ""
  },
  {
    "name": "PredictionConfidence",
    "type": "class",
    "file": "backend/services/real_time_prediction_engine.py",
    "signature": "class PredictionConfidence(Enum):",
    "docstring": ""
  },
  {
    "name": "PredictionConfidence",
    "type": "class",
    "file": "backend/services/real_time_prediction_engine.py",
    "signature": "class PredictionConfidence(Enum):",
    "docstring": ""
  },
  {
    "name": "RealTimePrediction",
    "type": "class",
    "file": "backend/services/real_time_prediction_engine.py",
    "signature": "class RealTimePrediction:",
    "docstring": ""
  },
  {
    "name": "RealTimePrediction",
    "type": "class",
    "file": "backend/services/real_time_prediction_engine.py",
    "signature": "class RealTimePrediction:",
    "docstring": ""
  },
  {
    "name": "PredictionSystemHealth",
    "type": "class",
    "file": "backend/services/real_time_prediction_engine.py",
    "signature": "class PredictionSystemHealth:",
    "docstring": ""
  },
  {
    "name": "PredictionSystemHealth",
    "type": "class",
    "file": "backend/services/real_time_prediction_engine.py",
    "signature": "class PredictionSystemHealth:",
    "docstring": ""
  },
  {
    "name": "RealTimePredictionEngine",
    "type": "class",
    "file": "backend/services/real_time_prediction_engine.py",
    "signature": "class RealTimePredictionEngine:",
    "docstring": ""
  },
  {
    "name": "RealTimePredictionEngine",
    "type": "class",
    "file": "backend/services/real_time_prediction_engine.py",
    "signature": "class RealTimePredictionEngine:",
    "docstring": ""
  },
  {
    "name": "TransactionService",
    "type": "class",
    "file": "backend/services/transaction_service.py",
    "signature": "class TransactionService:",
    "docstring": ""
  },
  {
    "name": "TransactionService",
    "type": "class",
    "file": "backend/services/transaction_service.py",
    "signature": "class TransactionService:",
    "docstring": ""
  },
  {
    "name": "EnhancedPrediction",
    "type": "class",
    "file": "backend/services/unified_prediction_service.py",
    "signature": "class EnhancedPrediction:",
    "docstring": ""
  },
  {
    "name": "EnhancedPrediction",
    "type": "class",
    "file": "backend/services/unified_prediction_service.py",
    "signature": "class EnhancedPrediction:",
    "docstring": ""
  },
  {
    "name": "PortfolioMetrics",
    "type": "class",
    "file": "backend/services/unified_prediction_service.py",
    "signature": "class PortfolioMetrics:",
    "docstring": ""
  },
  {
    "name": "PortfolioMetrics",
    "type": "class",
    "file": "backend/services/unified_prediction_service.py",
    "signature": "class PortfolioMetrics:",
    "docstring": ""
  },
  {
    "name": "AIInsights",
    "type": "class",
    "file": "backend/services/unified_prediction_service.py",
    "signature": "class AIInsights:",
    "docstring": ""
  },
  {
    "name": "AIInsights",
    "type": "class",
    "file": "backend/services/unified_prediction_service.py",
    "signature": "class AIInsights:",
    "docstring": ""
  },
  {
    "name": "UnifiedPredictionService",
    "type": "class",
    "file": "backend/services/unified_prediction_service.py",
    "signature": "class UnifiedPredictionService:",
    "docstring": ""
  },
  {
    "name": "UnifiedPredictionService",
    "type": "class",
    "file": "backend/services/unified_prediction_service.py",
    "signature": "class UnifiedPredictionService:",
    "docstring": ""
  },
  {
    "name": "User",
    "type": "class",
    "file": "backend/src/auth.py",
    "signature": "class User(BaseModel):",
    "docstring": ""
  },
  {
    "name": "User",
    "type": "class",
    "file": "backend/src/auth.py",
    "signature": "class User(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TokenResponse",
    "type": "class",
    "file": "backend/src/auth.py",
    "signature": "class TokenResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "TokenResponse",
    "type": "class",
    "file": "backend/src/auth.py",
    "signature": "class TokenResponse(BaseModel):",
    "docstring": ""
  },
  {
    "name": "verify_user",
    "type": "function",
    "file": "backend/src/auth.py",
    "signature": "def verify_user(username: str, password: str) -> Optional[Dict[str, Any]]:",
    "docstring": ""
  },
  {
    "name": "TestResult",
    "type": "class",
    "file": "backend/testing/comprehensive_test_framework.py",
    "signature": "class TestResult:",
    "docstring": ""
  },
  {
    "name": "TestResult",
    "type": "class",
    "file": "backend/testing/comprehensive_test_framework.py",
    "signature": "class TestResult:",
    "docstring": ""
  },
  {
    "name": "TestSuite",
    "type": "class",
    "file": "backend/testing/comprehensive_test_framework.py",
    "signature": "class TestSuite:",
    "docstring": ""
  },
  {
    "name": "TestSuite",
    "type": "class",
    "file": "backend/testing/comprehensive_test_framework.py",
    "signature": "class TestSuite:",
    "docstring": ""
  },
  {
    "name": "ComprehensiveTestFramework",
    "type": "class",
    "file": "backend/testing/comprehensive_test_framework.py",
    "signature": "class ComprehensiveTestFramework:",
    "docstring": ""
  },
  {
    "name": "ComprehensiveTestFramework",
    "type": "class",
    "file": "backend/testing/comprehensive_test_framework.py",
    "signature": "class ComprehensiveTestFramework:",
    "docstring": ""
  },
  {
    "name": "test_root",
    "type": "function",
    "file": "backend/tests/test_api_v1.py",
    "signature": "def test_root():",
    "docstring": ""
  },
  {
    "name": "test_health_check",
    "type": "function",
    "file": "backend/tests/test_api_v1.py",
    "signature": "def test_health_check():",
    "docstring": ""
  },
  {
    "name": "test_comprehensive_health_check",
    "type": "function",
    "file": "backend/tests/test_api_v1.py",
    "signature": "def test_comprehensive_health_check():",
    "docstring": ""
  },
  {
    "name": "test_get_betting_opportunities",
    "type": "function",
    "file": "backend/tests/test_api_v1.py",
    "signature": "def test_get_betting_opportunities(mock_get_games):",
    "docstring": ""
  },
  {
    "name": "test_get_arbitrage_opportunities",
    "type": "function",
    "file": "backend/tests/test_api_v1.py",
    "signature": "def test_get_arbitrage_opportunities():",
    "docstring": ""
  },
  {
    "name": "test_get_predictions_shim",
    "type": "function",
    "file": "backend/tests/test_api_v1.py",
    "signature": "def test_get_predictions_shim():",
    "docstring": ""
  },
  {
    "name": "test_get_prizepicks_props",
    "type": "function",
    "file": "backend/tests/test_api_v1.py",
    "signature": "def test_get_prizepicks_props():",
    "docstring": ""
  },
  {
    "name": "test_features_endpoint",
    "type": "function",
    "file": "backend/tests/test_endpoints.py",
    "signature": "def test_features_endpoint():",
    "docstring": ""
  },
  {
    "name": "test_predict_endpoint",
    "type": "function",
    "file": "backend/tests/test_endpoints.py",
    "signature": "def test_predict_endpoint():",
    "docstring": ""
  },
  {
    "name": "test_docs_endpoint",
    "type": "function",
    "file": "backend/tests/test_endpoints.py",
    "signature": "def test_docs_endpoint():",
    "docstring": ""
  },
  {
    "name": "test_invalid_input",
    "type": "function",
    "file": "backend/tests/test_endpoints.py",
    "signature": "def test_invalid_input():",
    "docstring": ""
  },
  {
    "name": "test_empty_stats",
    "type": "function",
    "file": "backend/tests/test_endpoints.py",
    "signature": "def test_empty_stats():",
    "docstring": ""
  },
  {
    "name": "DummyMetaLearningData",
    "type": "class",
    "file": "backend/tests/test_meta_learning.py",
    "signature": "class DummyMetaLearningData:",
    "docstring": ""
  },
  {
    "name": "DummyMetaLearningData",
    "type": "class",
    "file": "backend/tests/test_meta_learning.py",
    "signature": "class DummyMetaLearningData:",
    "docstring": ""
  },
  {
    "name": "test_maml_model_creation_returns_real_object",
    "type": "function",
    "file": "backend/tests/test_meta_learning.py",
    "signature": "def test_maml_model_creation_returns_real_object():",
    "docstring": ""
  },
  {
    "name": "test_prototypical_network_creation_returns_real_object",
    "type": "function",
    "file": "backend/tests/test_meta_learning.py",
    "signature": "def test_prototypical_network_creation_returns_real_object():",
    "docstring": ""
  },
  {
    "name": "test_relation_network_creation_returns_real_object",
    "type": "function",
    "file": "backend/tests/test_meta_learning.py",
    "signature": "def test_relation_network_creation_returns_real_object():",
    "docstring": ""
  },
  {
    "name": "test_learning_to_learn_model_creation",
    "type": "function",
    "file": "backend/tests/test_meta_learning.py",
    "signature": "def test_learning_to_learn_model_creation():",
    "docstring": ""
  },
  {
    "name": "test_maml_few_shot_learning_capability",
    "type": "function",
    "file": "backend/tests/test_meta_learning.py",
    "signature": "def test_maml_few_shot_learning_capability():",
    "docstring": ""
  },
  {
    "name": "test_prototypical_network_episodic_learning",
    "type": "function",
    "file": "backend/tests/test_meta_learning.py",
    "signature": "def test_prototypical_network_episodic_learning():",
    "docstring": ""
  },
  {
    "name": "test_relation_network_relation_learning",
    "type": "function",
    "file": "backend/tests/test_meta_learning.py",
    "signature": "def test_relation_network_relation_learning():",
    "docstring": ""
  },
  {
    "name": "test_meta_learning_integration_with_quantum_nas",
    "type": "function",
    "file": "backend/tests/test_meta_learning.py",
    "signature": "def test_meta_learning_integration_with_quantum_nas():",
    "docstring": ""
  },
  {
    "name": "test_meta_learning_performance_requirements",
    "type": "function",
    "file": "backend/tests/test_meta_learning.py",
    "signature": "def test_meta_learning_performance_requirements():",
    "docstring": ""
  },
  {
    "name": "test_meta_learning_error_handling",
    "type": "function",
    "file": "backend/tests/test_meta_learning.py",
    "signature": "def test_meta_learning_error_handling():",
    "docstring": ""
  },
  {
    "name": "test_meta_learning_framework_integration",
    "type": "function",
    "file": "backend/tests/test_meta_learning.py",
    "signature": "def test_meta_learning_framework_integration():",
    "docstring": ""
  },
  {
    "name": "test_meta_learning_continual_learning",
    "type": "function",
    "file": "backend/tests/test_meta_learning.py",
    "signature": "def test_meta_learning_continual_learning():",
    "docstring": ""
  },
  {
    "name": "test_meta_learning_model_diversity",
    "type": "function",
    "file": "backend/tests/test_meta_learning.py",
    "signature": "def test_meta_learning_model_diversity():",
    "docstring": ""
  },
  {
    "name": "DummyNASData",
    "type": "class",
    "file": "backend/tests/test_nas_implementation.py",
    "signature": "class DummyNASData:",
    "docstring": ""
  },
  {
    "name": "DummyNASData",
    "type": "class",
    "file": "backend/tests/test_nas_implementation.py",
    "signature": "class DummyNASData:",
    "docstring": ""
  },
  {
    "name": "test_nas_optimal_model_creation_returns_real_object",
    "type": "function",
    "file": "backend/tests/test_nas_implementation.py",
    "signature": "def test_nas_optimal_model_creation_returns_real_object():",
    "docstring": ""
  },
  {
    "name": "test_autokeras_integration_works",
    "type": "function",
    "file": "backend/tests/test_nas_implementation.py",
    "signature": "def test_autokeras_integration_works():",
    "docstring": ""
  },
  {
    "name": "test_architecture_search_functionality",
    "type": "function",
    "file": "backend/tests/test_nas_implementation.py",
    "signature": "def test_architecture_search_functionality():",
    "docstring": ""
  },
  {
    "name": "test_model_evaluation_and_selection",
    "type": "function",
    "file": "backend/tests/test_nas_implementation.py",
    "signature": "def test_model_evaluation_and_selection():",
    "docstring": ""
  },
  {
    "name": "test_integration_with_quantum_ensemble",
    "type": "function",
    "file": "backend/tests/test_nas_implementation.py",
    "signature": "def test_integration_with_quantum_ensemble():",
    "docstring": ""
  },
  {
    "name": "test_performance_requirements_architecture_search",
    "type": "function",
    "file": "backend/tests/test_nas_implementation.py",
    "signature": "def test_performance_requirements_architecture_search():",
    "docstring": ""
  },
  {
    "name": "test_error_handling_edge_cases",
    "type": "function",
    "file": "backend/tests/test_nas_implementation.py",
    "signature": "def test_error_handling_edge_cases():",
    "docstring": ""
  },
  {
    "name": "test_nas_model_architecture_diversity",
    "type": "function",
    "file": "backend/tests/test_nas_implementation.py",
    "signature": "def test_nas_model_architecture_diversity():",
    "docstring": ""
  },
  {
    "name": "test_nas_integration_with_existing_pipeline",
    "type": "function",
    "file": "backend/tests/test_nas_implementation.py",
    "signature": "def test_nas_integration_with_existing_pipeline():",
    "docstring": ""
  },
  {
    "name": "test_get_prizepicks_props",
    "type": "function",
    "file": "backend/tests/test_prizepicks_endpoints.py",
    "signature": "def test_get_prizepicks_props():",
    "docstring": ""
  },
  {
    "name": "test_get_prizepicks_recommendations",
    "type": "function",
    "file": "backend/tests/test_prizepicks_endpoints.py",
    "signature": "def test_get_prizepicks_recommendations():",
    "docstring": ""
  },
  {
    "name": "test_get_comprehensive_projections",
    "type": "function",
    "file": "backend/tests/test_prizepicks_endpoints.py",
    "signature": "def test_get_comprehensive_projections():",
    "docstring": ""
  },
  {
    "name": "test_optimize_lineup_error",
    "type": "function",
    "file": "backend/tests/test_prizepicks_endpoints.py",
    "signature": "def test_optimize_lineup_error():",
    "docstring": ""
  },
  {
    "name": "test_get_prizepicks_health",
    "type": "function",
    "file": "backend/tests/test_prizepicks_endpoints.py",
    "signature": "def test_get_prizepicks_health():",
    "docstring": ""
  },
  {
    "name": "DummyBettingData",
    "type": "class",
    "file": "backend/tests/test_quantum_ensemble.py",
    "signature": "class DummyBettingData:",
    "docstring": ""
  },
  {
    "name": "DummyBettingData",
    "type": "class",
    "file": "backend/tests/test_quantum_ensemble.py",
    "signature": "class DummyBettingData:",
    "docstring": ""
  },
  {
    "name": "test_ensemble_creation_returns_real_model",
    "type": "function",
    "file": "backend/tests/test_quantum_ensemble.py",
    "signature": "def test_ensemble_creation_returns_real_model():",
    "docstring": ""
  },
  {
    "name": "test_ensemble_has_required_methods",
    "type": "function",
    "file": "backend/tests/test_quantum_ensemble.py",
    "signature": "def test_ensemble_has_required_methods():",
    "docstring": ""
  },
  {
    "name": "test_quantum_feature_transformation",
    "type": "function",
    "file": "backend/tests/test_quantum_ensemble.py",
    "signature": "def test_quantum_feature_transformation():",
    "docstring": ""
  },
  {
    "name": "test_ensemble_weight_calculation",
    "type": "function",
    "file": "backend/tests/test_quantum_ensemble.py",
    "signature": "def test_ensemble_weight_calculation():",
    "docstring": ""
  },
  {
    "name": "test_error_handling_edge_cases",
    "type": "function",
    "file": "backend/tests/test_quantum_ensemble.py",
    "signature": "def test_error_handling_edge_cases():",
    "docstring": ""
  },
  {
    "name": "test_integration_with_betting_data",
    "type": "function",
    "file": "backend/tests/test_quantum_ensemble.py",
    "signature": "def test_integration_with_betting_data():",
    "docstring": ""
  },
  {
    "name": "TestRealMetricsSystem",
    "type": "class",
    "file": "backend/tests/test_real_metrics.py",
    "signature": "class TestRealMetricsSystem:",
    "docstring": ""
  },
  {
    "name": "TestRealMetricsSystem",
    "type": "class",
    "file": "backend/tests/test_real_metrics.py",
    "signature": "class TestRealMetricsSystem:",
    "docstring": ""
  },
  {
    "name": "TestRealPerformanceMetrics",
    "type": "class",
    "file": "backend/tests/test_real_metrics.py",
    "signature": "class TestRealPerformanceMetrics:",
    "docstring": ""
  },
  {
    "name": "TestRealPerformanceMetrics",
    "type": "class",
    "file": "backend/tests/test_real_metrics.py",
    "signature": "class TestRealPerformanceMetrics:",
    "docstring": ""
  },
  {
    "name": "TestDynamicMetricsAPI",
    "type": "class",
    "file": "backend/tests/test_real_metrics.py",
    "signature": "class TestDynamicMetricsAPI:",
    "docstring": ""
  },
  {
    "name": "TestDynamicMetricsAPI",
    "type": "class",
    "file": "backend/tests/test_real_metrics.py",
    "signature": "class TestDynamicMetricsAPI:",
    "docstring": ""
  },
  {
    "name": "CircuitBreaker",
    "type": "class",
    "file": "backend/utils/circuit_breaker.py",
    "signature": "class CircuitBreaker:",
    "docstring": ""
  },
  {
    "name": "CircuitBreaker",
    "type": "class",
    "file": "backend/utils/circuit_breaker.py",
    "signature": "class CircuitBreaker:",
    "docstring": ""
  },
  {
    "name": "ErrorHandler",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class ErrorHandler:",
    "docstring": ""
  },
  {
    "name": "ErrorHandler",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class ErrorHandler:",
    "docstring": ""
  },
  {
    "name": "A1BettingError",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class A1BettingError(Exception):",
    "docstring": ""
  },
  {
    "name": "A1BettingError",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class A1BettingError(Exception):",
    "docstring": ""
  },
  {
    "name": "DataFetchError",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class DataFetchError(A1BettingError):",
    "docstring": ""
  },
  {
    "name": "DataFetchError",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class DataFetchError(A1BettingError):",
    "docstring": ""
  },
  {
    "name": "ModelError",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class ModelError(A1BettingError):",
    "docstring": ""
  },
  {
    "name": "ModelError",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class ModelError(A1BettingError):",
    "docstring": ""
  },
  {
    "name": "ValidationError",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class ValidationError(A1BettingError):",
    "docstring": ""
  },
  {
    "name": "ValidationError",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class ValidationError(A1BettingError):",
    "docstring": ""
  },
  {
    "name": "ConfigurationError",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class ConfigurationError(A1BettingError):",
    "docstring": ""
  },
  {
    "name": "ConfigurationError",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class ConfigurationError(A1BettingError):",
    "docstring": ""
  },
  {
    "name": "AuthenticationError",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class AuthenticationError(A1BettingError):",
    "docstring": ""
  },
  {
    "name": "AuthenticationError",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class AuthenticationError(A1BettingError):",
    "docstring": ""
  },
  {
    "name": "RateLimitError",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class RateLimitError(A1BettingError):",
    "docstring": ""
  },
  {
    "name": "RateLimitError",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class RateLimitError(A1BettingError):",
    "docstring": ""
  },
  {
    "name": "CacheError",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class CacheError(A1BettingError):",
    "docstring": ""
  },
  {
    "name": "CacheError",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class CacheError(A1BettingError):",
    "docstring": ""
  },
  {
    "name": "DatabaseError",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class DatabaseError(A1BettingError):",
    "docstring": ""
  },
  {
    "name": "DatabaseError",
    "type": "class",
    "file": "backend/utils/error_handler.py",
    "signature": "class DatabaseError(A1BettingError):",
    "docstring": ""
  },
  {
    "name": "ModelHealth",
    "type": "class",
    "file": "backend/utils/llm_engine.py",
    "signature": "class ModelHealth:",
    "docstring": ""
  },
  {
    "name": "ModelHealth",
    "type": "class",
    "file": "backend/utils/llm_engine.py",
    "signature": "class ModelHealth:",
    "docstring": ""
  },
  {
    "name": "QueuedRequest",
    "type": "class",
    "file": "backend/utils/llm_engine.py",
    "signature": "class QueuedRequest:",
    "docstring": ""
  },
  {
    "name": "QueuedRequest",
    "type": "class",
    "file": "backend/utils/llm_engine.py",
    "signature": "class QueuedRequest:",
    "docstring": ""
  },
  {
    "name": "ModelStateType",
    "type": "class",
    "file": "backend/utils/llm_engine.py",
    "signature": "class ModelStateType(TypedDict):",
    "docstring": ""
  },
  {
    "name": "ModelStateType",
    "type": "class",
    "file": "backend/utils/llm_engine.py",
    "signature": "class ModelStateType(TypedDict):",
    "docstring": ""
  },
  {
    "name": "log_model_state",
    "type": "function",
    "file": "backend/utils/llm_engine.py",
    "signature": "def log_model_state(state_update: Dict[str, Any]) -> None:",
    "docstring": ""
  },
  {
    "name": "EnhancedConfig",
    "type": "class",
    "file": "backend/utils/llm_engine.py",
    "signature": "class EnhancedConfig(BaseSettings):",
    "docstring": ""
  },
  {
    "name": "EnhancedConfig",
    "type": "class",
    "file": "backend/utils/llm_engine.py",
    "signature": "class EnhancedConfig(BaseSettings):",
    "docstring": ""
  },
  {
    "name": "EnhancedConfigManager",
    "type": "class",
    "file": "backend/utils/llm_engine.py",
    "signature": "class EnhancedConfigManager:",
    "docstring": ""
  },
  {
    "name": "EnhancedConfigManager",
    "type": "class",
    "file": "backend/utils/llm_engine.py",
    "signature": "class EnhancedConfigManager:",
    "docstring": ""
  },
  {
    "name": "BaseLLMClient",
    "type": "class",
    "file": "backend/utils/llm_engine.py",
    "signature": "class BaseLLMClient:",
    "docstring": ""
  },
  {
    "name": "BaseLLMClient",
    "type": "class",
    "file": "backend/utils/llm_engine.py",
    "signature": "class BaseLLMClient:",
    "docstring": ""
  },
  {
    "name": "OllamaClient",
    "type": "class",
    "file": "backend/utils/llm_engine.py",
    "signature": "class OllamaClient(BaseLLMClient):",
    "docstring": ""
  },
  {
    "name": "OllamaClient",
    "type": "class",
    "file": "backend/utils/llm_engine.py",
    "signature": "class OllamaClient(BaseLLMClient):",
    "docstring": ""
  },
  {
    "name": "LMStudioClient",
    "type": "class",
    "file": "backend/utils/llm_engine.py",
    "signature": "class LMStudioClient(BaseLLMClient):",
    "docstring": ""
  },
  {
    "name": "LMStudioClient",
    "type": "class",
    "file": "backend/utils/llm_engine.py",
    "signature": "class LMStudioClient(BaseLLMClient):",
    "docstring": ""
  },
  {
    "name": "LLMEngine",
    "type": "class",
    "file": "backend/utils/llm_engine.py",
    "signature": "class LLMEngine:",
    "docstring": ""
  },
  {
    "name": "LLMEngine",
    "type": "class",
    "file": "backend/utils/llm_engine.py",
    "signature": "class LLMEngine:",
    "docstring": ""
  },
  {
    "name": "RequestMetrics",
    "type": "class",
    "file": "backend/utils/metrics_collector.py",
    "signature": "class RequestMetrics:",
    "docstring": ""
  },
  {
    "name": "RequestMetrics",
    "type": "class",
    "file": "backend/utils/metrics_collector.py",
    "signature": "class RequestMetrics:",
    "docstring": ""
  },
  {
    "name": "MetricsCollector",
    "type": "class",
    "file": "backend/utils/metrics_collector.py",
    "signature": "class MetricsCollector:",
    "docstring": ""
  },
  {
    "name": "MetricsCollector",
    "type": "class",
    "file": "backend/utils/metrics_collector.py",
    "signature": "class MetricsCollector:",
    "docstring": ""
  },
  {
    "name": "calculate_confidence",
    "type": "function",
    "file": "backend/utils/prediction_utils.py",
    "signature": "def calculate_confidence(model, X: np.ndarray, model_type: str) -> float:",
    "docstring": ""
  },
  {
    "name": "feature_compatibility",
    "type": "function",
    "file": "backend/utils/prediction_utils.py",
    "signature": "def feature_compatibility(expected: List[str], provided: List[str]) -> float:",
    "docstring": ""
  },
  {
    "name": "model_correlation",
    "type": "function",
    "file": "backend/utils/prediction_utils.py",
    "signature": "def model_correlation(cv1: List[float], cv2: List[float]) -> float:",
    "docstring": ""
  },
  {
    "name": "RateLimiter",
    "type": "class",
    "file": "backend/utils/rate_limiter.py",
    "signature": "class RateLimiter:",
    "docstring": ""
  },
  {
    "name": "RateLimiter",
    "type": "class",
    "file": "backend/utils/rate_limiter.py",
    "signature": "class RateLimiter:",
    "docstring": ""
  },
  {
    "name": "get_in_season_sports",
    "type": "function",
    "file": "backend/utils/seasonal_utils.py",
    "signature": "def get_in_season_sports(month: int) -> list[str]:",
    "docstring": ""
  },
  {
    "name": "filter_props_by_season",
    "type": "function",
    "file": "backend/utils/seasonal_utils.py",
    "signature": "def filter_props_by_season(props: list, month: int) -> list:",
    "docstring": ""
  },
  {
    "name": "is_sport_in_season",
    "type": "function",
    "file": "backend/utils/seasonal_utils.py",
    "signature": "def is_sport_in_season(sport: str, month: int) -> bool:",
    "docstring": ""
  },
  {
    "name": "get_seasonal_summary",
    "type": "function",
    "file": "backend/utils/seasonal_utils.py",
    "signature": "def get_seasonal_summary(month: int) -> dict:",
    "docstring": ""
  },
  {
    "name": "register_serializable",
    "type": "function",
    "file": "backend/utils/serialization_utils.py",
    "signature": "def register_serializable(cls):",
    "docstring": ""
  },
  {
    "name": "EnhancedJSONEncoder",
    "type": "class",
    "file": "backend/utils/serialization_utils.py",
    "signature": "class EnhancedJSONEncoder(json.JSONEncoder):",
    "docstring": ""
  },
  {
    "name": "EnhancedJSONEncoder",
    "type": "class",
    "file": "backend/utils/serialization_utils.py",
    "signature": "class EnhancedJSONEncoder(json.JSONEncoder):",
    "docstring": ""
  },
  {
    "name": "object_hook",
    "type": "function",
    "file": "backend/utils/serialization_utils.py",
    "signature": "def object_hook(d: Dict[str, Any]) -> Any:",
    "docstring": ""
  },
  {
    "name": "safe_dumps",
    "type": "function",
    "file": "backend/utils/serialization_utils.py",
    "signature": "def safe_dumps(data: Any) -> str:",
    "docstring": ""
  },
  {
    "name": "safe_loads",
    "type": "function",
    "file": "backend/utils/serialization_utils.py",
    "signature": "def safe_loads(s: str) -> Any:",
    "docstring": ""
  },
  {
    "name": "parse_args",
    "type": "function",
    "file": "frontend/src/main.py",
    "signature": "def parse_args():",
    "docstring": ""
  },
  {
    "name": "main",
    "type": "function",
    "file": "frontend/src/main.py",
    "signature": "def main():",
    "docstring": ""
  },
  {
    "name": "DailyFantasyAdapter",
    "type": "class",
    "file": "frontend/src/adapters/DailyFantasyAdapter.ts",
    "signature": "export class DailyFantasyAdapter implements DataSource<DailyFantasyData> {",
    "docstring": ""
  },
  {
    "name": "ESPNAdapter",
    "type": "class",
    "file": "frontend/src/adapters/ESPNAdapter.ts",
    "signature": "export class ESPNAdapter {",
    "docstring": ""
  },
  {
    "name": "PoeToApiAdapter",
    "type": "class",
    "file": "frontend/src/adapters/poeToApiAdapter.ts",
    "signature": "export class PoeToApiAdapter {",
    "docstring": ""
  },
  {
    "name": "PrizePicksAdapter",
    "type": "class",
    "file": "frontend/src/adapters/prizepicks.ts",
    "signature": "export class PrizePicksAdapter {",
    "docstring": ""
  },
  {
    "name": "PrizePicksAdapter",
    "type": "class",
    "file": "frontend/src/adapters/PrizePicksAdapter.ts",
    "signature": "export class PrizePicksAdapter {",
    "docstring": ""
  },
  {
    "name": "TheOddsAdapter",
    "type": "class",
    "file": "frontend/src/adapters/TheOddsAdapter.ts",
    "signature": "export class TheOddsAdapter implements DataSource<TheOddsData> {",
    "docstring": ""
  },
  {
    "name": "PoeToApiAdapter",
    "type": "class",
    "file": "frontend/src/adapters/poe/PoeToApiAdapter.ts",
    "signature": "export class PoeToApiAdapter {",
    "docstring": ""
  },
  {
    "name": "PerformanceAnalyzer",
    "type": "class",
    "file": "frontend/src/analysis/performance.py",
    "signature": "class PerformanceAnalyzer:",
    "docstring": ""
  },
  {
    "name": "PerformanceAnalyzer",
    "type": "class",
    "file": "frontend/src/analysis/performance.py",
    "signature": "class PerformanceAnalyzer:",
    "docstring": ""
  },
  {
    "name": "ResourceAnalyzer",
    "type": "class",
    "file": "frontend/src/analysis/resources.py",
    "signature": "class ResourceAnalyzer:",
    "docstring": ""
  },
  {
    "name": "ResourceAnalyzer",
    "type": "class",
    "file": "frontend/src/analysis/resources.py",
    "signature": "class ResourceAnalyzer:",
    "docstring": ""
  },
  {
    "name": "SecurityAnalyzer",
    "type": "class",
    "file": "frontend/src/analysis/security.py",
    "signature": "class SecurityAnalyzer:",
    "docstring": ""
  },
  {
    "name": "SecurityAnalyzer",
    "type": "class",
    "file": "frontend/src/analysis/security.py",
    "signature": "class SecurityAnalyzer:",
    "docstring": ""
  },
  {
    "name": "FeatureEngineeringService",
    "type": "class",
    "file": "frontend/src/analytics/FeatureEngineeringService.ts",
    "signature": "export class FeatureEngineeringService {",
    "docstring": ""
  },
  {
    "name": "FeatureSelector",
    "type": "class",
    "file": "frontend/src/analytics/FeatureSelector.ts",
    "signature": "export class FeatureSelector {",
    "docstring": ""
  },
  {
    "name": "ProjectionAnalyzer",
    "type": "class",
    "file": "frontend/src/analyzers/ProjectionAnalyzer.ts",
    "signature": "export class ProjectionAnalyzer implements Analyzer<DailyFantasyData, ProjectionAnalysis[]> {",
    "docstring": ""
  },
  {
    "name": "SentimentEnhancedAnalyzer",
    "type": "class",
    "file": "frontend/src/analyzers/SentimentEnhancedAnalyzer.ts",
    "signature": "export class SentimentEnhancedAnalyzer implements Analyzer<AnalysisInput, EnhancedAnalysis[]> {",
    "docstring": ""
  },
  {
    "name": "PrizePicksAPI",
    "type": "class",
    "file": "frontend/src/api/PrizePicksAPI.ts",
    "signature": "export class PrizePicksAPI {",
    "docstring": ""
  },
  {
    "name": "processFantasyData",
    "type": "function",
    "file": "frontend/src/api/dailyfantasy/index.ts",
    "signature": "function processFantasyData(data: any, _site: 'draftkings' | 'fanduel') {",
    "docstring": ""
  },
  {
    "name": "SystemError",
    "type": "class",
    "file": "frontend/src/core/errors.ts",
    "signature": "export class SystemError extends Error {",
    "docstring": ""
  },
  {
    "name": "EventBus",
    "type": "class",
    "file": "frontend/src/core/EventBus.ts",
    "signature": "export class EventBus {",
    "docstring": ""
  },
  {
    "name": "SimpleEventEmitter",
    "type": "class",
    "file": "frontend/src/core/UnifiedConfig.ts",
    "signature": "class SimpleEventEmitter {",
    "docstring": ""
  },
  {
    "name": "UnifiedConfig",
    "type": "class",
    "file": "frontend/src/core/UnifiedConfig.ts",
    "signature": "export class UnifiedConfig {",
    "docstring": ""
  },
  {
    "name": "getInitializedUnifiedConfig",
    "type": "function",
    "file": "frontend/src/core/UnifiedConfig.ts",
    "signature": "export function getInitializedUnifiedConfig(): UnifiedConfig {",
    "docstring": ""
  },
  {
    "name": "UnifiedConfigManager",
    "type": "class",
    "file": "frontend/src/core/UnifiedConfigManager.ts",
    "signature": "export class UnifiedConfigManager implements UnifiedConfigManagerType {",
    "docstring": ""
  },
  {
    "name": "UnifiedMonitor",
    "type": "class",
    "file": "frontend/src/core/UnifiedMonitor.ts",
    "signature": "export class UnifiedMonitor {",
    "docstring": ""
  },
  {
    "name": "UnifiedStateManager",
    "type": "class",
    "file": "frontend/src/core/UnifiedState.ts",
    "signature": "export class UnifiedStateManager {",
    "docstring": ""
  },
  {
    "name": "getRecommendation",
    "type": "function",
    "file": "frontend/src/hooks/usePredictionCacheManager.ts",
    "signature": "function getRecommendation(projection: PrizePicksProjection): string {",
    "docstring": ""
  },
  {
    "name": "usePrizePicksProps",
    "type": "function",
    "file": "frontend/src/hooks/usePrizePicksProps.ts",
    "signature": "export function usePrizePicksProps(): UsePrizePicksPropsResult {",
    "docstring": ""
  },
  {
    "name": "useSportradarGames",
    "type": "function",
    "file": "frontend/src/hooks/useSpecialistData.ts",
    "signature": "export function useSportradarGames(sport: string, date?: string) {",
    "docstring": ""
  },
  {
    "name": "useEventOdds",
    "type": "function",
    "file": "frontend/src/hooks/useSpecialistData.ts",
    "signature": "export function useEventOdds(eventId: string, market?: string) {",
    "docstring": ""
  },
  {
    "name": "useStrategyEngineData",
    "type": "function",
    "file": "frontend/src/hooks/useStrategyEngineData.ts",
    "signature": "export function useStrategyEngineData() {",
    "docstring": ""
  },
  {
    "name": "cn",
    "type": "function",
    "file": "frontend/src/lib/utils.ts",
    "signature": "export function cn(...inputs: ClassValue[]) {",
    "docstring": ""
  },
  {
    "name": "MetricsCollector",
    "type": "class",
    "file": "frontend/src/monitoring/metrics_collector.py",
    "signature": "class MetricsCollector:",
    "docstring": ""
  },
  {
    "name": "MetricsCollector",
    "type": "class",
    "file": "frontend/src/monitoring/metrics_collector.py",
    "signature": "class MetricsCollector:",
    "docstring": ""
  },
  {
    "name": "ReportGenerator",
    "type": "class",
    "file": "frontend/src/reporting/report_generator.py",
    "signature": "class ReportGenerator:",
    "docstring": ""
  },
  {
    "name": "ReportGenerator",
    "type": "class",
    "file": "frontend/src/reporting/report_generator.py",
    "signature": "class ReportGenerator:",
    "docstring": ""
  },
  {
    "name": "AccessRequestService",
    "type": "class",
    "file": "frontend/src/services/AccessRequestService.ts",
    "signature": "class AccessRequestService {",
    "docstring": ""
  },
  {
    "name": "APIConfigurationService",
    "type": "class",
    "file": "frontend/src/services/APIConfigurationService.ts",
    "signature": "class APIConfigurationService {",
    "docstring": ""
  },
  {
    "name": "AuthService",
    "type": "class",
    "file": "frontend/src/services/authService.ts",
    "signature": "class AuthService {",
    "docstring": ""
  },
  {
    "name": "BackendDiscoveryService",
    "type": "class",
    "file": "frontend/src/services/backendDiscovery.ts",
    "signature": "class BackendDiscoveryService {",
    "docstring": ""
  },
  {
    "name": "EmailNotificationService",
    "type": "class",
    "file": "frontend/src/services/EmailNotificationService.ts",
    "signature": "class EmailNotificationService {",
    "docstring": ""
  },
  {
    "name": "EnhancedDataSourcesService",
    "type": "class",
    "file": "frontend/src/services/EnhancedDataSourcesService.ts",
    "signature": "export class EnhancedDataSourcesService {",
    "docstring": ""
  },
  {
    "name": "InjuryService",
    "type": "class",
    "file": "frontend/src/services/injuryService.ts",
    "signature": "class InjuryService {",
    "docstring": ""
  },
  {
    "name": "LineupService",
    "type": "class",
    "file": "frontend/src/services/lineupService.ts",
    "signature": "class LineupService {",
    "docstring": ""
  },
  {
    "name": "LiveAPIIntegrationService",
    "type": "class",
    "file": "frontend/src/services/LiveAPIIntegrationService.ts",
    "signature": "class LiveAPIIntegrationService {",
    "docstring": ""
  },
  {
    "name": "MasterServiceRegistry",
    "type": "class",
    "file": "frontend/src/services/MasterServiceRegistry.ts",
    "signature": "class MasterServiceRegistry {",
    "docstring": ""
  },
  {
    "name": "PermissionService",
    "type": "class",
    "file": "frontend/src/services/PermissionService.ts",
    "signature": "class PermissionService {",
    "docstring": ""
  },
  {
    "name": "PredictionCacheService",
    "type": "class",
    "file": "frontend/src/services/predictionCache.ts",
    "signature": "class PredictionCacheService {",
    "docstring": ""
  },
  {
    "name": "PrizePicksService",
    "type": "class",
    "file": "frontend/src/services/prizePicks.ts",
    "signature": "class PrizePicksService {",
    "docstring": ""
  },
  {
    "name": "PropOllamaService",
    "type": "class",
    "file": "frontend/src/services/propOllamaService.ts",
    "signature": "class PropOllamaService {",
    "docstring": ""
  },
  {
    "name": "RealTimeAnalysisService",
    "type": "class",
    "file": "frontend/src/services/realTimeAnalysisService.ts",
    "signature": "class RealTimeAnalysisService {",
    "docstring": ""
  },
  {
    "name": "RealTimePredictionService",
    "type": "class",
    "file": "frontend/src/services/realTimePredictionService.ts",
    "signature": "class RealTimePredictionService {",
    "docstring": ""
  },
  {
    "name": "UnifiedApiService",
    "type": "class",
    "file": "frontend/src/services/unifiedApiService.ts",
    "signature": "class UnifiedApiService {",
    "docstring": ""
  },
  {
    "name": "UserInvitationService",
    "type": "class",
    "file": "frontend/src/services/UserInvitationService.ts",
    "signature": "class UserInvitationService {",
    "docstring": ""
  },
  {
    "name": "WeatherService",
    "type": "class",
    "file": "frontend/src/services/weatherModern.ts",
    "signature": "export class WeatherService {",
    "docstring": ""
  },
  {
    "name": "ModelPerformanceTracker",
    "type": "class",
    "file": "frontend/src/services/analytics/ModelPerformanceTracker.ts",
    "signature": "export class ModelPerformanceTracker {",
    "docstring": ""
  },
  {
    "name": "PatternRecognitionService",
    "type": "class",
    "file": "frontend/src/services/analytics/PatternRecognitionService.ts",
    "signature": "export class PatternRecognitionService {",
    "docstring": ""
  },
  {
    "name": "RiskAssessmentService",
    "type": "class",
    "file": "frontend/src/services/analytics/RiskAssessmentService.ts",
    "signature": "export class RiskAssessmentService {",
    "docstring": ""
  },
  {
    "name": "ShapExplainerService",
    "type": "class",
    "file": "frontend/src/services/analytics/ShapExplainerService.ts",
    "signature": "export class ShapExplainerService {",
    "docstring": ""
  },
  {
    "name": "ApiService",
    "type": "class",
    "file": "frontend/src/services/api/ApiService.ts",
    "signature": "export class ApiService {",
    "docstring": ""
  },
  {
    "name": "ApiClient",
    "type": "class",
    "file": "frontend/src/services/api/client.ts",
    "signature": "class ApiClient {",
    "docstring": ""
  },
  {
    "name": "EnhancedApiService",
    "type": "class",
    "file": "frontend/src/services/api/EnhancedApiService.ts",
    "signature": "class EnhancedApiService {",
    "docstring": ""
  },
  {
    "name": "ProductionApiService",
    "type": "class",
    "file": "frontend/src/services/api/ProductionApiService.ts",
    "signature": "export class ProductionApiService {",
    "docstring": ""
  },
  {
    "name": "BettingService",
    "type": "class",
    "file": "frontend/src/services/betting/BettingService.ts",
    "signature": "class BettingService {",
    "docstring": ""
  },
  {
    "name": "ServiceManager",
    "type": "class",
    "file": "frontend/src/services/core/ServiceManager.ts",
    "signature": "class ServiceManager {",
    "docstring": ""
  },
  {
    "name": "UnifiedSettingsService",
    "type": "class",
    "file": "frontend/src/services/core/UnifiedSettingsService.ts",
    "signature": "export class UnifiedSettingsService {",
    "docstring": ""
  },
  {
    "name": "MLService",
    "type": "class",
    "file": "frontend/src/services/ml/MLService.ts",
    "signature": "class MLService {",
    "docstring": ""
  },
  {
    "name": "PredictionService",
    "type": "class",
    "file": "frontend/src/services/ml/prediction.ts",
    "signature": "export class PredictionService {",
    "docstring": ""
  },
  {
    "name": "ParticleSwarm",
    "type": "class",
    "file": "frontend/src/services/ml/optimization/ParticleSwarm.ts",
    "signature": "export class ParticleSwarm extends OptimizationStrategy {",
    "docstring": ""
  },
  {
    "name": "SimulatedAnnealing",
    "type": "class",
    "file": "frontend/src/services/ml/optimization/SimulatedAnnealing.ts",
    "signature": "export class SimulatedAnnealing extends OptimizationStrategy {",
    "docstring": ""
  },
  {
    "name": "ModelService",
    "type": "class",
    "file": "frontend/src/services/ml/service/ModelService.ts",
    "signature": "export class ModelService {",
    "docstring": ""
  },
  {
    "name": "ApiService",
    "type": "class",
    "file": "frontend/src/services/unified/ApiService.ts",
    "signature": "class ApiService {",
    "docstring": ""
  },
  {
    "name": "EventEmitter",
    "type": "class",
    "file": "frontend/src/services/unified/BaseService.ts",
    "signature": "class EventEmitter {",
    "docstring": ""
  },
  {
    "name": "CacheService",
    "type": "class",
    "file": "frontend/src/services/unified/CacheService.ts",
    "signature": "export class CacheService {",
    "docstring": ""
  },
  {
    "name": "EnhancedBackendApiService",
    "type": "class",
    "file": "frontend/src/services/unified/EnhancedBackendApiService.ts",
    "signature": "class EnhancedBackendApiService {",
    "docstring": ""
  },
  {
    "name": "ExternalApiService",
    "type": "class",
    "file": "frontend/src/services/unified/ExternalApiService.ts",
    "signature": "export class ExternalApiService extends EventEmitter {",
    "docstring": ""
  },
  {
    "name": "PerformanceTrackingService",
    "type": "class",
    "file": "frontend/src/services/unified/PerformanceTrackingService.ts",
    "signature": "export class PerformanceTrackingService extends EventEmitter {",
    "docstring": ""
  },
  {
    "name": "PrizePicksApiService",
    "type": "class",
    "file": "frontend/src/services/unified/PrizePicksApiService.ts",
    "signature": "export class PrizePicksApiService extends BaseApiService {",
    "docstring": ""
  },
  {
    "name": "SecurityService",
    "type": "class",
    "file": "frontend/src/services/unified/SecurityService.ts",
    "signature": "export class SecurityService {",
    "docstring": ""
  },
  {
    "name": "UnifiedAnalyticsService",
    "type": "class",
    "file": "frontend/src/services/unified/UnifiedAnalyticsService.ts",
    "signature": "export class UnifiedAnalyticsService extends BaseService {",
    "docstring": ""
  },
  {
    "name": "UnifiedBackupService",
    "type": "class",
    "file": "frontend/src/services/unified/UnifiedBackupService.ts",
    "signature": "export class UnifiedBackupService {",
    "docstring": ""
  },
  {
    "name": "UnifiedBettingAnalyticsStub",
    "type": "class",
    "file": "frontend/src/services/unified/UnifiedBettingAnalyticsStub.ts",
    "signature": "export class UnifiedBettingAnalyticsStub {",
    "docstring": ""
  },
  {
    "name": "UnifiedBettingCore",
    "type": "class",
    "file": "frontend/src/services/unified/UnifiedBettingCore.ts",
    "signature": "export class UnifiedBettingCore extends EventEmitter {",
    "docstring": ""
  },
  {
    "name": "UnifiedBettingService",
    "type": "class",
    "file": "frontend/src/services/unified/UnifiedBettingService.ts",
    "signature": "export class UnifiedBettingService extends BaseService {",
    "docstring": ""
  },
  {
    "name": "UnifiedCache",
    "type": "class",
    "file": "frontend/src/services/unified/UnifiedCache.ts",
    "signature": "export class UnifiedCache {",
    "docstring": ""
  },
  {
    "name": "UnifiedConfig",
    "type": "class",
    "file": "frontend/src/services/unified/UnifiedConfig.ts",
    "signature": "export class UnifiedConfig {",
    "docstring": ""
  },
  {
    "name": "UnifiedDataService",
    "type": "class",
    "file": "frontend/src/services/unified/UnifiedDataService.ts",
    "signature": "export class UnifiedDataService extends BaseService {",
    "docstring": ""
  },
  {
    "name": "UnifiedEnhancedPredictionService",
    "type": "class",
    "file": "frontend/src/services/unified/UnifiedEnhancedPredictionService.ts",
    "signature": "class UnifiedEnhancedPredictionService {",
    "docstring": ""
  },
  {
    "name": "UnifiedErrorService",
    "type": "class",
    "file": "frontend/src/services/unified/UnifiedErrorService.ts",
    "signature": "export class UnifiedErrorService extends BaseService {",
    "docstring": ""
  },
  {
    "name": "UnifiedLogger",
    "type": "class",
    "file": "frontend/src/services/unified/UnifiedLogger.ts",
    "signature": "export class UnifiedLogger {",
    "docstring": ""
  },
  {
    "name": "UnifiedNotificationService",
    "type": "class",
    "file": "frontend/src/services/unified/UnifiedNotificationService.ts",
    "signature": "export class UnifiedNotificationService extends BaseService {",
    "docstring": ""
  },
  {
    "name": "UnifiedPredictionService",
    "type": "class",
    "file": "frontend/src/services/unified/UnifiedPredictionService.ts",
    "signature": "export class UnifiedPredictionService extends BaseService {",
    "docstring": ""
  },
  {
    "name": "UnifiedRecoveryService",
    "type": "class",
    "file": "frontend/src/services/unified/UnifiedRecoveryService.ts",
    "signature": "export class UnifiedRecoveryService {",
    "docstring": ""
  },
  {
    "name": "UnifiedStateService",
    "type": "class",
    "file": "frontend/src/services/unified/UnifiedStateService.ts",
    "signature": "export class UnifiedStateService extends BaseService {",
    "docstring": ""
  },
  {
    "name": "UnifiedWebSocketService",
    "type": "class",
    "file": "frontend/src/services/unified/UnifiedWebSocketService.ts",
    "signature": "export class UnifiedWebSocketService extends BaseService {",
    "docstring": ""
  },
  {
    "name": "isPrizePicksProjection",
    "type": "function",
    "file": "frontend/src/types/prizePicksUnified.ts",
    "signature": "export function isPrizePicksProjection(obj: any): obj is PrizePicksProjection {",
    "docstring": ""
  },
  {
    "name": "isLegacyPlayerProp",
    "type": "function",
    "file": "frontend/src/types/prizePicksUnified.ts",
    "signature": "export function isLegacyPlayerProp(obj: any): obj is PlayerProp {",
    "docstring": ""
  },
  {
    "name": "transformToProjection",
    "type": "function",
    "file": "frontend/src/types/prizePicksUnified.ts",
    "signature": "export function transformToProjection(prop: PlayerProp | PrizePicksProps): PrizePicksProjection {",
    "docstring": ""
  },
  {
    "name": "transformToPlayerProp",
    "type": "function",
    "file": "frontend/src/types/prizePicksUnified.ts",
    "signature": "export function transformToPlayerProp(projection: PrizePicksProjection): PlayerProp {",
    "docstring": ""
  },
  {
    "name": "ErrorHandler",
    "type": "class",
    "file": "frontend/src/unified/ErrorHandler.ts",
    "signature": "export class ErrorHandler {",
    "docstring": ""
  },
  {
    "name": "PerformanceMonitor",
    "type": "class",
    "file": "frontend/src/unified/PerformanceMonitor.ts",
    "signature": "export class PerformanceMonitor {",
    "docstring": ""
  },
  {
    "name": "AdvancedAnalysisEngine",
    "type": "class",
    "file": "frontend/src/utils/AdvancedAnalysisEngine.ts",
    "signature": "export class AdvancedAnalysisEngine {",
    "docstring": ""
  },
  {
    "name": "AnalysisRegistry",
    "type": "class",
    "file": "frontend/src/utils/AnalysisFramework.ts",
    "signature": "export class AnalysisRegistry {",
    "docstring": ""
  },
  {
    "name": "APITestSuite",
    "type": "class",
    "file": "frontend/src/utils/APITestSuite.ts",
    "signature": "export class APITestSuite {",
    "docstring": ""
  },
  {
    "name": "isTeamDiversified",
    "type": "function",
    "file": "frontend/src/utils/businessRules.ts",
    "signature": "export function isTeamDiversified(props: PlayerProp[], maxPerTeam = 2): boolean {",
    "docstring": ""
  },
  {
    "name": "getMultiplier",
    "type": "function",
    "file": "frontend/src/utils/businessRules.ts",
    "signature": "export function getMultiplier(type: 'goblin' | 'normal' | 'demon'): number {",
    "docstring": ""
  },
  {
    "name": "validateEntry",
    "type": "function",
    "file": "frontend/src/utils/businessRules.ts",
    "signature": "export function validateEntry(entry: Entry): string[] {",
    "docstring": ""
  },
  {
    "name": "classNames",
    "type": "function",
    "file": "frontend/src/utils/classNames.ts",
    "signature": "export function classNames(...classes: (string | undefined | null | false)[]): string {",
    "docstring": ""
  },
  {
    "name": "cn",
    "type": "function",
    "file": "frontend/src/utils/classNames.ts",
    "signature": "export function cn(...inputs: (string | undefined | null | false)[]): string {",
    "docstring": ""
  },
  {
    "name": "Config",
    "type": "class",
    "file": "frontend/src/utils/config.py",
    "signature": "class Config(BaseSettings):",
    "docstring": ""
  },
  {
    "name": "Config",
    "type": "class",
    "file": "frontend/src/utils/config.py",
    "signature": "class Config(BaseSettings):",
    "docstring": ""
  },
  {
    "name": "DataCache",
    "type": "class",
    "file": "frontend/src/utils/DataPipeline.ts",
    "signature": "export class DataCache<T> {",
    "docstring": ""
  },
  {
    "name": "StreamingDataPipeline",
    "type": "class",
    "file": "frontend/src/utils/DataPipeline.ts",
    "signature": "export class StreamingDataPipeline<T, U> {",
    "docstring": ""
  },
  {
    "name": "encryptData",
    "type": "function",
    "file": "frontend/src/utils/encryption.ts",
    "signature": "export function encryptData(data: string): string {",
    "docstring": ""
  },
  {
    "name": "decryptData",
    "type": "function",
    "file": "frontend/src/utils/encryption.ts",
    "signature": "export function decryptData(encryptedData: string): string {",
    "docstring": ""
  },
  {
    "name": "ESPNAdapter",
    "type": "class",
    "file": "frontend/src/utils/ESPNAdapter.ts",
    "signature": "export class ESPNAdapter implements DataSource<ESPNData> {",
    "docstring": ""
  },
  {
    "name": "ComposableFeature",
    "type": "class",
    "file": "frontend/src/utils/FeatureComposition.ts",
    "signature": "export class ComposableFeature<T, U> implements FeatureComponent<T, U> {",
    "docstring": ""
  },
  {
    "name": "FeatureRegistry",
    "type": "class",
    "file": "frontend/src/utils/FeatureComposition.ts",
    "signature": "export class FeatureRegistry {",
    "docstring": ""
  },
  {
    "name": "FeatureFlags",
    "type": "class",
    "file": "frontend/src/utils/FeatureFlags.ts",
    "signature": "export class FeatureFlags {",
    "docstring": ""
  },
  {
    "name": "Logger",
    "type": "class",
    "file": "frontend/src/utils/logger.ts",
    "signature": "class Logger {",
    "docstring": ""
  },
  {
    "name": "get_logger",
    "type": "function",
    "file": "frontend/src/utils/logging.py",
    "signature": "def get_logger(name: str) -> logging.Logger:",
    "docstring": ""
  },
  {
    "name": "LogCapture",
    "type": "class",
    "file": "frontend/src/utils/logging.py",
    "signature": "class LogCapture:",
    "docstring": ""
  },
  {
    "name": "LogCapture",
    "type": "class",
    "file": "frontend/src/utils/logging.py",
    "signature": "class LogCapture:",
    "docstring": ""
  },
  {
    "name": "LogCaptureHandler",
    "type": "class",
    "file": "frontend/src/utils/logging.py",
    "signature": "class LogCaptureHandler(logging.Handler):",
    "docstring": ""
  },
  {
    "name": "LogCaptureHandler",
    "type": "class",
    "file": "frontend/src/utils/logging.py",
    "signature": "class LogCaptureHandler(logging.Handler):",
    "docstring": ""
  },
  {
    "name": "PerformanceMonitor",
    "type": "class",
    "file": "frontend/src/utils/PerformanceMonitor.ts",
    "signature": "export class PerformanceMonitor {",
    "docstring": ""
  },
  {
    "name": "PredictionEngine",
    "type": "class",
    "file": "frontend/src/utils/PredictionEngine.ts",
    "signature": "export class PredictionEngine {",
    "docstring": ""
  },
  {
    "name": "ProjectionAnalyzer",
    "type": "class",
    "file": "frontend/src/utils/ProjectionAnalyzer.ts",
    "signature": "export class ProjectionAnalyzer implements Analyzer<DailyFantasyData, ProjectionAnalysis[]> {",
    "docstring": ""
  },
  {
    "name": "ProjectionBettingStrategy",
    "type": "class",
    "file": "frontend/src/utils/ProjectionBettingStrategy.ts",
    "signature": "export class ProjectionBettingStrategy {",
    "docstring": ""
  },
  {
    "name": "safePercentage",
    "type": "function",
    "file": "frontend/src/utils/safeNumber.ts",
    "signature": "export function safePercentage(value: SafeNumberInput, decimals: number = 1): string {",
    "docstring": ""
  },
  {
    "name": "safeCompactNumber",
    "type": "function",
    "file": "frontend/src/utils/safeNumber.ts",
    "signature": "export function safeCompactNumber(value: SafeNumberInput, decimals: number = 1): string {",
    "docstring": ""
  },
  {
    "name": "SocialSentimentAdapter",
    "type": "class",
    "file": "frontend/src/utils/SocialSentimentAdapter.ts",
    "signature": "export class SocialSentimentAdapter implements DataSource<SocialSentimentData[]> {",
    "docstring": ""
  },
  {
    "name": "StrategyRegistry",
    "type": "class",
    "file": "frontend/src/utils/StrategyComposition.ts",
    "signature": "export class StrategyRegistry {",
    "docstring": ""
  },
  {
    "name": "ComposableStrategy",
    "type": "class",
    "file": "frontend/src/utils/StrategyComposition.ts",
    "signature": "export class ComposableStrategy<T, U> implements StrategyComponent<T, U> {",
    "docstring": ""
  },
  {
    "name": "StrategyEngine",
    "type": "class",
    "file": "frontend/src/utils/StrategyEngine.ts",
    "signature": "export class StrategyEngine {",
    "docstring": ""
  },
  {
    "name": "UnifiedAnalytics",
    "type": "class",
    "file": "frontend/src/utils/UnifiedAnalytics.ts",
    "signature": "export class UnifiedAnalytics {",
    "docstring": ""
  },
  {
    "name": "UnifiedBettingAnalytics",
    "type": "class",
    "file": "frontend/src/utils/UnifiedBettingAnalytics-MyPC.ts",
    "signature": "export class UnifiedBettingAnalytics extends EventEmitter {",
    "docstring": ""
  },
  {
    "name": "UnifiedBettingAnalytics",
    "type": "class",
    "file": "frontend/src/utils/UnifiedBettingAnalytics.ts",
    "signature": "export class UnifiedBettingAnalytics extends EventEmitter {",
    "docstring": ""
  },
  {
    "name": "UnifiedBettingCore",
    "type": "class",
    "file": "frontend/src/utils/UnifiedBettingCore.ts",
    "signature": "export class UnifiedBettingCore extends EventEmitter {",
    "docstring": ""
  },
  {
    "name": "safeNumber",
    "type": "function",
    "file": "frontend/src/utils/UniversalUtils.ts",
    "signature": "export function safeNumber(val: any, fallback: number = 0): number {",
    "docstring": ""
  },
  {
    "name": "EndpointTester",
    "type": "class",
    "file": "scripts/auto_endpoint_test.py",
    "signature": "class EndpointTester:",
    "docstring": ""
  },
  {
    "name": "EndpointTester",
    "type": "class",
    "file": "scripts/auto_endpoint_test.py",
    "signature": "class EndpointTester:",
    "docstring": ""
  }
]