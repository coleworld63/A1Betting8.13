# Redis Production Deployment for A1Betting7-13.2
# High-performance caching layer with persistence and monitoring

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: a1betting-prod
  labels:
    app: redis
    tier: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        tier: cache
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
        - name: redis
          image: redis:7-alpine
          command:
            - redis-server
            - /etc/redis/redis.conf
          ports:
            - containerPort: 6379
              name: redis
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: password
          volumeMounts:
            - name: redis-config
              mountPath: /etc/redis
            - name: redis-data
              mountPath: /data
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "200m"
          livenessProbe:
            exec:
              command:
                - redis-cli
                - --no-auth-warning
                - -a
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - redis-cli
                - --no-auth-warning
                - -a
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
        - name: redis-exporter
          image: oliver006/redis_exporter:latest
          env:
            - name: REDIS_ADDR
              value: "redis://localhost:6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: password
          ports:
            - containerPort: 9121
              name: metrics
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "64Mi"
              cpu: "100m"
      volumes:
        - name: redis-config
          configMap:
            name: redis-config
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-pvc

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: a1betting-prod
data:
  redis.conf: |
    # Redis Production Configuration
    bind 0.0.0.0
    port 6379
    requirepass ${REDIS_PASSWORD}

    # Persistence settings
    save 900 1
    save 300 10
    save 60 10000

    # Memory management
    maxmemory 450mb
    maxmemory-policy allkeys-lru

    # Security settings
    protected-mode yes

    # Logging
    loglevel notice
    logfile ""

    # Performance settings
    tcp-keepalive 300
    timeout 0

    # Append only file
    appendonly yes
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: a1betting-prod
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: a1betting-prod
  labels:
    app: redis
spec:
  ports:
    - port: 6379
      targetPort: 6379
      name: redis
    - port: 9121
      targetPort: 9121
      name: metrics
  selector:
    app: redis
  type: ClusterIP

---
# Redis Sentinel for High Availability (optional)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-sentinel
  namespace: a1betting-prod
  labels:
    app: redis-sentinel
spec:
  replicas: 3
  selector:
    matchLabels:
      app: redis-sentinel
  template:
    metadata:
      labels:
        app: redis-sentinel
    spec:
      containers:
        - name: redis-sentinel
          image: redis:7-alpine
          command:
            - redis-sentinel
            - /etc/redis-sentinel/sentinel.conf
          ports:
            - containerPort: 26379
              name: sentinel
          volumeMounts:
            - name: sentinel-config
              mountPath: /etc/redis-sentinel
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
      volumes:
        - name: sentinel-config
          configMap:
            name: redis-sentinel-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-sentinel-config
  namespace: a1betting-prod
data:
  sentinel.conf: |
    port 26379
    sentinel monitor redis-master redis-service 6379 2
    sentinel down-after-milliseconds redis-master 5000
    sentinel failover-timeout redis-master 10000
    sentinel parallel-syncs redis-master 1
    sentinel auth-pass redis-master ${REDIS_PASSWORD}

---
apiVersion: v1
kind: Service
metadata:
  name: redis-sentinel-service
  namespace: a1betting-prod
  labels:
    app: redis-sentinel
spec:
  ports:
    - port: 26379
      targetPort: 26379
      name: sentinel
  selector:
    app: redis-sentinel
  type: ClusterIP
